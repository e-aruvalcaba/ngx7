import { __values } from 'tslib';
import { DomSanitizer } from '@angular/platform-browser';
import { Router } from '@angular/router';
import { SessionService, CountryConfigService } from '@cemex-core/angular-services-v7';
import { TranslationService } from '@cemex-core/angular-localization-v7';
import { Broadcaster } from '@cemex-core/events-v7';
import { fromEvent } from 'rxjs';
import { debounceTime, distinctUntilChanged } from 'rxjs/operators';
import { Http } from '@angular/http';
import { CommonModule } from '@angular/common';
import { FormsModule, ReactiveFormsModule } from '@angular/forms';
import { Component, ElementRef, EventEmitter, Inject, Input, Output, ViewChild, Renderer, Optional, Directive, HostListener, NgModule } from '@angular/core';
import { FlexLayoutModule } from '@angular/flex-layout';
import { CmxDialogModule } from '@cemex/cmx-dialog-v7';
import { CmxButtonModule } from '@cemex/cmx-button-v4';

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @type {?} */
var HEADER_NOTIFICATION_UPDATE = 'cmx-nav-header_notification-update';
/** @type {?} */
var HEADER_NOTIFICATION_PUSH = 'cmx-nav-header_notification-push';

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var CmxNavHeaderComponent = /** @class */ (function () {
    function CmxNavHeaderComponent(sessionService, _translation, eventBroadcaster, countryConfigService, renderer, http, router, sanitizer, isRTL) {
        this.sessionService = sessionService;
        this._translation = _translation;
        this.eventBroadcaster = eventBroadcaster;
        this.countryConfigService = countryConfigService;
        this.renderer = renderer;
        this.http = http;
        this.router = router;
        this.sanitizer = sanitizer;
        this.clickMenuButton = new EventEmitter();
        // tslint:disable:no-output-on-prefix
        this.onSelectItemSearchEvent = new EventEmitter();
        this.onViewAllResultEvent = new EventEmitter();
        /**
         * @deprecated Subscribe to Broadcaster's DCM_APP_LOGOUT event instead
         */
        this.onLogout = new EventEmitter();
        this.onLanguageChange = new EventEmitter();
        this.rtl = false;
        this.useLanguageSelector = false;
        this.showCountrySupportContact = true;
        this.useInternalSettings = false;
        this.closeNotificationsOnCLick = false;
        this.disabledProfile = false;
        this.emails = [];
        this.phones = [];
        this.showAppNavigation = false;
        this._userInitials = '';
        this._showUserProfile = false;
        this._showLangList = false;
        this._languages = [];
        this._showNotifications = false;
        this._allNotifications = [];
        this._unReadNotification = [];
        this._openInput = false;
        this._currentLang = '';
        this._defaultRoute = '/login';
        this._profileRoute = '/profile';
        this._blueGreenCookieName = 'testingmode';
        this._blueGreenCookieValue = 'all';
        this._activeSearch = false;
        this._openSearchList = false;
        this._resultSearchList = [];
        this._openWaiting = false;
        this._noContainsData = false;
        this._currentIndexSearchList = -1;
        this._clickProfileIcon = false;
        this._useTranslationServer = false;
        this._showIconNotification = false;
        this._clickNotificationIcon = false;
        this._allNotificationDict = {};
        this._allRawNotifications = [];
        this._clickAppsIcon = false;
        this.notificationAction = new EventEmitter();
        this.showAllNotifications = new EventEmitter();
        if (isRTL !== undefined) {
            this.rtl = isRTL;
        }
        this.setUserInfo();
        this.setLanguages();
        this.setFeedback();
        this.setAppNavigation();
    }
    Object.defineProperty(CmxNavHeaderComponent.prototype, "_notificationsToShow", {
        get: /**
         * @return {?}
         */
        function () {
            var _this = this;
            /** @type {?} */
            var result = this._allNotifications.sort((/**
             * @param {?} notif1
             * @param {?} notif2
             * @return {?}
             */
            function (notif1, notif2) {
                if (notif1.typeNotification === notif2.typeNotification) {
                    if (notif1.viewed === notif2.viewed) {
                        return _this.compareNotificationFn(notif1, notif2);
                    }
                    else {
                        return notif1.viewed ? 1 : -1;
                    }
                }
                else {
                    return notif1.typeNotification > notif2.typeNotification ? 1 : -1;
                }
            }));
            return result.slice(0, 3);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CmxNavHeaderComponent.prototype, "language", {
        get: /**
         * @return {?}
         */
        function () {
            /** @type {?} */
            var tmp = this._languages.filter((/**
             * @param {?} lang
             * @return {?}
             */
            function (lang) { return lang.isSelected; }));
            return tmp.length > 0 ? tmp[0] : undefined;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CmxNavHeaderComponent.prototype, "activeSearch", {
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._activeSearch = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CmxNavHeaderComponent.prototype, "searchServiceList", {
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._subscriptionList = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CmxNavHeaderComponent.prototype, "notificationService", {
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._notificationService = value;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    CmxNavHeaderComponent.prototype.setAppNavigation = /**
     * @return {?}
     */
    function () {
        this.developerPortalUrl = this.sanitizer.bypassSecurityTrustUrl('https://developers.cemexgo.com/');
    };
    /**
     * @return {?}
     */
    CmxNavHeaderComponent.prototype.setFeedback = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var country = 'country';
        this.userCountry = sessionStorage[country];
        this.logo = this.userCountry === 'IL' ? 'readymix.co.il.white.svg' : 'cemex_mono_white.svg';
        this.logo =
            this._userProfile.customerId === 3025 &&
                this.userCountry === 'MX' &&
                (window.location.hostname.includes('dev2') || window.location.hostname.includes('demo'))
                ? 'neoris-logo.svg'
                : this.logo;
        if (this.userCountry === undefined) {
            return;
        }
        switch (this.userCountry) {
            case 'CO':
                this._formLangUrl = this.sanitizer.bypassSecurityTrustResourceUrl('https://cxgofeedback-colombia.ideas.aha.io');
                break;
            case 'CR':
                this._formLangUrl = this.sanitizer.bypassSecurityTrustResourceUrl('https://cxgofeedback-costarica.ideas.aha.io');
                break;
            case 'CZ':
                this._formLangUrl = this.sanitizer.bypassSecurityTrustResourceUrl('https://cxgofeedback-czechrepublic.ideas.aha.io');
                break;
            case 'EG':
                /* keeping formLangUrl as undefined so is not displayed on DOM.
                          this._formLangUrl =
                                this.sanitizer.bypassSecurityTrustResourceUrl("https://cxgofeedback-egypt.ideas.aha.io"); */
                break;
            case 'SV':
                this._formLangUrl = this.sanitizer.bypassSecurityTrustResourceUrl('https://cxgofeedback-elsalvador.ideas.aha.io');
                break;
            case 'DE':
                this._formLangUrl = this.sanitizer.bypassSecurityTrustResourceUrl('https://cxgofeedback-germany.ideas.aha.io');
                break;
            case 'GT':
                this._formLangUrl = this.sanitizer.bypassSecurityTrustResourceUrl('https://cxgofeedback-guatemala.ideas.aha.io');
                break;
            case 'IL':
                this._formLangUrl = this.sanitizer.bypassSecurityTrustResourceUrl('https://cxgofeedback-israel.ideas.aha.io');
                break;
            case 'LV':
                this._formLangUrl = this.sanitizer.bypassSecurityTrustResourceUrl('https://cxgofeedback-latvia.ideas.aha.io');
                break;
            case 'MX':
                this._formLangUrl = this.sanitizer.bypassSecurityTrustResourceUrl('https://cxgofeedback-mexico.ideas.aha.io');
                break;
            case 'NI':
                this._formLangUrl = this.sanitizer.bypassSecurityTrustResourceUrl('https://cxgofeedback-nicaragua.ideas.aha.io');
                break;
            case 'PA':
                this._formLangUrl = this.sanitizer.bypassSecurityTrustResourceUrl('https://cxgofeedback-panama.ideas.aha.io');
                break;
            case 'PE':
                this._formLangUrl = this.sanitizer.bypassSecurityTrustResourceUrl('https://cxgofeedback-peru.ideas.aha.io');
                break;
            case 'PH':
                this._formLangUrl = this.sanitizer.bypassSecurityTrustResourceUrl('https://cxgofeedback-philippines.ideas.aha.io');
                break;
            case 'PL':
                this._formLangUrl = this.sanitizer.bypassSecurityTrustResourceUrl('https://cxgofeedback-poland.ideas.aha.io');
                break;
            case 'PR':
                this._formLangUrl = this.sanitizer.bypassSecurityTrustResourceUrl('https://cxgofeedback-puertorico.ideas.aha.io');
                break;
            case 'DO':
                this._formLangUrl = this.sanitizer.bypassSecurityTrustResourceUrl('https://cxgofeedback-republicadominicana.ideas.aha.io');
                break;
            case 'GB':
                this._formLangUrl = this.sanitizer.bypassSecurityTrustResourceUrl('https://cxgofeedback-uk.ideas.aha.io');
                break;
            case 'US':
                this._formLangUrl = this.sanitizer.bypassSecurityTrustResourceUrl('https://cxgofeedback-usa.ideas.aha.io');
                break;
            case 'FR':
                this._formLangUrl = this.sanitizer.bypassSecurityTrustResourceUrl('https://cxgofeedback-france.ideas.aha.io');
                break;
            case 'ES':
                this._formLangUrl = this.sanitizer.bypassSecurityTrustResourceUrl('https://cxgofeedback-spain.ideas.aha.io');
                break;
            case 'AE':
                this._formLangUrl = this.sanitizer.bypassSecurityTrustResourceUrl('https://cxgofeedback-uae.ideas.aha.io');
                break;
            default:
                this._formLangUrl = this.sanitizer.bypassSecurityTrustResourceUrl('https://cxgofeedback-usa.ideas.aha.io');
                break;
        }
    };
    /**
     * @return {?}
     */
    CmxNavHeaderComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this.eventBroadcaster.on(Broadcaster.DCM_LANGUAGE_CHANGE).subscribe((/**
         * @return {?}
         */
        function () {
            _this.setFeedback();
        }));
        if (this.showCountrySupportContact) {
            this.getConfigCountry();
        }
        this._enableNotifications = this._notificationService && 'serviceWorker' in navigator;
        if (this._enableNotifications) {
            navigator.serviceWorker.addEventListener('message', (/**
             * @param {?} event
             * @return {?}
             */
            function (event) {
                /** @type {?} */
                var notification = event.data;
                // convert raw notification into a INotificationEntry to know its type notification
                /** @type {?} */
                var pushedNotification = _this._notificationService.mapNotification(notification);
                // get list of notifications by type notification
                /** @type {?} */
                var _notifications = _this._allNotificationDict[pushedNotification.typeNotification];
                // add push notification to list of notifications
                _this._allNotifications.push(pushedNotification);
                _notifications.push(pushedNotification);
                // notify new push notification to the INotificationService
                _this._notificationService.notificationSubscription.next({
                    notifications: _notifications,
                    typeNotification: pushedNotification.typeNotification,
                });
                // this subscription is used when service worker get a new notification
                _this._notificationService.pushedNotification.next({
                    notifications: [notification],
                    typeNotification: pushedNotification.typeNotification,
                });
                _this._unReadNotification = _this._allNotifications.filter((/**
                 * @param {?} n
                 * @return {?}
                 */
                function (n) { return !n.viewed; }));
            }));
        }
    };
    /**
     * @return {?}
     */
    CmxNavHeaderComponent.prototype.ngAfterViewInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        if (this.searchInput !== undefined) {
            /** @type {?} */
            var inputStream = fromEvent(this.searchInput.nativeElement, 'keyup').pipe(debounceTime(1), distinctUntilChanged());
            inputStream.subscribe((/**
             * @param {?} event
             * @return {?}
             */
            function (event) {
                var e_1, _a;
                // console.log('print event key:', event);
                /** @type {?} */
                var listResultLength = _this.getListResult().length;
                if (event.code === 'Enter' && event.target.value && event.target.value !== '') {
                    _this._resultSearchList = [];
                    _this._openSearchList = true;
                    _this._openWaiting = true;
                    if (_this._activeSearchResult) {
                        _this.onClickResultItem(_this._activeSearchResult);
                        _this._activeSearchResult = undefined;
                        return;
                    }
                    var _loop_1 = function (subscription) {
                        /** @type {?} */
                        var localSub = subscription.executeService(event.target.value).subscribe((/**
                         * @param {?} result
                         * @return {?}
                         */
                        function (result) {
                            _this._resultSearchList = _this._resultSearchList.concat(result);
                            _this._noContainsData = _this._resultSearchList.length === 0;
                            _this._openWaiting = _this._noContainsData;
                            _this._currentIndexSearchList = -1;
                            _this._activeSearchResult = undefined;
                        }), (/**
                         * @param {?} error
                         * @return {?}
                         */
                        function (error) {
                            _this._noContainsData = true;
                            console.warn(error);
                            localSub.unsubscribe();
                        }));
                    };
                    try {
                        for (var _b = __values(_this._subscriptionList), _c = _b.next(); !_c.done; _c = _b.next()) {
                            var subscription = _c.value;
                            _loop_1(subscription);
                        }
                    }
                    catch (e_1_1) { e_1 = { error: e_1_1 }; }
                    finally {
                        try {
                            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                        }
                        finally { if (e_1) throw e_1.error; }
                    }
                }
                else if (event.code === 'ArrowDown' && _this._resultSearchList.length > 0) {
                    _this._currentIndexSearchList++;
                    _this._currentIndexSearchList =
                        _this._currentIndexSearchList >= listResultLength ? 0 : _this._currentIndexSearchList;
                    _this._activeSearchResult = _this._resultSearchList[_this._currentIndexSearchList];
                }
                else if (event.code === 'ArrowUp' && _this._resultSearchList.length > 0) {
                    _this._currentIndexSearchList--;
                    _this._currentIndexSearchList =
                        _this._currentIndexSearchList < 0 ? listResultLength - 1 : _this._currentIndexSearchList;
                    _this._activeSearchResult = _this._resultSearchList[_this._currentIndexSearchList];
                }
                else if (event.code === 'Escape') {
                    _this._searchValue = '';
                    _this._openSearchList = false;
                    _this._resultSearchList = [];
                }
                else {
                    _this._activeSearchResult = undefined;
                    _this._resultSearchList = [];
                }
            }));
        }
    };
    /**
     * @param {?} changes
     * @return {?}
     */
    CmxNavHeaderComponent.prototype.ngOnChanges = /**
     * @param {?} changes
     * @return {?}
     */
    function (changes) {
        var _this = this;
        if (changes.notificationService && changes.notificationService.currentValue) {
            this._notificationSubscription = this._notificationService
                .executeNotificationService()
                .subscribe((/**
             * @param {?} notificationsDict
             * @return {?}
             */
            function (notificationsDict) {
                var e_2, _a, e_3, _b;
                // just comment it should clean _allNotifications in every call
                _this._allNotifications = [];
                /** @type {?} */
                var tmpKeys = Object.keys(notificationsDict);
                /** @type {?} */
                var notificationKeys = tmpKeys.sort();
                try {
                    for (var notificationKeys_1 = __values(notificationKeys), notificationKeys_1_1 = notificationKeys_1.next(); !notificationKeys_1_1.done; notificationKeys_1_1 = notificationKeys_1.next()) {
                        var notificationType = notificationKeys_1_1.value;
                        _this._allNotifications = _this._allNotifications.concat(notificationsDict[notificationType]);
                        /** @type {?} */
                        var rawNotifications = [];
                        try {
                            for (var _c = __values(notificationsDict[notificationType]), _d = _c.next(); !_d.done; _d = _c.next()) {
                                var notification = _d.value;
                                rawNotifications.push(notification.notificationData);
                            }
                        }
                        catch (e_3_1) { e_3 = { error: e_3_1 }; }
                        finally {
                            try {
                                if (_d && !_d.done && (_b = _c.return)) _b.call(_c);
                            }
                            finally { if (e_3) throw e_3.error; }
                        }
                        _this._notificationService.notificationSubscription.next({
                            notifications: rawNotifications,
                            typeNotification: Number(notificationType),
                        });
                    }
                }
                catch (e_2_1) { e_2 = { error: e_2_1 }; }
                finally {
                    try {
                        if (notificationKeys_1_1 && !notificationKeys_1_1.done && (_a = notificationKeys_1.return)) _a.call(notificationKeys_1);
                    }
                    finally { if (e_2) throw e_2.error; }
                }
                _this._unReadNotification = _this._allNotifications.filter((/**
                 * @param {?} notification
                 * @return {?}
                 */
                function (notification) { return !notification.viewed; }));
            }));
        }
        this._showIconNotification = this._notificationService !== null;
    };
    /**
     * @return {?}
     */
    CmxNavHeaderComponent.prototype.ngOnDestroy = /**
     * @return {?}
     */
    function () {
        this._translationSuscriber.unsubscribe();
    };
    /**
     * @return {?}
     */
    CmxNavHeaderComponent.prototype.setUserInfo = /**
     * @return {?}
     */
    function () {
        if (this.sessionService.userProfile && this.sessionService.userProfile !== undefined) {
            this._userProfile = this.sessionService.userProfile;
            /** @type {?} */
            var firstName = this._userProfile.firstName === 'undefined' || this._userProfile.firstName.trim() === null
                ? ''
                : this._userProfile.firstName.substring(0, 1);
            /** @type {?} */
            var lastName = typeof this._userProfile.lastName === 'undefined' || this._userProfile.lastName.trim() === null
                ? ''
                : this._userProfile.lastName.substring(0, 1);
            this._userInitials = firstName + lastName;
        }
    };
    /**
     * @return {?}
     */
    CmxNavHeaderComponent.prototype.showProfile = /**
     * @return {?}
     */
    function () {
        this._clickProfileIcon = true;
        this._showUserProfile = !this._showUserProfile;
    };
    /**
     * @return {?}
     */
    CmxNavHeaderComponent.prototype.setLanguages = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this._translationSuscriber = this._translation.getLanguages().subscribe((/**
         * @param {?} languages
         * @return {?}
         */
        function (languages) {
            // tslint:disable-next-line:no-console
            console.debug('New languages:', languages);
            _this._languages = languages;
        }), (/**
         * @param {?} error
         * @return {?}
         */
        function (error) {
            console.warn('Error at setting languages:', error);
        }));
    };
    /**
     * @return {?}
     */
    CmxNavHeaderComponent.prototype.openCountrySupportContactModal = /**
     * @return {?}
     */
    function () {
        this.countrySupportContactModal.open();
        this._showUserProfile = !this._showUserProfile;
    };
    /**
     * @return {?}
     */
    CmxNavHeaderComponent.prototype.onClickSearch = /**
     * @return {?}
     */
    function () {
        this._openInput = true;
        if (this.searchInput) {
            this.renderer.invokeElementMethod(this.searchInput.nativeElement, 'focus', []);
        }
    };
    /**
     * @return {?}
     */
    CmxNavHeaderComponent.prototype.onClickCancelSearch = /**
     * @return {?}
     */
    function () {
        this._openInput = false;
        this._searchValue = '';
        this._openSearchList = false;
    };
    /**
     * @return {?}
     */
    CmxNavHeaderComponent.prototype.gotoHome = /**
     * @return {?}
     */
    function () {
        window.location.href = '/';
    };
    /**
     * @return {?}
     */
    CmxNavHeaderComponent.prototype.goToSettings = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var path = this.customPathSettings && this.useInternalSettings ? this.customPathSettings : '/settings';
        if (this.useInternalSettings) {
            this._showUserProfile = false;
            this.router.navigate([path]);
        }
        else {
            window.location.href = path;
        }
    };
    /**
     * @param {?} name
     * @param {?} value
     * @param {?=} days
     * @return {?}
     */
    CmxNavHeaderComponent.prototype.createCookie = /**
     * @param {?} name
     * @param {?} value
     * @param {?=} days
     * @return {?}
     */
    function (name, value, days) {
        /** @type {?} */
        var expires = '';
        if (days) {
            /** @type {?} */
            var date = new Date();
            date.setTime(date.getTime() + days * 24 * 60 * 60 * 1000);
            expires = date.toUTCString();
        }
        else {
            days = 0;
        }
        /** @type {?} */
        var domain = ((/** @type {?} */ (window))).SITE_DOMAIN || '';
        /** @type {?} */
        var cookie = name + "=" + value + ";expires=" + expires + ";domain=" + (domain || '') + ";path=/";
        document.cookie = cookie;
    };
    /**
     * @return {?}
     */
    CmxNavHeaderComponent.prototype.isBlueGreen = /**
     * @return {?}
     */
    function () {
        return this.getCookie(this._blueGreenCookieName) === this._blueGreenCookieValue ? true : false;
    };
    /**
     * @return {?}
     */
    CmxNavHeaderComponent.prototype.toggleAppNavigation = /**
     * @return {?}
     */
    function () {
        this._clickAppsIcon = true;
        this.showAppNavigation = !this.showAppNavigation;
    };
    /**
     * @param {?} event
     * @return {?}
     */
    CmxNavHeaderComponent.prototype.clickAppNavigationOutside = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        if (!this._clickAppsIcon) {
            this.showAppNavigation = false;
        }
        this._clickAppsIcon = false;
    };
    /**
     * @param {?} event
     * @return {?}
     */
    CmxNavHeaderComponent.prototype.clickOutside = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        if (!this._clickProfileIcon) {
            this._showUserProfile = false;
        }
        this._clickProfileIcon = false;
    };
    /**
     * @return {?}
     */
    CmxNavHeaderComponent.prototype.showNotifications = /**
     * @return {?}
     */
    function () {
        this._clickNotificationIcon = true;
        if (this._allNotifications.length > 0) {
            this._showNotifications = !this._showNotifications;
        }
    };
    /**
     * @param {?} event
     * @return {?}
     */
    CmxNavHeaderComponent.prototype.clickNotificationOutSide = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        if (!this._clickNotificationIcon) {
            this._showNotifications = false;
        }
        this._clickNotificationIcon = false;
    };
    /**
     * @return {?}
     */
    CmxNavHeaderComponent.prototype.logout = /**
     * @return {?}
     */
    function () {
        if (this._notificationSubscription) {
            this._notificationSubscription.unsubscribe();
        }
        this.createCookie('up_session', '', -1);
        this.sessionService.logout().subscribe((/**
         * @param {?} result
         * @return {?}
         */
        function (result) {
            if (!result.success) {
                console.error('An error ocurred before logout:', result.message);
            }
            window.location.href = '/';
        }));
    };
    /**
     * @return {?}
     */
    CmxNavHeaderComponent.prototype.goToProfile = /**
     * @return {?}
     */
    function () {
        if (!this.disabledProfile) {
            window.location.href = '/profile';
        }
    };
    /**
     * @param {?} language
     * @return {?}
     */
    CmxNavHeaderComponent.prototype.selectLang = /**
     * @param {?} language
     * @return {?}
     */
    function (language) {
        // fix for DCM021CX0118-4041
        sessionStorage.setItem('language', language.languageISO);
        this._translation.setLanguage(language.languageISO);
        this.onLanguageChange.emit();
        this._showUserProfile = false;
        this.eventBroadcaster.broadcast(Broadcaster.DCM_LANGUAGE_CHANGE, language.languageISO);
    };
    /**
     * @param {?} notification
     * @return {?}
     */
    CmxNavHeaderComponent.prototype.callNotificationAction = /**
     * @param {?} notification
     * @return {?}
     */
    function (notification) {
        notification.viewed = true;
        this._notificationService
            .updateNotification([notification.notificationData], notification.typeNotification)
            .subscribe();
        if (this.closeNotificationsOnCLick) {
            this._showNotifications = false;
        }
        this.notificationAction.emit(notification);
    };
    /**
     * @return {?}
     */
    CmxNavHeaderComponent.prototype.onAllNotification = /**
     * @return {?}
     */
    function () {
        if (this.closeNotificationsOnCLick) {
            this._showNotifications = false;
        }
        this.showAllNotifications.emit(this._allNotifications);
    };
    /**
     * @param {?} notification
     * @return {?}
     */
    CmxNavHeaderComponent.prototype.getIconNotification = /**
     * @param {?} notification
     * @return {?}
     */
    function (notification) {
        /** @type {?} */
        var result = notification.notificationIcon === undefined ? 'icon-warning-red' : notification.notificationIcon;
        return !notification.viewed ? result : 'icon-no-fill';
    };
    /**
     * @private
     * @param {?} name
     * @return {?}
     */
    CmxNavHeaderComponent.prototype.getCookie = /**
     * @private
     * @param {?} name
     * @return {?}
     */
    function (name) {
        /** @type {?} */
        var match = document.cookie.match(new RegExp("(^| )" + name + "=([^;]+)")) || [];
        return match[2] ? match[2] : '';
    };
    /**
     * @private
     * @return {?}
     */
    CmxNavHeaderComponent.prototype.goHome = /**
     * @private
     * @return {?}
     */
    function () {
        window.location.href = '/';
    };
    /**
     * @private
     * @return {?}
     */
    CmxNavHeaderComponent.prototype.getListResult = /**
     * @private
     * @return {?}
     */
    function () {
        return this._resultSearchList.length > 2 ? this._resultSearchList.slice(0, 2) : this._resultSearchList;
    };
    /**
     * @private
     * @param {?} item
     * @return {?}
     */
    CmxNavHeaderComponent.prototype.onClickResultItem = /**
     * @private
     * @param {?} item
     * @return {?}
     */
    function (item) {
        this.onSelectItemSearchEvent.emit(item);
        this._openSearchList = false;
    };
    /**
     * @private
     * @return {?}
     */
    CmxNavHeaderComponent.prototype.onClickViewAll = /**
     * @private
     * @return {?}
     */
    function () {
        this.onViewAllResultEvent.emit(this._resultSearchList);
        this._openSearchList = false;
    };
    /**
     * @private
     * @param {?} noContainsData
     * @return {?}
     */
    CmxNavHeaderComponent.prototype.getMessageResult = /**
     * @private
     * @param {?} noContainsData
     * @return {?}
     */
    function (noContainsData) {
        return noContainsData ? 'Data not found' : 'Searching Data...';
    };
    /**
     * @private
     * @param {?} notif1
     * @param {?} notif2
     * @return {?}
     */
    CmxNavHeaderComponent.prototype.compareNotificationFn = /**
     * @private
     * @param {?} notif1
     * @param {?} notif2
     * @return {?}
     */
    function (notif1, notif2) {
        if (notif1.notificationDate === notif2.notificationDate) {
            return 0;
        }
        else if (notif1.notificationDate > notif2.notificationDate) {
            return 1;
        }
        else {
            return -1;
        }
    };
    /**
     * @private
     * @return {?}
     */
    CmxNavHeaderComponent.prototype.getConfigCountry = /**
     * @private
     * @return {?}
     */
    function () {
        var _this = this;
        this.countryConfigService.countryConfig.subscribe((/**
         * @param {?} configCountry
         * @return {?}
         */
        function (configCountry) {
            if (configCountry !== null) {
                _this._countryConfig = configCountry;
                if (_this._countryConfig.email && Boolean(_this._countryConfig.email)) {
                    /** @type {?} */
                    var emailsArr = _this._countryConfig.email.split(',');
                    _this.emails = emailsArr;
                }
                if (_this._countryConfig.phoneNumber && Boolean(_this._countryConfig.phoneNumber)) {
                    /** @type {?} */
                    var phonesArr = _this._countryConfig.phoneNumber.split(',');
                    _this.phones = phonesArr;
                }
                if (!Boolean(_this._countryConfig.email) && !Boolean(_this._countryConfig.phoneNumber)) {
                    _this.showCountrySupportContact = false;
                }
            }
            else {
                console.warn("Unable to retrieve country information for " + sessionStorage.getItem('country'));
            }
        }), (/**
         * @param {?} error
         * @return {?}
         */
        function (error) {
            console.error("Unable to retrieve country information for " + sessionStorage.getItem('country'), error);
        }));
    };
    CmxNavHeaderComponent.USE_TRANSLATION_SERVER = 'USE_TRANSLATION_SERVER';
    CmxNavHeaderComponent.decorators = [
        { type: Component, args: [{
                    // tslint:disable-next-line:component-selector
                    selector: 'cmx-nav-header',
                    template: "<nav class=\"cmx-main-nav-header\" [ngClass]=\"{ 'bg__bright-green': isBlueGreen() }\" [dir]=\"rtl ? 'rtl' : 'ltr'\">\r\n  <div class=\"cmx-header-logo\">\r\n    <img\r\n      id=\"cmx-header-logo-link\"\r\n      class=\"cmx-header-logo__link\"\r\n      [ngClass]=\"userCountry == 'IL' ? 'cmx-logo-il' : 'cmx-logo'\"\r\n      (click)=\"gotoHome()\"\r\n      src=\"{{ 'https://www.cemexgo.com/cdn/logos/svg/' + logo }}\"\r\n    />\r\n  </div>\r\n\r\n  <div class=\"cmx-main-nav-header__items\">\r\n    <!-- FEEDBACK BUTTON -->\r\n    <div class=\"cmx-main-nav-header__item user-menu\" *ngIf=\"_formLangUrl\">\r\n      <div>\r\n        <div\r\n          class=\"cmx-main-nav-header__icon-label hidden-xs-down\"\r\n          (click)=\"this.feedbackDialog.open()\"\r\n          id=\"cmx-header-feedback\"\r\n        >\r\n          {{ _translation.pt('views.header.feedbackDialog.feedBackTitle') }}\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <!-- END FEEDBACK BUTTON -->\r\n    <div class=\"cmx-main-nav-header__item-separator\" *ngIf=\"_formLangUrl\"></div>\r\n    <!-- NOTIFICATIONS -->\r\n    <div class=\"cmx-main-nav-header__item nav-notifications-item\" *ngIf=\"_enableNotifications\">\r\n      <div\r\n        class=\"cmx-notifications popout__toggle\"\r\n        data-popout-target=\"#notificationsPopout\"\r\n        (click)=\"showNotifications()\"\r\n      >\r\n        <div class=\"cmx-main-nav-header__icon-label hidden-xs-down\">\r\n          {{ _translation.pt('views.header.lbl-notifications') }}\r\n        </div>\r\n        <div\r\n          class=\"cmx-main-nav-header__icon\"\r\n          [class.cmx-main-nav-header__icon--alert]=\"_allNotifications.length\"\r\n          [class.cmx-main-nav-header__icon--inverted]=\"!_allNotifications.length\"\r\n        >\r\n          {{ _unReadNotification.length }}\r\n        </div>\r\n      </div>\r\n      <div\r\n        id=\"notificationsPopout\"\r\n        *ngIf=\"_showNotifications\"\r\n        class=\"cmx-notifications__container popout popout--bottom-left\"\r\n        [class.hidden]=\"!_showNotifications\"\r\n        (clickOutside)=\"clickNotificationOutSide($event)\"\r\n      >\r\n        <div class=\"cmx-notifications__list\">\r\n          <div class=\"cmx-notifications__entry\" *ngFor=\"let notification of _notificationsToShow\">\r\n            <div class=\"cmx-notifications__entry-icon\">\r\n              <span class=\"cmx-icon-warning\" [ngClass]=\"getIconNotification(notification)\"></span>\r\n            </div>\r\n            <div class=\"cmx-notifications__entry-data\">\r\n              <h4 class=\"cmx-notifications__entry-title\">{{ _translation.pt(notification.titleNotification) }}</h4>\r\n              <p class=\"cmx-notifications__entry-text\">{{ notification.message }}</p>\r\n              <p class=\"cmx-notifications__entry-text\">{{ notification.subMessage }}</p>\r\n              <a class=\"cmx-notifications__entry-cta\" (click)=\"callNotificationAction(notification)\">{{\r\n                _translation.pt(notification.optionCommand)\r\n              }}</a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <a class=\"cmx-notifications__main-call-to-action\" (click)=\"onAllNotification()\">{{\r\n          _translation.pt('views.header.all-notifications')\r\n        }}</a>\r\n      </div>\r\n    </div>\r\n    <div class=\"cmx-main-nav-header__item-separator\" *ngIf=\"_enableNotifications\"></div>\r\n    <!-- END NOTIFICATIONS -->\r\n\r\n    <!-- START APP NAVIGATION CODE -->\r\n    <div class=\"cmx-main-nav-header__item cmx-console-menu\">\r\n      <div class=\"popout__toggle\" data-popout-target=\"#consolesPopout\" (click)=\"toggleAppNavigation()\">\r\n        <div class=\"cmx-main-nav-header__icon\" aria-hidden=\"true\">\r\n          <span class=\"cmx-icon-modules-internal-consoles font-true-white\" aria-hidden=\"true\"></span>\r\n        </div>\r\n      </div>\r\n      <div\r\n        id=\"consolesPopout\"\r\n        *ngIf=\"showAppNavigation\"\r\n        class=\"cmx-console-menu__popout popout popout--bottom-left\"\r\n        [class.hidden]=\"!showAppNavigation\"\r\n        (clickOutside)=\"clickAppNavigationOutside($event)\"\r\n      >\r\n        <h3 class=\"cmx-console-menu__heading\">CEMEX Apps</h3>\r\n        <ul class=\"cmx-console-menu__list\">\r\n          <li class=\"cmx-console-menu__item\" role=\"button\">\r\n            <a class=\"cmx-console-menu__item-link\" target=\"_blank\" [href]=\"developerPortalUrl\">\r\n              <div class=\"cmx-console-menu__item-icon\">\r\n                <span class=\"cmx-icon-brakets cmx-console-menu__item-inner-icon\" aria-hidden=\"true\"></span>\r\n              </div>\r\n              <span class=\"cmx-console-menu__item-label\">\r\n                {{ _translation.pt('views.header.developerCenter') }}\r\n              </span>\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n    <div class=\"cmx-main-nav-header__item-separator\"></div>\r\n    <!-- END APP NAVIGATION CODE -->\r\n\r\n    <!-- USER INFO -->\r\n    <div class=\"cmx-main-nav-header__item user-menu\" *ngIf=\"_userProfile\">\r\n      <div class=\"user-menu-wrapper\">\r\n        <div\r\n          id=\"cmx-header-profile-menu\"\r\n          (click)=\"showProfile()\"\r\n          class=\"cmx-user-menu__icon popout__toggle\"\r\n          data-popout-target=\"#userMenuPopout\"\r\n        >\r\n          <div class=\"cmx-main-nav-header__icon cmx-main-nav-header__icon--inverted\">\r\n            {{ _userInitials | uppercase }}\r\n          </div>\r\n        </div>\r\n        <div\r\n          id=\"userMenuPopout\"\r\n          [class.open]=\"_showUserProfile\"\r\n          (clickOutside)=\"clickOutside($event)\"\r\n          class=\"cmx-user-menu__container popout popout--bottom-left popout--with-border\"\r\n        >\r\n          <div\r\n            class=\"cmx-user-menu__user\"\r\n            id=\"cmx-header-profile-link\"\r\n            [class.cursor-auto]=\"disabledProfile\"\r\n            (click)=\"goToProfile()\"\r\n          >\r\n            <div class=\"cmx-main-nav-header__icon cmx-main-nav-header__icon--regular cmx-user-menu__user-icon\">\r\n              {{ _userInitials | uppercase }}\r\n            </div>\r\n            <div class=\"cmx-user-menu__user-details\">\r\n              <h4 class=\"cmx-user-menu__user-name\">{{ _userProfile?.fullName }}</h4>\r\n              <span class=\"cmx-user-menu__user-email\">{{ _userProfile?.userAccount }}</span>\r\n            </div>\r\n            <!-- end .user-menu-details -->\r\n          </div>\r\n          <div *ngIf=\"useLanguageSelector\">\r\n            <div class=\"cmx-language accordion open\">\r\n              <div\r\n                (click)=\"_showLangList = !_showLangList\"\r\n                class=\"cmx-language__heading accordion__heading\"\r\n                [class.cmx-language__heading--up]=\"_showLangList\"\r\n                [class.cmx-language__heading--down]=\"!_showLangList\"\r\n                role=\"button\"\r\n              >\r\n                {{ _translation.pt('views.header.lbl_language') }}\r\n              </div>\r\n              <div *ngIf=\"_showLangList\" class=\"cmx-language__options accordion__data\">\r\n                <ul class=\"cmx-language__options-list\">\r\n                  <ng-container *ngFor=\"let language of _languages\">\r\n                    <li\r\n                      class=\"cmx-language__options-item\"\r\n                      [class.active]=\"language.isSelected\"\r\n                      role=\"button\"\r\n                      (click)=\"selectLang(language)\"\r\n                    >\r\n                      {{ language.languageName }}\r\n                    </li>\r\n                  </ng-container>\r\n                </ul>\r\n              </div>\r\n              <!-- end .language-selector -->\r\n            </div>\r\n          </div>\r\n          <div class=\"cmx-user-menu__settings\" *ngIf=\"!useLanguageSelector\">\r\n            <button cmx-link id=\"cmx-header-settings-link\" (click)=\"goToSettings()\">\r\n              {{ _translation.pt('views.header.lbl_settings') }}\r\n            </button>\r\n          </div>\r\n          <!-- end .user-menu__settings -->\r\n          <div class=\"cmx-user-menu__settings\" *ngIf=\"showCountrySupportContact && _countryConfig\">\r\n            <button cmx-link id=\"cmx-header-country-support-button\" (click)=\"openCountrySupportContactModal()\">\r\n              {{ _translation.pt('views.header.lbl_contact') }}\r\n            </button>\r\n          </div>\r\n          <!-- end .user-support_contact -->\r\n          <div class=\"cmx-user-menu__sign-out\">\r\n            <button cmx-link id=\"cmx-header-logout-link\" (click)=\"logout()\" class=\"cmx-user-menu__sign-out-link\">\r\n              {{ _translation.pt('views.header.lbl_logout') }}\r\n            </button>\r\n          </div>\r\n          <!-- end .user-menu__sign-out -->\r\n          <!-- end .user-menu-container -->\r\n        </div>\r\n      </div>\r\n      <!-- END USER INFO -->\r\n    </div>\r\n  </div>\r\n  <div class=\"cmx-sub-nav-loader\"></div>\r\n</nav>\r\n\r\n<cmx-dialog #feedbackDialog class=\"cmx-dialog\" [rtl]=\"rtl\" *ngIf=\"_formLangUrl\">\r\n  <cmx-dialog-body>\r\n    <iframe class=\"cmx-dialog__iframe\" [src]=\"_formLangUrl\"></iframe>\r\n  </cmx-dialog-body>\r\n</cmx-dialog>\r\n\r\n<cmx-dialog\r\n  [enableHeader]=\"true\"\r\n  templateId=\"cmx-header-country-support-contact-modal\"\r\n  class=\"cmx-dialog\"\r\n  [rtl]=\"rtl\"\r\n  #countrySupportContactModal\r\n>\r\n  <cmx-dialog-header>\r\n    <h1 class=\"cmx-dialog-title\">{{ _translation.pt('views.header.modal.contactTitle') }}</h1>\r\n  </cmx-dialog-header>\r\n  <cmx-dialog-body>\r\n    <div class=\"cmx-dialog-content\">\r\n      <div class=\"cmx-dialog-content__row\">\r\n        <div *ngFor=\"let email of emails; let i = index\">\r\n          <span\r\n            [ngStyle]=\"{ visibility: i === 0 ? 'visible' : 'hidden' }\"\r\n            class=\"cmx-dialog-content__icon cmx-icon-e-mail\"\r\n          ></span>\r\n          <span class=\"cmx-dialog-content__label\"> {{ email }} </span>\r\n        </div>\r\n      </div>\r\n      <div class=\"cmx-dialog-content__row\">\r\n        <div *ngFor=\"let phone of phones; let i = index\" [dir]=\"rtl ? 'rtl' : 'ltr'\">\r\n          <span\r\n            [dir]=\"rtl ? 'rtl' : 'ltr'\"\r\n            [ngStyle]=\"{ visibility: i === 0 ? 'visible' : 'hidden' }\"\r\n            class=\"cmx-dialog-content__icon cmx-icon-phone\"\r\n          ></span>\r\n          <span class=\"cmx-dialog-content__label\"> {{ phone }} </span>\r\n          <div id=\"cmx-header-dialog-schedule\" *ngIf=\"userCountry === 'IL'\">\r\n            <br />\r\n            <span [dir]=\"rtl ? 'rtl' : 'ltr'\" class=\"cmx-dialog-content__label\">{{\r\n              _translation.pt('views.header.modal.openHours')\r\n            }}</span>\r\n            <br />\r\n            <span [dir]=\"rtl ? 'rtl' : 'ltr'\" class=\"cmx-dialog-content__label\">{{\r\n              _translation.pt('views.header.modal.schedule')\r\n            }}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </cmx-dialog-body>\r\n</cmx-dialog>\r\n",
                    styles: ["@import url(https://www.cemexgo.com/cdn/cmx-dls-icons.css);.font-true-red{color:#ee3d42}.font-true-white{color:#fff}.font-true-black{color:#000}.font-true-blue{color:#003876}.font-medium-blue{color:#002a59}.font-medium-grey{color:#666}.font-dark-grey{color:#333}.font-bright-orange{color:#fbb03b}.font-bright-green{color:#7ac943}.font-bright-blue{color:#3fa9f5}.font-deep-blue{color:#001b3a}.bg__true-red{background-color:#ee3d42}.bg__true-white{background-color:#fff}.bg__true-black{background-color:#000}.bg__true-blue{background-color:#003876}.bg__medium-blue{background-color:#002a59}.bg__medium-grey{background-color:#666}.bg__dark-grey{background-color:#333}.bg__bright-orange{background-color:#fbb03b}.bg__bright-green{background-color:#7ac943}.bg__bright-blue{background-color:#3fa9f5}.bg__deep-blue{background-color:#001b3a}@font-face{font-family:Roboto;font-family:Roboto-Thin;font-weight:100}@font-face{font-family:Roboto;src:url(https://www.cemexgo.com/cdn/fonts/Roboto-Light.ttf);font-weight:300}@font-face{font-family:Roboto;src:url(https://www.cemexgo.com/cdn/fonts/Roboto-Regular.ttf);font-weight:400}@font-face{font-family:Roboto;src:url(https://www.cemexgo.com/cdn/fonts/Roboto-Italic.ttf);font-weight:400;font-style:italic}@font-face{font-family:Roboto;src:url(https://www.cemexgo.com/cdn/fonts/Roboto-Medium.ttf);font-weight:500}@font-face{font-family:Roboto;src:url(https://www.cemexgo.com/cdn/fonts/Roboto-Bold.ttf);font-weight:700}@font-face{font-family:Roboto;src:url(https://www.cemexgo.com/cdn/fonts/Roboto-Black.ttf);font-weight:800}.roboto-bold{font-family:Roboto;font-weight:700}.roboto-medium{font-family:Roboto;font-weight:500}.roboto-regular{font-family:Roboto;font-weight:400}.roboto-light{font-family:Roboto;font-weight:300}.roboto-thin{font-family:Roboto;font-weight:100}.roboto-italic{font-family:Roboto;font-style:italic}.font-bold{font-weight:700}.font-medium{font-weight:500}.font-regular{font-weight:400}.font-light{font-weight:300}.font-thin{font-weight:100}.font-italic{font-style:italic}.h1-role,h1{font-family:Roboto,sans-serif;font-size:1.875rem;line-height:1.875rem;font-weight:700;color:#001b3a}.h2-role,h2{font-family:Roboto,sans-serif;font-size:1.5rem;line-height:1.5rem;font-weight:500;color:#001b3a}.h3-role,h3{font-family:Roboto,sans-serif;font-size:1.125rem;line-height:1.125rem;font-weight:400;color:#001b3a}.h4-role,h4{font-family:Roboto,sans-serif;font-size:1rem;line-height:1rem;font-weight:400;color:#001b3a}.h5-role,h5{font-family:Roboto,sans-serif;font-size:.875rem;line-height:1rem;font-weight:500;color:#001b3a;text-transform:uppercase}.h6-role,h6{font-family:Roboto,sans-serif;font-size:.75rem;line-height:1rem;font-weight:500;color:#001b3a}.table-entry-strong{font-family:Roboto,sans-serif;font-size:.875rem;line-height:1rem;color:#333;font-weight:700}.breadcrumb{font-family:Roboto,sans-serif;font-size:1.125rem;color:#001b3a}a{text-decoration:none;color:#3fa9f5}a:hover{text-decoration:underline;color:#3fa9f5}a:active{text-decoration:underline;color:#003876}a.disabled{text-decoration:none;color:#666;cursor:not-allowed}a.table-entry{font-size:.875rem;color:#3fa9f5}.link{text-decoration:none;color:#3fa9f5}.link:hover{text-decoration:underline;color:#3fa9f5}.link:active{text-decoration:underline;color:#003876}.link.disabled{text-decoration:none;color:#666;cursor:not-allowed}.table-entry{font-family:Roboto,sans-serif;line-height:1rem;font-size:.875rem;color:#333}.input-placeholder{font-family:Roboto,sans-serif;font-size:.875rem;line-height:1rem;color:#666}.input-text{font-family:Roboto,sans-serif;font-size:.875rem;line-height:1rem;color:#333}.size-14{font-size:.875rem}.size-48{font-size:3rem}.text-left{text-align:left!important}.text-right{text-align:right!important}.text-center{text-align:center!important}.flex-first{order:-1}.flex-last{order:1}.flex-unordered{order:0}.flex-row{flex-direction:row!important}.flex-column{flex-direction:column!important}.flex-row-reverse{flex-direction:row-reverse!important}.flex-column-reverse{flex-direction:column-reverse!important}.flex-wrap{flex-wrap:wrap!important}.flex-nowrap{flex-wrap:nowrap!important}.flex-wrap-reverse{flex-wrap:wrap-reverse!important}.justify-content-start{justify-content:flex-start!important}.justify-content-end{justify-content:flex-end!important}.justify-content-center{justify-content:center!important}.justify-content-between{justify-content:space-between!important}.justify-content-around{justify-content:space-around!important}.align-items-start{align-items:flex-start!important}.align-items-end{align-items:flex-end!important}.align-items-center{align-items:center!important}.align-items-baseline{align-items:baseline!important}.align-items-stretch{align-items:stretch!important}.align-content-start{align-content:flex-start!important}.align-content-end{align-content:flex-end!important}.align-content-center{align-content:center!important}.align-content-between{align-content:space-between!important}.align-content-around{align-content:space-around!important}.align-content-stretch{align-content:stretch!important}.align-self-auto{-ms-grid-row-align:auto!important;align-self:auto!important}.align-self-start{align-self:flex-start!important}.align-self-end{align-self:flex-end!important}.align-self-center{-ms-grid-row-align:center!important;align-self:center!important}.align-self-baseline{align-self:baseline!important}.align-self-stretch{-ms-grid-row-align:stretch!important;align-self:stretch!important}@media (min-width:576px){.text-xs-left{text-align:left!important}.text-xs-right{text-align:right!important}.text-xs-center{text-align:center!important}.flex-xs-first{order:-1}.flex-xs-last{order:1}.flex-xs-unordered{order:0}.flex-xs-row{flex-direction:row!important}.flex-xs-column{flex-direction:column!important}.flex-xs-row-reverse{flex-direction:row-reverse!important}.flex-xs-column-reverse{flex-direction:column-reverse!important}.flex-xs-wrap{flex-wrap:wrap!important}.flex-xs-nowrap{flex-wrap:nowrap!important}.flex-xs-wrap-reverse{flex-wrap:wrap-reverse!important}.justify-content-xs-start{justify-content:flex-start!important}.justify-content-xs-end{justify-content:flex-end!important}.justify-content-xs-center{justify-content:center!important}.justify-content-xs-between{justify-content:space-between!important}.justify-content-xs-around{justify-content:space-around!important}.align-items-xs-start{align-items:flex-start!important}.align-items-xs-end{align-items:flex-end!important}.align-items-xs-center{align-items:center!important}.align-items-xs-baseline{align-items:baseline!important}.align-items-xs-stretch{align-items:stretch!important}.align-content-xs-start{align-content:flex-start!important}.align-content-xs-end{align-content:flex-end!important}.align-content-xs-center{align-content:center!important}.align-content-xs-between{align-content:space-between!important}.align-content-xs-around{align-content:space-around!important}.align-content-xs-stretch{align-content:stretch!important}.align-self-xs-auto{-ms-grid-row-align:auto!important;align-self:auto!important}.align-self-xs-start{align-self:flex-start!important}.align-self-xs-end{align-self:flex-end!important}.align-self-xs-center{-ms-grid-row-align:center!important;align-self:center!important}.align-self-xs-baseline{align-self:baseline!important}.align-self-xs-stretch{-ms-grid-row-align:stretch!important;align-self:stretch!important}}@media (min-width:768px){.text-sm-left{text-align:left!important}.text-sm-right{text-align:right!important}.text-sm-center{text-align:center!important}.flex-sm-first{order:-1}.flex-sm-last{order:1}.flex-sm-unordered{order:0}.flex-sm-row{flex-direction:row!important}.flex-sm-column{flex-direction:column!important}.flex-sm-row-reverse{flex-direction:row-reverse!important}.flex-sm-column-reverse{flex-direction:column-reverse!important}.flex-sm-wrap{flex-wrap:wrap!important}.flex-sm-nowrap{flex-wrap:nowrap!important}.flex-sm-wrap-reverse{flex-wrap:wrap-reverse!important}.justify-content-sm-start{justify-content:flex-start!important}.justify-content-sm-end{justify-content:flex-end!important}.justify-content-sm-center{justify-content:center!important}.justify-content-sm-between{justify-content:space-between!important}.justify-content-sm-around{justify-content:space-around!important}.align-items-sm-start{align-items:flex-start!important}.align-items-sm-end{align-items:flex-end!important}.align-items-sm-center{align-items:center!important}.align-items-sm-baseline{align-items:baseline!important}.align-items-sm-stretch{align-items:stretch!important}.align-content-sm-start{align-content:flex-start!important}.align-content-sm-end{align-content:flex-end!important}.align-content-sm-center{align-content:center!important}.align-content-sm-between{align-content:space-between!important}.align-content-sm-around{align-content:space-around!important}.align-content-sm-stretch{align-content:stretch!important}.align-self-sm-auto{-ms-grid-row-align:auto!important;align-self:auto!important}.align-self-sm-start{align-self:flex-start!important}.align-self-sm-end{align-self:flex-end!important}.align-self-sm-center{-ms-grid-row-align:center!important;align-self:center!important}.align-self-sm-baseline{align-self:baseline!important}.align-self-sm-stretch{-ms-grid-row-align:stretch!important;align-self:stretch!important}}@media (min-width:1080px){.text-md-left{text-align:left!important}.text-md-right{text-align:right!important}.text-md-center{text-align:center!important}.flex-md-first{order:-1}.flex-md-last{order:1}.flex-md-unordered{order:0}.flex-md-row{flex-direction:row!important}.flex-md-column{flex-direction:column!important}.flex-md-row-reverse{flex-direction:row-reverse!important}.flex-md-column-reverse{flex-direction:column-reverse!important}.flex-md-wrap{flex-wrap:wrap!important}.flex-md-nowrap{flex-wrap:nowrap!important}.flex-md-wrap-reverse{flex-wrap:wrap-reverse!important}.justify-content-md-start{justify-content:flex-start!important}.justify-content-md-end{justify-content:flex-end!important}.justify-content-md-center{justify-content:center!important}.justify-content-md-between{justify-content:space-between!important}.justify-content-md-around{justify-content:space-around!important}.align-items-md-start{align-items:flex-start!important}.align-items-md-end{align-items:flex-end!important}.align-items-md-center{align-items:center!important}.align-items-md-baseline{align-items:baseline!important}.align-items-md-stretch{align-items:stretch!important}.align-content-md-start{align-content:flex-start!important}.align-content-md-end{align-content:flex-end!important}.align-content-md-center{align-content:center!important}.align-content-md-between{align-content:space-between!important}.align-content-md-around{align-content:space-around!important}.align-content-md-stretch{align-content:stretch!important}.align-self-md-auto{-ms-grid-row-align:auto!important;align-self:auto!important}.align-self-md-start{align-self:flex-start!important}.align-self-md-end{align-self:flex-end!important}.align-self-md-center{-ms-grid-row-align:center!important;align-self:center!important}.align-self-md-baseline{align-self:baseline!important}.align-self-md-stretch{-ms-grid-row-align:stretch!important;align-self:stretch!important}}@media (min-width:1320px){.text-lg-left{text-align:left!important}.text-lg-right{text-align:right!important}.text-lg-center{text-align:center!important}.flex-lg-first{order:-1}.flex-lg-last{order:1}.flex-lg-unordered{order:0}.flex-lg-row{flex-direction:row!important}.flex-lg-column{flex-direction:column!important}.flex-lg-row-reverse{flex-direction:row-reverse!important}.flex-lg-column-reverse{flex-direction:column-reverse!important}.flex-lg-wrap{flex-wrap:wrap!important}.flex-lg-nowrap{flex-wrap:nowrap!important}.flex-lg-wrap-reverse{flex-wrap:wrap-reverse!important}.justify-content-lg-start{justify-content:flex-start!important}.justify-content-lg-end{justify-content:flex-end!important}.justify-content-lg-center{justify-content:center!important}.justify-content-lg-between{justify-content:space-between!important}.justify-content-lg-around{justify-content:space-around!important}.align-items-lg-start{align-items:flex-start!important}.align-items-lg-end{align-items:flex-end!important}.align-items-lg-center{align-items:center!important}.align-items-lg-baseline{align-items:baseline!important}.align-items-lg-stretch{align-items:stretch!important}.align-content-lg-start{align-content:flex-start!important}.align-content-lg-end{align-content:flex-end!important}.align-content-lg-center{align-content:center!important}.align-content-lg-between{align-content:space-between!important}.align-content-lg-around{align-content:space-around!important}.align-content-lg-stretch{align-content:stretch!important}.align-self-lg-auto{-ms-grid-row-align:auto!important;align-self:auto!important}.align-self-lg-start{align-self:flex-start!important}.align-self-lg-end{align-self:flex-end!important}.align-self-lg-center{-ms-grid-row-align:center!important;align-self:center!important}.align-self-lg-baseline{align-self:baseline!important}.align-self-lg-stretch{-ms-grid-row-align:stretch!important;align-self:stretch!important}}@media (min-width:1560px){.text-xlg-left{text-align:left!important}.text-xlg-right{text-align:right!important}.text-xlg-center{text-align:center!important}.flex-xlg-first{order:-1}.flex-xlg-last{order:1}.flex-xlg-unordered{order:0}.flex-xlg-row{flex-direction:row!important}.flex-xlg-column{flex-direction:column!important}.flex-xlg-row-reverse{flex-direction:row-reverse!important}.flex-xlg-column-reverse{flex-direction:column-reverse!important}.flex-xlg-wrap{flex-wrap:wrap!important}.flex-xlg-nowrap{flex-wrap:nowrap!important}.flex-xlg-wrap-reverse{flex-wrap:wrap-reverse!important}.justify-content-xlg-start{justify-content:flex-start!important}.justify-content-xlg-end{justify-content:flex-end!important}.justify-content-xlg-center{justify-content:center!important}.justify-content-xlg-between{justify-content:space-between!important}.justify-content-xlg-around{justify-content:space-around!important}.align-items-xlg-start{align-items:flex-start!important}.align-items-xlg-end{align-items:flex-end!important}.align-items-xlg-center{align-items:center!important}.align-items-xlg-baseline{align-items:baseline!important}.align-items-xlg-stretch{align-items:stretch!important}.align-content-xlg-start{align-content:flex-start!important}.align-content-xlg-end{align-content:flex-end!important}.align-content-xlg-center{align-content:center!important}.align-content-xlg-between{align-content:space-between!important}.align-content-xlg-around{align-content:space-around!important}.align-content-xlg-stretch{align-content:stretch!important}.align-self-xlg-auto{-ms-grid-row-align:auto!important;align-self:auto!important}.align-self-xlg-start{align-self:flex-start!important}.align-self-xlg-end{align-self:flex-end!important}.align-self-xlg-center{-ms-grid-row-align:center!important;align-self:center!important}.align-self-xlg-baseline{align-self:baseline!important}.align-self-xlg-stretch{-ms-grid-row-align:stretch!important;align-self:stretch!important}}.cmx-fab{position:fixed;bottom:56px;right:32px;z-index:10000;width:56px;height:56px;overflow:visible}.cmx-fab__toggle{border:none;background:0 0;display:flex;flex-flow:row-reverse;justify-content:center;align-items:center;margin:0;padding:0;cursor:pointer;right:0;bottom:0;transition:opacity 250ms ease-in}.cmx-fab__toggle:focus{outline:0}.cmx-fab__toggle .cmx-fab__icon{background-color:#003876;color:#fff;width:56px;height:56px;margin:0;font-size:1.5rem;transition:opacity 250ms}.cmx-fab__label{font-size:.875rem;background-color:#fff;line-height:1rem;padding:.5rem 1rem;border-radius:5px;display:block;margin:0 1rem;box-shadow:0 1px 5px rgba(0,0,0,.2);color:#001b3a;white-space:nowrap}.cmx-fab__icon{width:40px;height:40px;background-color:#fff;color:#001b3a;border-radius:50%;font-size:1.275rem;box-shadow:0 1px 5px rgba(0,0,0,.2);display:flex;justify-content:center;align-items:center;margin:8px;flex:0 0 auto}.cmx-fab__icon>*{width:16px;height:16px;display:flex;justify-content:center;align-items:center;transition:opacity 250ms,background-color 250ms}.cmx-fab__menu{list-style:none;position:absolute;right:0;bottom:0;margin:0;padding:0}.cmx-fab__menu-item{display:flex;flex-flow:row-reverse;align-items:center;justify-content:flex-start;position:absolute;opacity:0;pointer-events:none;right:0;bottom:0;transition:opacity 250ms,transform 250ms,-webkit-transform 250ms}.cmx-fab__menu-item:first-child{z-index:2}.cmx-fab__menu-item:first-child .cmx-fab__icon{background-color:#3fa9f5;color:#fff;width:56px;height:56px;margin:0;font-size:1.5rem;box-shadow:none}.cmx-fab.active .cmx-fab__toggle{cursor:default;opacity:0;pointer-events:none;transition:opacity 250ms ease-out}.cmx-fab.active .cmx-fab__menu-item{opacity:1;pointer-events:all}.cmx-fab.active .cmx-fab__menu-item:nth-child(2){-webkit-transform:translateY(-64px);transform:translateY(-64px)}.cmx-fab.active .cmx-fab__menu-item:nth-child(3){-webkit-transform:translateY(-128px);transform:translateY(-128px)}.cmx-fab.active .cmx-fab__menu-item:nth-child(4){-webkit-transform:translateY(-192px);transform:translateY(-192px)}.cmx-fab.active .cmx-fab__menu-item:nth-child(5){-webkit-transform:translateY(-256px);transform:translateY(-256px)}.cmx-fab.active .cmx-fab__menu-item:nth-child(6){-webkit-transform:translateY(-320px);transform:translateY(-320px)}@media (max-width:576px){.cmx-fab{bottom:32px}.cmx-fab::before{content:\" \";display:block;position:fixed;height:100vh;width:100vw;background-color:rgba(0,27,58,.8);opacity:0;top:0;left:0;z-index:0;pointer-events:none;transition:opacity 250ms}.cmx-fab.active::before{opacity:1;pointer-events:all}.cmx-fab__toggle{z-index:1}}.cmx-header-logo__link{cursor:pointer;margin-left:1.75rem;float:left}.cmx-header-logo__link.cmx-logo{margin-top:.75rem;width:102px;height:28px}.cmx-header-logo__link.cmx-logo-il{margin-top:5px;width:auto;height:44px}.cmx-header-logo__image{width:102px;height:28px;fill:#fff}.cmx-header-logo__moblie-menu{display:none;float:left;color:#fff;font-size:1.5rem;margin-left:15px;cursor:pointer}.cmx-main-nav-header{position:fixed;top:0;left:0;width:100%;height:54px;background:#002a59;font-family:Roboto,sans-serif;z-index:1001}.cmx-main-nav-header__icon{font-weight:700;font-size:.875rem;border-radius:16px;width:32px;height:32px;color:#fff;text-align:center;line-height:2rem;float:left;transition:.2s}.cmx-main-nav-header__icon-label{padding:.375rem .75rem;opacity:.8;float:left;color:#fff;width:auto;height:auto;transition:.2s}.cmx-main-nav-header__icon--alert{background:#ee3d42}.cmx-main-nav-header__icon--regular{background:#001b3a;margin-top:15px}.cmx-main-nav-header__icon--inverted{background:#fff;color:#001b3a}.cmx-main-nav-header__items{float:right;height:54px}.cmx-main-nav-header__item-separator{width:1px;height:32px;background:#fff;opacity:.3;margin:.75rem 0;float:left}.cmx-main-nav-header__item{float:left;display:inline-block;position:relative;cursor:pointer}.cmx-main-nav-header__item:hover .main-nav__icon{-webkit-transform:scale(1.1);transform:scale(1.1)}.cmx-main-nav-header__item:hover .main-nav__icon-label{opacity:1}.cmx-main-nav-header__item>*{margin:.75rem;min-height:32px}.cmx-main-nav-header.bg__bright-green{background-color:#7ac943}.cmx-main-nav-header .cmx-sub-nav-loader{width:100%;height:2px;background:#ee3d42;float:right;clear:both;-webkit-animation:1.5s ease-out .5s slideInFromLeft;animation:1.5s ease-out .5s slideInFromLeft}@-webkit-keyframes slideInFromLeft{0%{-webkit-transform:scaleX(0);transform:scaleX(0);-webkit-transform-origin:left;transform-origin:left}100%{-webkit-transform:scaleX(1);transform:scaleX(1);-webkit-transform-origin:left;transform-origin:left}}@keyframes slideInFromLeft{0%{-webkit-transform:scaleX(0);transform:scaleX(0);-webkit-transform-origin:left;transform-origin:left}100%{-webkit-transform:scaleX(1);transform:scaleX(1);-webkit-transform-origin:left;transform-origin:left}}.cmx-notifications__container{position:absolute!important;width:382px;right:0;box-shadow:0 2px 5px rgba(0,0,0,.2);top:42px;background-color:#fff;z-index:9999}.cmx-notifications__container.popout:before{content:\" \";display:block;width:0;height:0;border-left:8px solid transparent;border-right:8px solid transparent;border-bottom:8px solid #fff;position:absolute;right:9px;top:-7px}.cmx-notifications__list{overflow-y:auto;width:100%}.cmx-notifications__main-call-to-action{font-weight:700;font-size:14px;padding:1rem;display:block;text-align:right;border-top:1px dashed #d6d6d6}.cmx-notifications__entry{padding:1rem 1rem 0;display:flex;flex-wrap:wrap;margin:0;box-sizing:border-box}.cmx-notifications__entry::after{content:\" \";display:block;margin:1rem -.5rem 0;border-bottom:1px dashed #d6d6d6;width:calc(100% + 1rem)}.cmx-notifications__entry:hover{background:#e8ebef}.cmx-notifications__entry-icon{width:24px;font-size:25px;color:#ee3d42;margin-right:1rem}.cmx-notifications__entry-data{width:295px}.cmx-notifications__entry-title{margin-bottom:.5rem;margin-top:0}.cmx-notifications__entry-text{font-size:.75rem;line-height:1rem;max-width:280px;margin-bottom:.5rem}.cmx-notifications__entry-cta{font-size:.75rem;font-weight:500;line-height:.75rem;text-align:right;padding:.75rem 1rem 0;width:100%;float:right}.cmx-notifications__entry:last-child::after{border-bottom:none}.cmx-console-menu__popout{right:0;padding:1.5rem}.cmx-console-menu__heading{margin-top:0;margin-bottom:1.5rem;line-height:1rem;font-family:Roboto,sans-serif;font-weight:500;white-space:nowrap}.cmx-console-menu__list{list-style:none;display:flex;padding:0;margin:0}.cmx-console-menu__item{font-size:.875rem;line-height:1rem;width:96px}.cmx-console-menu__item-link{display:block}.cmx-console-menu__item-icon{display:block;width:32px;height:32px;margin:0 auto 1rem;background-color:#002a59;border-radius:50%}.cmx-console-menu__item-label{display:block;text-align:center}.cmx-console-menu__item-inner-icon{font-size:1.2rem;display:inline-block;text-align:center;width:100%;color:#fff;line-height:2}.cmx-console-menu .cmx-icon-modules-internal-consoles{font-size:2rem}.cmx-console-menu .popout{position:absolute;z-index:2010;background:#fff;box-shadow:0 2px 5px rgba(0,0,0,.2);height:auto;margin:0;opacity:1;pointer-events:all}.cmx-console-menu .popout:before{content:\" \";display:block;width:0;height:0;border-left:8px solid transparent;border-right:8px solid transparent;border-bottom:8px solid #fff;position:absolute;right:20px;top:-6px}.cmx-user-menu__user-name{margin-bottom:0}.cmx-user-menu__user{padding:.75rem .5rem;border-bottom:1px dashed #d6d6d6;display:flex;align-items:center;margin:0 .5rem}.cmx-user-menu__user-icon{flex:0 0 auto}.cmx-user-menu__user-details{padding-left:1rem;line-height:.75rem}.cmx-user-menu__user-name{font-size:1rem;line-height:1rem;font-weight:500}.cmx-user-menu__user-email{font-size:.625rem;line-height:.625rem;font-weight:300}.cmx-user-menu__user.cursor-auto{cursor:auto}.cmx-user-menu__container{width:260px;top:52px;right:0;height:auto;position:absolute!important;box-shadow:0 2px 5px rgba(0,0,0,.2);display:none;background:#fff;z-index:9999}.cmx-user-menu__container.open{display:unset}.cmx-user-menu__container.popout:before{content:\" \";display:block;width:0;height:0;border-left:8px solid transparent;border-right:8px solid transparent;border-bottom:8px solid #fff;position:absolute;right:20px;top:-6px}.cmx-user-menu__sign-out{margin:0 .5rem;padding:.75rem .5rem;font-size:.75rem;font-family:Roboto,sans-serif;font-weight:500}.cmx-user-menu__settings{margin:0 .5rem;padding:.75rem .5rem;font-size:.75rem;font-family:Roboto,sans-serif;font-weight:500;border-bottom:1px dashed #d6d6d6}.cmx-language{font-size:.875rem}.cmx-language__heading{padding:.75rem .5rem;font-family:Roboto,sans-serif;font-weight:500;color:#3fa9f5;border-bottom:1px dashed #d6d6d6;margin:0 .5rem}.cmx-language__heading--up:after{content:\"\\E920\";font-family:dls-icons!important;speak:none;font-style:normal;font-weight:400;font-variant:normal;text-transform:none;line-height:1;-webkit-font-smoothing:antialiased}.cmx-language__heading--down:after{content:\"\\E921\";font-family:dls-icons!important;speak:none;font-style:normal;font-weight:400;font-variant:normal;text-transform:none;line-height:1;-webkit-font-smoothing:antialiased}.cmx-language__options{font-size:.875rem}.cmx-language__options-list{list-style:none;margin:0 .5rem;padding:0;border-bottom:1px dashed #d6d6d6;height:auto;overflow-y:auto;max-height:300px}.cmx-language__options-list::-webkit-scrollbar{width:10px;background-color:rgba(0,0,0,0);-webkit-border-radius:100px}.cmx-language__options-list::-webkit-scrollbar:hover{background-color:rgba(0,0,0,.2)}.cmx-language__options-list::-webkit-scrollbar-thumb:vertical{background:rgba(0,0,0,.5);-webkit-border-radius:100px;background-clip:padding-box;border:2px solid transparent;min-height:10px}.cmx-language__options-list::-webkit-scrollbar-thumb:vertical:active{background:rgba(0,0,0,.61);-webkit-border-radius:100px}.cmx-language__options-item{padding:.5rem;display:flex}.cmx-language__options-item::before{content:\" \";display:inline-block;width:20px;color:#3fa9f5}.cmx-language__options-item.active::before{font-family:dls-icons!important;content:\"\\E93C\"}.cmx-language__options-item-selector{color:#1a1a1a}.cmx-dialog-title{margin-bottom:5%}.cmx-dialog-content__row{margin:5% auto}.cmx-dialog-content__icon{font-size:26px;vertical-align:sub}.cmx-dialog-content__label{font-size:22px;vertical-align:baseline}.cmx-main-nav-header[dir=rtl] .cmx-header-logo__link{margin-right:1.75rem;float:right}.cmx-main-nav-header[dir=rtl] .cmx-main-nav-header__icon,.cmx-main-nav-header[dir=rtl] .cmx-main-nav-header__icon-label{float:right}.cmx-main-nav-header[dir=rtl] .cmx-main-nav-header__items{float:left}.cmx-main-nav-header[dir=rtl] .cmx-main-nav-header__item,.cmx-main-nav-header[dir=rtl] .cmx-main-nav-header__item-separator{float:right}.cmx-main-nav-header[dir=rtl] .cmx-sub-nav-loader{float:left;-webkit-animation:1.5s ease-out .5s slideInFromRight;animation:1.5s ease-out .5s slideInFromRight}@-webkit-keyframes slideInFromRight{0%{-webkit-transform:scaleX(0);transform:scaleX(0);-webkit-transform-origin:right;transform-origin:right}100%{-webkit-transform:scaleX(1);transform:scaleX(1);-webkit-transform-origin:right;transform-origin:right}}@keyframes slideInFromRight{0%{-webkit-transform:scaleX(0);transform:scaleX(0);-webkit-transform-origin:right;transform-origin:right}100%{-webkit-transform:scaleX(1);transform:scaleX(1);-webkit-transform-origin:right;transform-origin:right}}.cmx-main-nav-header[dir=rtl] .notification-demo-wrapper{position:relative}.cmx-main-nav-header[dir=rtl] .notification-demo-wrapper button.demo-button{left:0;right:auto}.cmx-main-nav-header[dir=rtl] .notification-demo-wrapper .notifications__container{position:absolute;right:0;left:auto}.cmx-main-nav-header[dir=rtl] .cmx-notifications__container{left:0;right:auto}.cmx-main-nav-header[dir=rtl] .cmx-notifications__container.popout:before{left:9px;top:-7px;right:unset}.cmx-main-nav-header[dir=rtl] .cmx-notifications__main-call-to-action{text-align:left}.cmx-main-nav-header[dir=rtl] .cmx-notifications__entry-icon{margin-left:1rem;margin-right:0}.cmx-main-nav-header[dir=rtl] .cmx-notifications__entry-cta{text-align:left;padding:.75rem 0 0;display:block}.cmx-main-nav-header[dir=rtl] .cmx-notifications__entry:last-child::after{border-bottom:none}.cmx-main-nav-header[dir=rtl] .cmx-user-menu__user-details{padding-right:1rem;padding-left:0}.cmx-main-nav-header[dir=rtl] .cmx-user-menu__container{left:2px;right:unset}.cmx-main-nav-header[dir=rtl] .cmx-user-menu__container.popout:before{left:18px;top:-7px;right:unset}.cmx-main-nav-header[dir=rtl] .cmx-language__heading--up:after{content:unset}.cmx-main-nav-header[dir=rtl] .cmx-language__heading--up:before{content:\"\\E920\";font-family:dls-icons!important;speak:none;font-style:normal;font-weight:400;font-variant:normal;text-transform:none;line-height:1;-webkit-font-smoothing:antialiased}.cmx-main-nav-header[dir=rtl] .cmx-language__heading--down:after{content:unset}.cmx-main-nav-header[dir=rtl] .cmx-language__heading--down:before{content:\"\\E921\";font-family:dls-icons!important;speak:none;font-style:normal;font-weight:400;font-variant:normal;text-transform:none;line-height:1;-webkit-font-smoothing:antialiased}.cmx-main-nav-header[dir=rtl] .cmx-console-menu__popout{left:0;right:auto;padding:1.5rem}.cmx-main-nav-header[dir=rtl] .cmx-console-menu .popout:before{left:9px;top:-7px;right:unset}.cmx-dialog[dir=rtl] .cmx-dialog-content__icon{float:right}.cmx-fab .cmx-tooltip{border:1px solid #333;border-radius:3px;color:#e8ebef;font-size:.75rem;background:#333;padding:.5rem 1rem;position:absolute;font-weight:500}.cmx-fab .cmx-tooltip::after{content:\"\";position:absolute;width:0;height:0;margin-left:-10px;bottom:-13px;left:50%;box-sizing:border-box;border:6px solid #000;border-color:transparent transparent #333 #333;-webkit-transform-origin:0 0;transform-origin:0 0;-webkit-transform:rotate(-45deg);transform:rotate(-45deg)}.cmx-fab .cmx-tooltip--right::after{border-color:transparent #333 #333 transparent;bottom:auto;right:-4px;top:50%;left:auto}.cmx-fab .cmx-tooltip.chatbot{line-height:1.2rem;position:relative;right:11px}.cmx-fab.chatbot{width:auto;display:flex;height:37px;top:90px;right:10px}.cmx-fab__toggle .cmx-fab__icon.chatbot{width:37px;height:37px;background-color:#fff}@media screen and (max-width:1079px){.cmx-header-logo__link{margin:14px auto 0;display:block;height:40px;float:none}.cmx-header-logo__moblie-menu{display:unset}.cmx-main-nav-header__items{display:none}.cmx-main-nav-header[dir=rtl] .cmx-header-logo__link{float:none;margin-right:auto}.cmx-main-nav-header[dir=rtl] .cmx-header-logo__moblie-menu{margin-right:15px;float:right}.cmx-main-nav-header .cmx-sub-nav-loader{position:absolute;bottom:0}}.cmx-dialog{width:784px;min-width:auto;max-width:807px;height:556px;min-height:88%;max-height:90%;margin-top:3%}.cmx-dialog__iframe{width:100%;height:665px;border:none;overflow:hidden}"]
                }] }
    ];
    /** @nocollapse */
    CmxNavHeaderComponent.ctorParameters = function () { return [
        { type: SessionService },
        { type: TranslationService },
        { type: Broadcaster },
        { type: CountryConfigService },
        { type: Renderer },
        { type: Http },
        { type: Router },
        { type: DomSanitizer },
        { type: Boolean, decorators: [{ type: Optional }, { type: Inject, args: ['RTL',] }] }
    ]; };
    CmxNavHeaderComponent.propDecorators = {
        countrySupportContactModal: [{ type: ViewChild, args: ['countrySupportContactModal',] }],
        clickMenuButton: [{ type: Output }],
        onSelectItemSearchEvent: [{ type: Output }],
        onViewAllResultEvent: [{ type: Output }],
        onLogout: [{ type: Output }],
        onLanguageChange: [{ type: Output }],
        rtl: [{ type: Input }],
        useLanguageSelector: [{ type: Input }],
        showCountrySupportContact: [{ type: Input }],
        useInternalSettings: [{ type: Input }],
        closeNotificationsOnCLick: [{ type: Input }],
        customPathSettings: [{ type: Input }],
        disabledProfile: [{ type: Input }],
        feedbackDialog: [{ type: ViewChild, args: ['feedbackDialog',] }],
        activeSearch: [{ type: Input }],
        searchServiceList: [{ type: Input }],
        notificationService: [{ type: Input }],
        notificationAction: [{ type: Output }],
        searchInput: [{ type: ViewChild, args: ['searchInput',] }],
        showAllNotifications: [{ type: Output }]
    };
    return CmxNavHeaderComponent;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
// tslint:disable-next-line:directive-selector
var ClickOutsideDirective = /** @class */ (function () {
    function ClickOutsideDirective(_elementRef) {
        this._elementRef = _elementRef;
        this.clickOutside = new EventEmitter();
    }
    /**
     * @param {?} targetElement
     * @return {?}
     */
    ClickOutsideDirective.prototype.onClick = /**
     * @param {?} targetElement
     * @return {?}
     */
    function (targetElement) {
        /** @type {?} */
        var clickedInside = this._elementRef.nativeElement.contains(targetElement);
        if (!clickedInside) {
            this.clickOutside.emit();
        }
    };
    ClickOutsideDirective.decorators = [
        { type: Directive, args: [{ selector: '[clickOutside]' },] }
    ];
    /** @nocollapse */
    ClickOutsideDirective.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    ClickOutsideDirective.propDecorators = {
        clickOutside: [{ type: Output }],
        onClick: [{ type: HostListener, args: ['document:click', ['$event.target'],] }]
    };
    return ClickOutsideDirective;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var CmxNavHeaderModule = /** @class */ (function () {
    function CmxNavHeaderModule() {
    }
    CmxNavHeaderModule.decorators = [
        { type: NgModule, args: [{
                    declarations: [CmxNavHeaderComponent, ClickOutsideDirective],
                    exports: [CmxNavHeaderComponent],
                    imports: [FlexLayoutModule, FormsModule, ReactiveFormsModule, CommonModule, CmxDialogModule, CmxButtonModule],
                },] }
    ];
    return CmxNavHeaderModule;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

export { HEADER_NOTIFICATION_PUSH, HEADER_NOTIFICATION_UPDATE, CmxNavHeaderComponent, CmxNavHeaderModule, ClickOutsideDirective as ɵa };

//# sourceMappingURL=cemex-cmx-nav-header-v7.js.map