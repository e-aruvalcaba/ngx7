import { Directive, Input, Output, EventEmitter, ContentChildren, forwardRef, HostBinding } from '@angular/core';
import { NG_VALUE_ACCESSOR } from '@angular/forms';
import { CmxRadioChange } from './cmx-radio-change';
import { CmxRadioButtonComponent } from './cmx-radio.component';
var uniqueIdCounter = 0;
export var MD_RADIO_GROUP_CONTROL_VALUE_ACCESSOR = {
    multi: true,
    provide: NG_VALUE_ACCESSOR,
    useExisting: forwardRef(function () { return CmxRadioGroupDirective; }),
};
var CmxRadioGroupDirective = /** @class */ (function () {
    function CmxRadioGroupDirective() {
        this.change = new EventEmitter();
        this.onChange = new EventEmitter();
        this.role = 'radiogroup';
        this.matRadioGroup = true;
        /* public role(): string{
            return 'radiogroup';
        } */
        this.id = "md-radio-" + uniqueIdCounter++;
        this._value = undefined;
        this._disabled = false;
        this._name = "md-radio-group-" + uniqueIdCounter++;
        this._selected = undefined;
        this.isInitialized = false;
        this.radios = null;
        this.controlValueAccessorChangeFn = function (value) { };
        this.onTouched = function () { };
    }
    Object.defineProperty(CmxRadioGroupDirective.prototype, "disabled", {
        get: function () {
            return this._disabled;
        },
        set: function (value) {
            if (value) {
                this._disabled = true;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CmxRadioGroupDirective.prototype, "name", {
        get: function () {
            return this._name;
        },
        set: function (value) {
            this._name = value;
            this.updateRadioButtonNames();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CmxRadioGroupDirective.prototype, "value", {
        get: function () {
            return this._value;
        },
        set: function (newValue) {
            if (this._value !== newValue) {
                this._value = newValue;
                this.updateSelectedRadioFromValue();
                this.checkSelectedRadioButton();
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CmxRadioGroupDirective.prototype, "selected", {
        get: function () {
            return this._selected;
        },
        set: function (selected) {
            this._selected = selected;
            this.value = selected ? selected.value : null;
            this.checkSelectedRadioButton();
        },
        enumerable: true,
        configurable: true
    });
    CmxRadioGroupDirective.prototype.touch = function () {
        if (this.onTouched) {
            this.onTouched();
        }
    };
    CmxRadioGroupDirective.prototype.ngAfterContentInit = function () {
        this.isInitialized = true;
    };
    CmxRadioGroupDirective.prototype.emitChangeEvent = function () {
        if (this.isInitialized) {
            var event_1 = new CmxRadioChange();
            event_1.source = this._selected;
            this.updateCheckIcons();
            event_1.value = this._value;
            this.change.emit(event_1);
            this.onChange.emit(event_1.value);
        }
    };
    // controlValueAccessor
    CmxRadioGroupDirective.prototype.writeValue = function (value) {
        this.value = value;
    };
    // controlValueAccessor
    CmxRadioGroupDirective.prototype.registerOnTouched = function (fn) {
        this.onTouched = fn;
    };
    // controlValueAccessor
    CmxRadioGroupDirective.prototype.setDisabledState = function (isDisabled) {
        this.disabled = isDisabled;
    };
    // controlValueAccessor
    CmxRadioGroupDirective.prototype.registerOnChange = function (fn) {
        this.controlValueAccessorChangeFn = fn;
    };
    CmxRadioGroupDirective.prototype.checkSelectedRadioButton = function () {
        if (this.selected && !this._selected.checked) {
            this._selected.checked = true;
        }
    };
    CmxRadioGroupDirective.prototype.updateRadioButtonNames = function () {
        var _this = this;
        if (this.radios) {
            this.radios.forEach(function (radio) {
                radio.name = _this.name;
            });
        }
    };
    CmxRadioGroupDirective.prototype.updateSelectedRadioFromValue = function () {
        var _this = this;
        var isAlreadySelected = this._selected != null && this._selected.value === this._value;
        if (this.radios != null && !isAlreadySelected) {
            this._selected = null;
            this.radios.forEach(function (radio) {
                radio.checked = _this.value === radio.value;
                if (radio.checked) {
                    _this._selected = radio;
                }
            });
        }
    };
    CmxRadioGroupDirective.prototype.updateCheckIcons = function () {
        var _this = this;
        this.radios.forEach(function (radio) {
            if (radio !== _this._selected) {
                radio.checked = false;
            }
        });
    };
    CmxRadioGroupDirective.decorators = [
        { type: Directive, args: [{
                    providers: [MD_RADIO_GROUP_CONTROL_VALUE_ACCESSOR],
                    selector: 'cmx-radio-group',
                },] },
    ];
    /** @nocollapse */
    CmxRadioGroupDirective.ctorParameters = function () { return []; };
    CmxRadioGroupDirective.propDecorators = {
        'change': [{ type: Output },],
        'onChange': [{ type: Output },],
        'role': [{ type: HostBinding, args: ['attr.role',] },],
        'matRadioGroup': [{ type: HostBinding, args: ['class.mat-radio-group',] },],
        'id': [{ type: Input },],
        'radios': [{ type: ContentChildren, args: [forwardRef(function () { return CmxRadioButtonComponent; }), { descendants: true },] },],
        'disabled': [{ type: Input },],
        'name': [{ type: Input },],
        'value': [{ type: Input },],
        'selected': [{ type: Input },],
    };
    return CmxRadioGroupDirective;
}());
export { CmxRadioGroupDirective };
//# sourceMappingURL=cmx-radio-group.directive.js.map