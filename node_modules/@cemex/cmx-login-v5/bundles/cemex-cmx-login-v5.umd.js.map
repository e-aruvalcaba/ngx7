{"version":3,"file":"cemex-cmx-login-v5.umd.js.map","sources":["ng://@cemex/cmx-login-v5/lib/cmx-login.component.ts","ng://@cemex/cmx-login-v5/lib/cmx-login.module.ts"],"sourcesContent":["import { Component, Input, OnInit, Output, EventEmitter, HostBinding } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\r\nimport { SessionService } from '@cemex-core/angular-services-v7';\r\nimport { TranslationService } from '@cemex-core/angular-localization-v7';\r\nimport { Broadcaster } from '@cemex-core/events-v7';\r\n\r\nimport { Language } from './model/language';\r\nimport { TokenResponse } from './model/token-response';\r\n\r\n@Component({\r\n  selector: 'cmx-login',\r\n  templateUrl: './cmx-login.component.html',\r\n  styleUrls: ['../../../../../../../scss/cmx-login/v3/cmx-login.component.scss']\r\n})\r\nexport class CmxLoginComponent implements OnInit {\r\n\r\n  @HostBinding('attr.dir')\r\n    public dirAttr: string = 'auto';\r\n    @Input()\r\n    public title: string = '';\r\n    @Input()\r\n    public width: string = '';\r\n    @Input()\r\n    public forgotPasswordUrl: string;\r\n    @Input()\r\n    public appName: string;\r\n    @Input()\r\n    public validateTemporaryPassword: boolean = false;\r\n    @Input()\r\n    public urlRoute = '';\r\n    @Input()\r\n    get rtl(): boolean {\r\n        return this._rtl;\r\n    }\r\n    set rtl($value: boolean) {\r\n        if ($value !== undefined && $value !== null) {\r\n            this._rtl = $value;\r\n            this.dirAttr = $value ? 'rtl' : 'ltr';\r\n        }\r\n    }\r\n\r\n    public loginForm: FormGroup;\r\n    public loginFailed = false;\r\n    public submitting = false;\r\n    public currentLang: Language;\r\n    public errorMsg: string;\r\n    public cmxLogoUrl = '';\r\n    public showPassword: boolean = false;\r\n\r\n    @Output()\r\n    public loggedIn = new EventEmitter();\r\n    private generateCookie = true;\r\n    private _rtl: boolean = false;\r\n    private routeAfterLogin: 'dashboard' | 'resetPassword';\r\n    private euHost = (global as any)['HOST_EUROPE'];\r\n    private ameHost = (global as any)['HOST_AMERICA'];\r\n    private euRegion = ['GB', 'UK'];\r\n\r\n    constructor(\r\n        public translationService: TranslationService,\r\n        private fb: FormBuilder,\r\n        private sessionService: SessionService,\r\n        private route: ActivatedRoute,\r\n        private eventBroadcaster: Broadcaster,\r\n        private router: Router\r\n    ) {\r\n\r\n        this.getLogo();\r\n\r\n        this.loginForm = this.fb.group({\r\n            username: [null, Validators.required],\r\n            password: [null, Validators.required]\r\n        });\r\n\r\n        this.loginForm.valueChanges.subscribe(() => {\r\n            this.loginFailed = false;\r\n        });\r\n    }\r\n\r\n    public authenticate(): void {\r\n        if (!this.loginForm.valid) {\r\n            return;\r\n        }\r\n\r\n        const username: string = this.loginForm.get('username').value;\r\n        const password: string = this.loginForm.get('password').value;\r\n\r\n        this.submitting = true;\r\n        this.sessionService\r\n            .login(username, password,\r\n                this.generateCookie,\r\n                this.appName,\r\n                this.validateTemporaryPassword)\r\n            .then((tokenResponse: TokenResponse) => {\r\n                this.loggedIn.emit();\r\n                this.loginFailed = false;\r\n                this.submitting = false;\r\n                // Redirection between regions (America / Europe) depending on user region.z\r\n                const userRegion =\r\n                    tokenResponse ? tokenResponse.oauth2.region : this.sessionService.userRegion;\r\n                const regionHost: string =\r\n                    (this.euRegion.indexOf(userRegion) > -1) ?\r\n                        this.euHost : this.ameHost;\r\n\r\n                const hasTemporaryPassword = tokenResponse &&\r\n                    tokenResponse.profile && tokenResponse.profile.hasTemporaryPassword;\r\n                if (hasTemporaryPassword) {\r\n                    this.routeAfterLogin = 'resetPassword';\r\n                    const tempPasswordHandler = {\r\n                        access_token: tokenResponse.oauth2.access_token,\r\n                        jwt: tokenResponse.jwt,\r\n                        username,\r\n                        firstName: tokenResponse.profile.firstName,\r\n                        lastName: tokenResponse.profile.lastName,\r\n                        country: tokenResponse.country\r\n                    };\r\n                    this.sessionService\r\n                        .createCookie('cmxTmpSession', JSON.stringify(tempPasswordHandler));\r\n                } else {\r\n                    this.sessionService.clearCookie('cmxTmpSession');\r\n                    this.routeAfterLogin = 'dashboard';\r\n                }\r\n\r\n                const params = new URLSearchParams();\r\n                if (this.urlRoute) {\r\n                    params.append('returnUrl', this.urlRoute);\r\n                }\r\n\r\n                // If user is already on the right region, does normal routing\r\n                const currentHost = window.location.host;\r\n                if (regionHost !== currentHost) {\r\n                    sessionStorage.clear();\r\n                    const baseUrl =\r\n                        `${window.location.protocol}//${regionHost}/${this.routeAfterLogin}`;\r\n                    window.location.href =\r\n                        `${baseUrl}?returnUrl=${encodeURIComponent(this.urlRoute)}`;\r\n                } else {\r\n                    const destionationUrl = this.routeAfterLogin + '?' + params.toString();\r\n                    this.router.navigateByUrl(destionationUrl);\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                if (err.status === 403) {\r\n                    this.errorMsg = 'views.login.403Error';\r\n                } else {\r\n                    this.errorMsg = 'views.login.error';\r\n                }\r\n                this.loginFailed = true;\r\n                this.submitting = false;\r\n            });\r\n    }\r\n\r\n    public ngAfterViewInit(): void {\r\n        setTimeout(() => {\r\n            const usrInput = this.loginForm.get('username');\r\n            const usrValue = usrInput.value || '';\r\n            if (usrValue.length > 0) {\r\n                this.loginForm.controls['password'].setErrors(null);\r\n            }\r\n        }, 1000);\r\n    }\r\n\r\n    /**\r\n     * Go to forgot password, default to /forgotPassword unless a custom absolute url is defined\r\n     */\r\n    public goToForgotPassword(): void {\r\n        if (!this.forgotPasswordUrl) {\r\n            this.router.navigate(['/forgotPassword']);\r\n        } else {\r\n            location.href = this.forgotPasswordUrl;\r\n        }\r\n    }\r\n\r\n    public ngOnInit(): void {\r\n        this.sessionService.logout();\r\n        this.eventBroadcaster.on<string>(Broadcaster.DCM_APP_LOGOUT)\r\n            .subscribe((response) => {\r\n                this.sessionService.clearCookie('up_session');\r\n            });\r\n\r\n        this.translationService.languageLoaded.subscribe((data) => this.getLogo());\r\n    }\r\n\r\n    private getLogo(): void {\r\n        let language = '';\r\n        language = localStorage.getItem('language') ||\r\n            sessionStorage.getItem('language') || 'en_US';\r\n\r\n        const country = language.substr(3, 5);\r\n\r\n        if (country === 'IL') {\r\n            this.cmxLogoUrl = 'https://www.cemexgo.com/cdn/logos/svg/readymix.co.il.white.svg';\r\n        } else {\r\n            this.cmxLogoUrl = 'https://www.cemexgo.com/cdn/logos/svg/cemex_mono_white.svg';\r\n        }\r\n    }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\nimport { CmxLoginComponent } from './cmx-login.component';\r\n\r\n@NgModule({\r\n  declarations: [CmxLoginComponent],\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    RouterModule,\r\n    FormsModule,\r\n  ],\r\n  exports: [CmxLoginComponent]\r\n})\r\nexport class CmxLoginModule { }\r\n"],"names":["router","EventEmitter","Validators","Broadcaster","Component","TranslationService","FormBuilder","SessionService","ActivatedRoute","Router","HostBinding","Input","Output","NgModule","CommonModule","ReactiveFormsModule","RouterModule","FormsModule"],"mappings":"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"}
