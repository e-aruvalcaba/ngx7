{"version":3,"file":"cemex-cmx-login-v5.js.map","sources":["ng://@cemex/cmx-login-v5/lib/cmx-login.component.ts","ng://@cemex/cmx-login-v5/lib/cmx-login.module.ts"],"sourcesContent":["import { Component, Input, OnInit, Output, EventEmitter, HostBinding } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\r\nimport { SessionService } from '@cemex-core/angular-services-v7';\r\nimport { TranslationService } from '@cemex-core/angular-localization-v7';\r\nimport { Broadcaster } from '@cemex-core/events-v7';\r\n\r\nimport { Language } from './model/language';\r\nimport { TokenResponse } from './model/token-response';\r\n\r\n@Component({\r\n  selector: 'cmx-login',\r\n  templateUrl: './cmx-login.component.html',\r\n  styleUrls: ['../../../../../../../scss/cmx-login/v3/cmx-login.component.scss']\r\n})\r\nexport class CmxLoginComponent implements OnInit {\r\n\r\n  @HostBinding('attr.dir')\r\n    public dirAttr: string = 'auto';\r\n    @Input()\r\n    public title: string = '';\r\n    @Input()\r\n    public width: string = '';\r\n    @Input()\r\n    public forgotPasswordUrl: string;\r\n    @Input()\r\n    public appName: string;\r\n    @Input()\r\n    public validateTemporaryPassword: boolean = false;\r\n    @Input()\r\n    public urlRoute = '';\r\n    @Input()\r\n    get rtl(): boolean {\r\n        return this._rtl;\r\n    }\r\n    set rtl($value: boolean) {\r\n        if ($value !== undefined && $value !== null) {\r\n            this._rtl = $value;\r\n            this.dirAttr = $value ? 'rtl' : 'ltr';\r\n        }\r\n    }\r\n\r\n    public loginForm: FormGroup;\r\n    public loginFailed = false;\r\n    public submitting = false;\r\n    public currentLang: Language;\r\n    public errorMsg: string;\r\n    public cmxLogoUrl = '';\r\n    public showPassword: boolean = false;\r\n\r\n    @Output()\r\n    public loggedIn = new EventEmitter();\r\n    private generateCookie = true;\r\n    private _rtl: boolean = false;\r\n    private routeAfterLogin: 'dashboard' | 'resetPassword';\r\n    private euHost = (global as any)['HOST_EUROPE'];\r\n    private ameHost = (global as any)['HOST_AMERICA'];\r\n    private euRegion = ['GB', 'UK'];\r\n\r\n    constructor(\r\n        public translationService: TranslationService,\r\n        private fb: FormBuilder,\r\n        private sessionService: SessionService,\r\n        private route: ActivatedRoute,\r\n        private eventBroadcaster: Broadcaster,\r\n        private router: Router\r\n    ) {\r\n\r\n        this.getLogo();\r\n\r\n        this.loginForm = this.fb.group({\r\n            username: [null, Validators.required],\r\n            password: [null, Validators.required]\r\n        });\r\n\r\n        this.loginForm.valueChanges.subscribe(() => {\r\n            this.loginFailed = false;\r\n        });\r\n    }\r\n\r\n    public authenticate(): void {\r\n        if (!this.loginForm.valid) {\r\n            return;\r\n        }\r\n\r\n        const username: string = this.loginForm.get('username').value;\r\n        const password: string = this.loginForm.get('password').value;\r\n\r\n        this.submitting = true;\r\n        this.sessionService\r\n            .login(username, password,\r\n                this.generateCookie,\r\n                this.appName,\r\n                this.validateTemporaryPassword)\r\n            .then((tokenResponse: TokenResponse) => {\r\n                this.loggedIn.emit();\r\n                this.loginFailed = false;\r\n                this.submitting = false;\r\n                // Redirection between regions (America / Europe) depending on user region.z\r\n                const userRegion =\r\n                    tokenResponse ? tokenResponse.oauth2.region : this.sessionService.userRegion;\r\n                const regionHost: string =\r\n                    (this.euRegion.indexOf(userRegion) > -1) ?\r\n                        this.euHost : this.ameHost;\r\n\r\n                const hasTemporaryPassword = tokenResponse &&\r\n                    tokenResponse.profile && tokenResponse.profile.hasTemporaryPassword;\r\n                if (hasTemporaryPassword) {\r\n                    this.routeAfterLogin = 'resetPassword';\r\n                    const tempPasswordHandler = {\r\n                        access_token: tokenResponse.oauth2.access_token,\r\n                        jwt: tokenResponse.jwt,\r\n                        username,\r\n                        firstName: tokenResponse.profile.firstName,\r\n                        lastName: tokenResponse.profile.lastName,\r\n                        country: tokenResponse.country\r\n                    };\r\n                    this.sessionService\r\n                        .createCookie('cmxTmpSession', JSON.stringify(tempPasswordHandler));\r\n                } else {\r\n                    this.sessionService.clearCookie('cmxTmpSession');\r\n                    this.routeAfterLogin = 'dashboard';\r\n                }\r\n\r\n                const params = new URLSearchParams();\r\n                if (this.urlRoute) {\r\n                    params.append('returnUrl', this.urlRoute);\r\n                }\r\n\r\n                // If user is already on the right region, does normal routing\r\n                const currentHost = window.location.host;\r\n                if (regionHost !== currentHost) {\r\n                    sessionStorage.clear();\r\n                    const baseUrl =\r\n                        `${window.location.protocol}//${regionHost}/${this.routeAfterLogin}`;\r\n                    window.location.href =\r\n                        `${baseUrl}?returnUrl=${encodeURIComponent(this.urlRoute)}`;\r\n                } else {\r\n                    const destionationUrl = this.routeAfterLogin + '?' + params.toString();\r\n                    this.router.navigateByUrl(destionationUrl);\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                if (err.status === 403) {\r\n                    this.errorMsg = 'views.login.403Error';\r\n                } else {\r\n                    this.errorMsg = 'views.login.error';\r\n                }\r\n                this.loginFailed = true;\r\n                this.submitting = false;\r\n            });\r\n    }\r\n\r\n    public ngAfterViewInit(): void {\r\n        setTimeout(() => {\r\n            const usrInput = this.loginForm.get('username');\r\n            const usrValue = usrInput.value || '';\r\n            if (usrValue.length > 0) {\r\n                this.loginForm.controls['password'].setErrors(null);\r\n            }\r\n        }, 1000);\r\n    }\r\n\r\n    /**\r\n     * Go to forgot password, default to /forgotPassword unless a custom absolute url is defined\r\n     */\r\n    public goToForgotPassword(): void {\r\n        if (!this.forgotPasswordUrl) {\r\n            this.router.navigate(['/forgotPassword']);\r\n        } else {\r\n            location.href = this.forgotPasswordUrl;\r\n        }\r\n    }\r\n\r\n    public ngOnInit(): void {\r\n        this.sessionService.logout();\r\n        this.eventBroadcaster.on<string>(Broadcaster.DCM_APP_LOGOUT)\r\n            .subscribe((response) => {\r\n                this.sessionService.clearCookie('up_session');\r\n            });\r\n\r\n        this.translationService.languageLoaded.subscribe((data) => this.getLogo());\r\n    }\r\n\r\n    private getLogo(): void {\r\n        let language = '';\r\n        language = localStorage.getItem('language') ||\r\n            sessionStorage.getItem('language') || 'en_US';\r\n\r\n        const country = language.substr(3, 5);\r\n\r\n        if (country === 'IL') {\r\n            this.cmxLogoUrl = 'https://www.cemexgo.com/cdn/logos/svg/readymix.co.il.white.svg';\r\n        } else {\r\n            this.cmxLogoUrl = 'https://www.cemexgo.com/cdn/logos/svg/cemex_mono_white.svg';\r\n        }\r\n    }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\nimport { CmxLoginComponent } from './cmx-login.component';\r\n\r\n@NgModule({\r\n  declarations: [CmxLoginComponent],\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    RouterModule,\r\n    FormsModule,\r\n  ],\r\n  exports: [CmxLoginComponent]\r\n})\r\nexport class CmxLoginModule { }\r\n"],"names":[],"mappings":"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"}
