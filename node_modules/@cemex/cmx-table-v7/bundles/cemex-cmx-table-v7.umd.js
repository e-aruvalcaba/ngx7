(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/common'), require('@angular/forms'), require('@angular/flex-layout'), require('@cemex/cmx-datepicker-v4'), require('@cemex/cmx-checkbox-v4'), require('rxjs'), require('@angular/core')) :
    typeof define === 'function' && define.amd ? define('@cemex/cmx-table-v7', ['exports', '@angular/common', '@angular/forms', '@angular/flex-layout', '@cemex/cmx-datepicker-v4', '@cemex/cmx-checkbox-v4', 'rxjs', '@angular/core'], factory) :
    (factory((global.cemex = global.cemex || {}, global.cemex['cmx-table-v7'] = {}),global.ng.common,global.ng.forms,global.ng['flex-layout'],global.cmxDatepickerV4,global.cmxCheckboxV4,global.rxjs,global.ng.core));
}(this, (function (exports,common,forms,flexLayout,cmxDatepickerV4,cmxCheckboxV4,rxjs,core) { 'use strict';

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation. All rights reserved.
    Licensed under the Apache License, Version 2.0 (the "License"); you may not use
    this file except in compliance with the License. You may obtain a copy of the
    License at http://www.apache.org/licenses/LICENSE-2.0

    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
    MERCHANTABLITY OR NON-INFRINGEMENT.

    See the Apache Version 2.0 License for specific language governing permissions
    and limitations under the License.
    ***************************************************************************** */
    function __values(o) {
        var m = typeof Symbol === "function" && o[Symbol.iterator], i = 0;
        if (m)
            return m.call(o);
        return {
            next: function () {
                if (o && i >= o.length)
                    o = void 0;
                return { value: o && o[i++], done: !o };
            }
        };
    }

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var Table = /** @class */ (function () {
        function Table() {
            this.columns = [];
        }
        /**
         * @param {?} columns
         * @return {?}
         */
        Table.prototype.setColumns = /**
         * @param {?} columns
         * @return {?}
         */
            function (columns) {
                this.columns = columns;
            };
        /**
         * @param {?} column
         * @return {?}
         */
        Table.prototype.addColumn = /**
         * @param {?} column
         * @return {?}
         */
            function (column) {
                this.columns.push(column);
            };
        /**
         * @param {?} key
         * @return {?}
         */
        Table.prototype.getColumn = /**
         * @param {?} key
         * @return {?}
         */
            function (key) {
                /** @type {?} */
                var answer;
                this.columns.forEach(( /**
                 * @param {?} column
                 * @return {?}
                 */function (column) {
                    if (column.getKey() === key) {
                        answer = column;
                    }
                }));
                return answer;
            };
        /**
         * @return {?}
         */
        Table.prototype.getColumns = /**
         * @return {?}
         */
            function () {
                return this.columns;
            };
        /**
         * @param {?} _customerCode
         * @return {?}
         */
        Table.prototype.setCustomerCode = /**
         * @param {?} _customerCode
         * @return {?}
         */
            function (_customerCode) {
                this.customerCode = _customerCode;
            };
        /**
         * @param {?} _companyCode
         * @return {?}
         */
        Table.prototype.setCompanyCode = /**
         * @param {?} _companyCode
         * @return {?}
         */
            function (_companyCode) {
                this.companyCode = _companyCode;
            };
        return Table;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var CmxRowTemplateDirective = /** @class */ (function () {
        function CmxRowTemplateDirective(template) {
            this.template = template;
        }
        CmxRowTemplateDirective.decorators = [
            { type: core.Directive, args: [{
                        selector: '[cmxRowTemplate]',
                    },] }
        ];
        /** @nocollapse */
        CmxRowTemplateDirective.ctorParameters = function () {
            return [
                { type: core.TemplateRef }
            ];
        };
        return CmxRowTemplateDirective;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var CmxHeaderTemplateDirective = /** @class */ (function () {
        function CmxHeaderTemplateDirective(template) {
            this.template = template;
        }
        CmxHeaderTemplateDirective.decorators = [
            { type: core.Directive, args: [{
                        selector: '[cmxHeaderTemplate]',
                    },] }
        ];
        /** @nocollapse */
        CmxHeaderTemplateDirective.ctorParameters = function () {
            return [
                { type: core.TemplateRef }
            ];
        };
        return CmxHeaderTemplateDirective;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var Filter = /** @class */ (function () {
        function Filter(_name, _value, _active, _columnKey) {
            this.visible = true;
            this.name = _name;
            this.value = _value;
            this.active = _active;
            this.columnKey = _columnKey;
        }
        return Filter;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    /** @type {?} */
    var $tableId = 0;
    var WatcherService = /** @class */ (function () {
        function WatcherService() {
            this.watchSubjects = [];
        }
        /**
         * @return {?}
         */
        WatcherService.prototype.clearActiveFilters = /**
         * @return {?}
         */
            function () {
                this.watchSubjects.forEach(( /**
                 * @param {?} sub
                 * @return {?}
                 */function (sub) {
                    sub.activeFiltersSubject.next([]);
                }));
            };
        /**
         * @return {?}
         */
        WatcherService.prototype.createSubject = /**
         * @return {?}
         */
            function () {
                $tableId++;
                /** @type {?} */
                var $subject = {
                    id: $tableId,
                    activeFilters: [],
                    activeFiltersSubject: new rxjs.BehaviorSubject([]),
                };
                this.watchSubjects.push($subject);
                return $tableId;
            };
        /**
         * @param {?} $id
         * @return {?}
         */
        WatcherService.prototype.listenToActiveFilters = /**
         * @param {?} $id
         * @return {?}
         */
            function ($id) {
                /** @type {?} */
                var $aux = this.watchSubjects.find(( /**
                 * @param {?} $element
                 * @return {?}
                 */function ($element) { return $element.id === $id; }));
                return $aux.activeFiltersSubject.asObservable();
            };
        /**
         * @param {?} $id
         * @param {?} $filtersValue
         * @return {?}
         */
        WatcherService.prototype.emitActiveFilters = /**
         * @param {?} $id
         * @param {?} $filtersValue
         * @return {?}
         */
            function ($id, $filtersValue) {
                /** @type {?} */
                var $aux = this.watchSubjects.find(( /**
                 * @param {?} $element
                 * @return {?}
                 */function ($element) { return $element.id === $id; }));
                $filtersValue.forEach(( /**
                 * @param {?} $filter
                 * @return {?}
                 */function ($filter) {
                    /** @type {?} */
                    var $foundIndex = $aux.activeFilters.findIndex(( /**
                     * @param {?} $element
                     * @return {?}
                     */function ($element) { return $element.name === $filter.name; }));
                    if ($foundIndex === -1 && $filter.active === true) {
                        // new filter to push
                        $aux.activeFilters.push($filter);
                    }
                    else if ($foundIndex > -1 && $filter.active === false) {
                        // filter was in the array but now has been deactivaded
                        $aux.activeFilters.splice($foundIndex, 1);
                    }
                }));
                $aux.activeFiltersSubject.next($aux.activeFilters);
            };
        WatcherService.decorators = [
            { type: core.Injectable }
        ];
        /** @nocollapse */
        WatcherService.ctorParameters = function () { return []; };
        return WatcherService;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var CmxCheckboxFiltersComponent = /** @class */ (function () {
        function CmxCheckboxFiltersComponent(watcher, parent) {
            this.watcher = watcher;
            this.parent = parent;
            this.showAllOption = false;
            this.allOptionName = '';
            this.searchPlaceholder = '';
            this.enableSearch = false;
            this.searchTerm = '';
            this.allFilter = new Filter('All', null, false, null);
            this.isRtl = false;
            this.activeFilters = new rxjs.BehaviorSubject(false);
            this.checkboxSubscriptions = [];
            this.isRtl = this.parent.rtl;
        }
        Object.defineProperty(CmxCheckboxFiltersComponent.prototype, "filters", {
            get: /**
             * @return {?}
             */ function () {
                return this._filters;
            },
            set: /**
             * @param {?} $value
             * @return {?}
             */ function ($value) {
                if ($value !== undefined && $value !== null) {
                    this._filters = $value;
                }
            },
            enumerable: true,
            configurable: true
        });
        /**
         * @return {?}
         */
        CmxCheckboxFiltersComponent.prototype.ngAfterViewInit = /**
         * @return {?}
         */
            function () {
                this.listenToCheckboxes();
            };
        /**
         * @return {?}
         */
        CmxCheckboxFiltersComponent.prototype.ngOnDestroy = /**
         * @return {?}
         */
            function () {
                this.dropSubscriptions();
            };
        /**
         * @return {?}
         */
        CmxCheckboxFiltersComponent.prototype.listenToActiveFilters = /**
         * @return {?}
         */
            function () {
                return this.activeFilters.asObservable();
            };
        /**
         * @description Checks all filters when the 'All' checkbox is clicked.
         * @param boolean $event: The event received by the change event of the checkbox.
         */
        /**
         * \@description Checks all filters when the 'All' checkbox is clicked.
         * @param {?} $event
         * @return {?}
         */
        CmxCheckboxFiltersComponent.prototype.toggleAll = /**
         * \@description Checks all filters when the 'All' checkbox is clicked.
         * @param {?} $event
         * @return {?}
         */
            function ($event) {
                if (typeof $event === 'boolean') {
                    this.allFilter.active = $event;
                    this._filters.forEach(( /**
                     * @param {?} filter
                     * @return {?}
                     */function (filter) {
                        if (filter.visible) {
                            filter.active = $event;
                        }
                    }));
                }
            };
        /**
         * @description Toggles the 'active' attribute of a filter to enable or disable.
         * @param Filter filter: The Filter object to toggle.
         * @param boolean $event: The event received by the change event of the checkbox.
         */
        /**
         * \@description Toggles the 'active' attribute of a filter to enable or disable.
         * @param {?} filter
         * @param {?} $event
         * @return {?}
         */
        CmxCheckboxFiltersComponent.prototype.toggleFilter = /**
         * \@description Toggles the 'active' attribute of a filter to enable or disable.
         * @param {?} filter
         * @param {?} $event
         * @return {?}
         */
            function (filter, $event) {
                if (typeof $event === 'boolean') {
                    filter.active = $event;
                    if (!this.showAllOption) {
                        return;
                    }
                    if (!$event) {
                        this.allFilter.active = false;
                    }
                    else {
                        /** @type {?} */
                        var $filtersOnFalse_1 = 0;
                        this.filters.forEach(( /**
                         * @param {?} $filter
                         * @return {?}
                         */function ($filter) {
                            if ($filter.active === false) {
                                $filtersOnFalse_1++;
                            }
                        }));
                        this.allFilter.active = ($filtersOnFalse_1 === 0) ? true : false;
                        // let $hasAllFilterActive: boolean = false;
                        // $hasAllFilterActive = this._filters.every(function($filter) {
                        //     return $filter.active;
                        // });
                        // this.allFilter.active = $hasAllFilterActive;
                    }
                }
            };
        /**
         * @return {?}
         */
        CmxCheckboxFiltersComponent.prototype.clearSearch = /**
         * @return {?}
         */
            function () {
                this.searchTerm = '';
                this.filters.forEach(( /**
                 * @param {?} $filter
                 * @return {?}
                 */function ($filter) {
                    $filter.visible = true;
                }));
            };
        /**
         * @param {?} term
         * @return {?}
         */
        CmxCheckboxFiltersComponent.prototype.searchInFilter = /**
         * @param {?} term
         * @return {?}
         */
            function (term) {
                if (term.length >= 4 || term === '') {
                    /** @type {?} */
                    var aux_1 = term.toLowerCase();
                    if (aux_1 !== '') {
                        this.filters.filter(( /**
                         * @param {?} row
                         * @return {?}
                         */function (row) {
                            if (row.name && row.name.toLowerCase().includes(aux_1)) {
                                row.visible = true;
                            }
                            else {
                                row.visible = false;
                            }
                        }));
                    }
                    else {
                        this.clearSearch();
                    }
                }
            };
        /**
         * @private
         * @return {?}
         */
        CmxCheckboxFiltersComponent.prototype.emitFilters = /**
         * @private
         * @return {?}
         */
            function () {
                this.watcher.emitActiveFilters(this.parent.assignedId, this._filters);
            };
        /**
         * @private
         * @return {?}
         */
        CmxCheckboxFiltersComponent.prototype.emitActiveCheckboxes = /**
         * @private
         * @return {?}
         */
            function () {
                /** @type {?} */
                var activeFilters = [];
                this._filters.forEach(( /**
                 * @param {?} filter
                 * @return {?}
                 */function (filter) {
                    if (filter.active) {
                        activeFilters.push(filter);
                    }
                }));
                if (activeFilters.length > 0) {
                    this.activeFilters.next(true);
                }
                else {
                    this.activeFilters.next(false);
                }
            };
        /**
         * @private
         * @return {?}
         */
        CmxCheckboxFiltersComponent.prototype.listenToCheckboxes = /**
         * @private
         * @return {?}
         */
            function () {
                var _this = this;
                this.checkboxes.forEach(( /**
                 * @param {?} $checkbox
                 * @return {?}
                 */function ($checkbox) {
                    /** @type {?} */
                    var $subscription = $checkbox.change.subscribe(( /**
                     * @param {?} $checked
                     * @return {?}
                     */function ($checked) {
                        _this.emitFilters();
                        _this.emitActiveCheckboxes();
                    }));
                    _this.checkboxSubscriptions.push($subscription);
                }));
            };
        /**
         * @private
         * @return {?}
         */
        CmxCheckboxFiltersComponent.prototype.dropSubscriptions = /**
         * @private
         * @return {?}
         */
            function () {
                this.checkboxSubscriptions.forEach(( /**
                 * @param {?} $sub
                 * @return {?}
                 */function ($sub) { return $sub.unsubscribe(); }));
                this.checkboxSubscriptions = [];
            };
        CmxCheckboxFiltersComponent.decorators = [
            { type: core.Component, args: [{
                        selector: 'cmx-checkbox-filters',
                        template: "<div class=\"search-container\" *ngIf=\"enableSearch\">\r\n    <div id=\"cmx-checkbox-filter-search-input\" [dir]=\"isRtl ? 'rtl':'auto'\" class=\"filterSearchBox\" fxLayoutAlign=\"center center\" fxLayout=\"row\">\r\n        <input fxFlex class=\"search-input\" type=\"text\" placeholder=\"{{ searchPlaceholder }}\" [(ngModel)]=\"searchTerm\" (keyup)=\"searchInFilter(searchTerm)\">\r\n        <span fxFlex=\"35px\" class=\"cmx-icon-search search-input-icon\" aria-hidden=\"true\" *ngIf=\"searchTerm === ''\"></span>\r\n        <span fxFlex=\"35px\" class=\"cmx-icon-close search-input-icon\" aria-hidden=\"true\"  *ngIf=\"searchTerm !== ''\" (click)=\"clearSearch()\"></span>\r\n    </div>\r\n</div>\r\n<div *ngIf=\"showAllOption\" class=\"checkbox-container\" [dir]=\"isRtl ? 'rtl':'auto'\">\r\n    <cmx-checkbox [checked]=\"allFilter.active\" (change)=\"toggleAll($event)\" [rtl]=\"isRtl\">\r\n        {{ allOptionName }}\r\n    </cmx-checkbox>\r\n</div>\r\n<ng-container *ngFor=\"let filter of _filters; let $index = index;\">\r\n    <div [hidden]=\"!filter.visible\" class=\"checkbox-container\" [dir]=\"isRtl ? 'rtl':'auto'\">\r\n        <cmx-checkbox [id]=\"'checkbox-' + filter.columnKey + $index\" [checked]=\"filter.active\" (change)=\"toggleFilter(filter, $event)\" [rtl]=\"isRtl\">\r\n            {{ filter.name }}\r\n        </cmx-checkbox>\r\n    </div>\r\n</ng-container>",
                        styles: [".roboto-bold{font-weight:700}.roboto-medium{font-weight:500}.roboto-regular{font-weight:400}.roboto-light{font-weight:300}.roboto-thin{font-weight:100}.h1-role,h1{font-family:Roboto,sans-serif;font-size:3rem;line-height:3rem;font-weight:700;color:#001b3a}.h2-role,.h3-role,h2,h3{font-family:Roboto,sans-serif;font-size:1.625rem;line-height:2rem;font-weight:400;color:#001b3a}.h4-role,h4{font-family:Roboto,sans-serif;font-size:2rem;line-height:2rem;font-weight:500;color:#001b3a}.h5-role,h5{font-family:Roboto,sans-serif;font-size:1.25rem;line-height:1.5rem;font-weight:400;color:#001b3a}.h6-role,h6{font-family:Roboto,sans-serif;font-size:.875rem;line-height:1rem;font-weight:700;color:#001b3a;text-transform:uppercase}.table-entry{font-family:Roboto,sans-serif;font-size:.875rem;line-height:1rem}.table-entry-strong{font-family:Roboto,sans-serif;font-size:.875rem;line-height:1rem;color:#333;font-weight:700}.link,.table-entry,a{text-decoration:none;color:#3fa9f5}a:hover{text-decoration:underline}.input-placeholder{font-family:Roboto,sans-serif;font-size:.875rem;line-height:1rem;color:#666}.input-text{font-family:Roboto,sans-serif;font-size:.875rem;line-height:1rem;color:#333}.size-15{font-size:.9375rem}.size-24{font-size:1.5rem}.text-left{text-align:left!important}.text-right{text-align:right!important}.text-center{text-align:center!important}.flex-first{order:-1}.flex-last{order:1}.flex-unordered{order:0}.flex-row{flex-direction:row!important}.flex-column{flex-direction:column!important}.flex-row-reverse{flex-direction:row-reverse!important}.flex-column-reverse{flex-direction:column-reverse!important}.flex-wrap{flex-wrap:wrap!important}.flex-nowrap{flex-wrap:nowrap!important}.flex-wrap-reverse{flex-wrap:wrap-reverse!important}.justify-content-start{justify-content:flex-start!important}.justify-content-end{justify-content:flex-end!important}.justify-content-center{justify-content:center!important}.justify-content-between{justify-content:space-between!important}.justify-content-around{justify-content:space-around!important}.align-items-start{align-items:flex-start!important}.align-items-end{align-items:flex-end!important}.align-items-center{align-items:center!important}.align-items-baseline{align-items:baseline!important}.align-items-stretch{align-items:stretch!important}.align-content-start{align-content:flex-start!important}.align-content-end{align-content:flex-end!important}.align-content-center{align-content:center!important}.align-content-between{align-content:space-between!important}.align-content-around{align-content:space-around!important}.align-content-stretch{align-content:stretch!important}.align-self-auto{-ms-grid-row-align:auto!important;align-self:auto!important}.align-self-start{align-self:flex-start!important}.align-self-end{align-self:flex-end!important}.align-self-center{-ms-grid-row-align:center!important;align-self:center!important}.align-self-baseline{align-self:baseline!important}.align-self-stretch{-ms-grid-row-align:stretch!important;align-self:stretch!important}@media (min-width:576px){.text-xs-left{text-align:left!important}.text-xs-right{text-align:right!important}.text-xs-center{text-align:center!important}.flex-xs-first{order:-1}.flex-xs-last{order:1}.flex-xs-unordered{order:0}.flex-xs-row{flex-direction:row!important}.flex-xs-column{flex-direction:column!important}.flex-xs-row-reverse{flex-direction:row-reverse!important}.flex-xs-column-reverse{flex-direction:column-reverse!important}.flex-xs-wrap{flex-wrap:wrap!important}.flex-xs-nowrap{flex-wrap:nowrap!important}.flex-xs-wrap-reverse{flex-wrap:wrap-reverse!important}.justify-content-xs-start{justify-content:flex-start!important}.justify-content-xs-end{justify-content:flex-end!important}.justify-content-xs-center{justify-content:center!important}.justify-content-xs-between{justify-content:space-between!important}.justify-content-xs-around{justify-content:space-around!important}.align-items-xs-start{align-items:flex-start!important}.align-items-xs-end{align-items:flex-end!important}.align-items-xs-center{align-items:center!important}.align-items-xs-baseline{align-items:baseline!important}.align-items-xs-stretch{align-items:stretch!important}.align-content-xs-start{align-content:flex-start!important}.align-content-xs-end{align-content:flex-end!important}.align-content-xs-center{align-content:center!important}.align-content-xs-between{align-content:space-between!important}.align-content-xs-around{align-content:space-around!important}.align-content-xs-stretch{align-content:stretch!important}.align-self-xs-auto{-ms-grid-row-align:auto!important;align-self:auto!important}.align-self-xs-start{align-self:flex-start!important}.align-self-xs-end{align-self:flex-end!important}.align-self-xs-center{-ms-grid-row-align:center!important;align-self:center!important}.align-self-xs-baseline{align-self:baseline!important}.align-self-xs-stretch{-ms-grid-row-align:stretch!important;align-self:stretch!important}}@media (min-width:768px){.text-sm-left{text-align:left!important}.text-sm-right{text-align:right!important}.text-sm-center{text-align:center!important}.flex-sm-first{order:-1}.flex-sm-last{order:1}.flex-sm-unordered{order:0}.flex-sm-row{flex-direction:row!important}.flex-sm-column{flex-direction:column!important}.flex-sm-row-reverse{flex-direction:row-reverse!important}.flex-sm-column-reverse{flex-direction:column-reverse!important}.flex-sm-wrap{flex-wrap:wrap!important}.flex-sm-nowrap{flex-wrap:nowrap!important}.flex-sm-wrap-reverse{flex-wrap:wrap-reverse!important}.justify-content-sm-start{justify-content:flex-start!important}.justify-content-sm-end{justify-content:flex-end!important}.justify-content-sm-center{justify-content:center!important}.justify-content-sm-between{justify-content:space-between!important}.justify-content-sm-around{justify-content:space-around!important}.align-items-sm-start{align-items:flex-start!important}.align-items-sm-end{align-items:flex-end!important}.align-items-sm-center{align-items:center!important}.align-items-sm-baseline{align-items:baseline!important}.align-items-sm-stretch{align-items:stretch!important}.align-content-sm-start{align-content:flex-start!important}.align-content-sm-end{align-content:flex-end!important}.align-content-sm-center{align-content:center!important}.align-content-sm-between{align-content:space-between!important}.align-content-sm-around{align-content:space-around!important}.align-content-sm-stretch{align-content:stretch!important}.align-self-sm-auto{-ms-grid-row-align:auto!important;align-self:auto!important}.align-self-sm-start{align-self:flex-start!important}.align-self-sm-end{align-self:flex-end!important}.align-self-sm-center{-ms-grid-row-align:center!important;align-self:center!important}.align-self-sm-baseline{align-self:baseline!important}.align-self-sm-stretch{-ms-grid-row-align:stretch!important;align-self:stretch!important}}@media (min-width:1080px){.text-md-left{text-align:left!important}.text-md-right{text-align:right!important}.text-md-center{text-align:center!important}.flex-md-first{order:-1}.flex-md-last{order:1}.flex-md-unordered{order:0}.flex-md-row{flex-direction:row!important}.flex-md-column{flex-direction:column!important}.flex-md-row-reverse{flex-direction:row-reverse!important}.flex-md-column-reverse{flex-direction:column-reverse!important}.flex-md-wrap{flex-wrap:wrap!important}.flex-md-nowrap{flex-wrap:nowrap!important}.flex-md-wrap-reverse{flex-wrap:wrap-reverse!important}.justify-content-md-start{justify-content:flex-start!important}.justify-content-md-end{justify-content:flex-end!important}.justify-content-md-center{justify-content:center!important}.justify-content-md-between{justify-content:space-between!important}.justify-content-md-around{justify-content:space-around!important}.align-items-md-start{align-items:flex-start!important}.align-items-md-end{align-items:flex-end!important}.align-items-md-center{align-items:center!important}.align-items-md-baseline{align-items:baseline!important}.align-items-md-stretch{align-items:stretch!important}.align-content-md-start{align-content:flex-start!important}.align-content-md-end{align-content:flex-end!important}.align-content-md-center{align-content:center!important}.align-content-md-between{align-content:space-between!important}.align-content-md-around{align-content:space-around!important}.align-content-md-stretch{align-content:stretch!important}.align-self-md-auto{-ms-grid-row-align:auto!important;align-self:auto!important}.align-self-md-start{align-self:flex-start!important}.align-self-md-end{align-self:flex-end!important}.align-self-md-center{-ms-grid-row-align:center!important;align-self:center!important}.align-self-md-baseline{align-self:baseline!important}.align-self-md-stretch{-ms-grid-row-align:stretch!important;align-self:stretch!important}}@media (min-width:1320px){.text-lg-left{text-align:left!important}.text-lg-right{text-align:right!important}.text-lg-center{text-align:center!important}.flex-lg-first{order:-1}.flex-lg-last{order:1}.flex-lg-unordered{order:0}.flex-lg-row{flex-direction:row!important}.flex-lg-column{flex-direction:column!important}.flex-lg-row-reverse{flex-direction:row-reverse!important}.flex-lg-column-reverse{flex-direction:column-reverse!important}.flex-lg-wrap{flex-wrap:wrap!important}.flex-lg-nowrap{flex-wrap:nowrap!important}.flex-lg-wrap-reverse{flex-wrap:wrap-reverse!important}.justify-content-lg-start{justify-content:flex-start!important}.justify-content-lg-end{justify-content:flex-end!important}.justify-content-lg-center{justify-content:center!important}.justify-content-lg-between{justify-content:space-between!important}.justify-content-lg-around{justify-content:space-around!important}.align-items-lg-start{align-items:flex-start!important}.align-items-lg-end{align-items:flex-end!important}.align-items-lg-center{align-items:center!important}.align-items-lg-baseline{align-items:baseline!important}.align-items-lg-stretch{align-items:stretch!important}.align-content-lg-start{align-content:flex-start!important}.align-content-lg-end{align-content:flex-end!important}.align-content-lg-center{align-content:center!important}.align-content-lg-between{align-content:space-between!important}.align-content-lg-around{align-content:space-around!important}.align-content-lg-stretch{align-content:stretch!important}.align-self-lg-auto{-ms-grid-row-align:auto!important;align-self:auto!important}.align-self-lg-start{align-self:flex-start!important}.align-self-lg-end{align-self:flex-end!important}.align-self-lg-center{-ms-grid-row-align:center!important;align-self:center!important}.align-self-lg-baseline{align-self:baseline!important}.align-self-lg-stretch{-ms-grid-row-align:stretch!important;align-self:stretch!important}}@media (min-width:1560px){.text-xlg-left{text-align:left!important}.text-xlg-right{text-align:right!important}.text-xlg-center{text-align:center!important}.flex-xlg-first{order:-1}.flex-xlg-last{order:1}.flex-xlg-unordered{order:0}.flex-xlg-row{flex-direction:row!important}.flex-xlg-column{flex-direction:column!important}.flex-xlg-row-reverse{flex-direction:row-reverse!important}.flex-xlg-column-reverse{flex-direction:column-reverse!important}.flex-xlg-wrap{flex-wrap:wrap!important}.flex-xlg-nowrap{flex-wrap:nowrap!important}.flex-xlg-wrap-reverse{flex-wrap:wrap-reverse!important}.justify-content-xlg-start{justify-content:flex-start!important}.justify-content-xlg-end{justify-content:flex-end!important}.justify-content-xlg-center{justify-content:center!important}.justify-content-xlg-between{justify-content:space-between!important}.justify-content-xlg-around{justify-content:space-around!important}.align-items-xlg-start{align-items:flex-start!important}.align-items-xlg-end{align-items:flex-end!important}.align-items-xlg-center{align-items:center!important}.align-items-xlg-baseline{align-items:baseline!important}.align-items-xlg-stretch{align-items:stretch!important}.align-content-xlg-start{align-content:flex-start!important}.align-content-xlg-end{align-content:flex-end!important}.align-content-xlg-center{align-content:center!important}.align-content-xlg-between{align-content:space-between!important}.align-content-xlg-around{align-content:space-around!important}.align-content-xlg-stretch{align-content:stretch!important}.align-self-xlg-auto{-ms-grid-row-align:auto!important;align-self:auto!important}.align-self-xlg-start{align-self:flex-start!important}.align-self-xlg-end{align-self:flex-end!important}.align-self-xlg-center{-ms-grid-row-align:center!important;align-self:center!important}.align-self-xlg-baseline{align-self:baseline!important}.align-self-xlg-stretch{-ms-grid-row-align:stretch!important;align-self:stretch!important}}:host{display:block;max-height:196px;overflow-x:hidden;overflow-y:auto;border-top:3px solid #3fa9f5;cursor:default}.checkbox-container{margin:20px 0;padding:0 12px;white-space:nowrap;text-align:start}.filterSearchBox{border:1px solid #ccc;border-radius:4px;transition:.2s}.search-input{border:none;height:40px;padding-right:10px;padding-left:10px}.search-container{padding:0 12px;margin:20px 0}.search-input-icon{color:#3fa9f5;font-size:2em}"]
                    }] }
        ];
        /** @nocollapse */
        CmxCheckboxFiltersComponent.ctorParameters = function () {
            return [
                { type: WatcherService },
                { type: CmxTableComponent, decorators: [{ type: core.Host }] }
            ];
        };
        CmxCheckboxFiltersComponent.propDecorators = {
            filters: [{ type: core.Input }],
            showAllOption: [{ type: core.Input }],
            allOptionName: [{ type: core.Input }],
            searchPlaceholder: [{ type: core.Input }],
            enableSearch: [{ type: core.Input }],
            checkboxes: [{ type: core.ViewChildren, args: [core.forwardRef(( /**
                                     * @return {?}
                                     */function () { return cmxCheckboxV4.CmxCheckboxComponent; })),] }]
        };
        return CmxCheckboxFiltersComponent;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var CmxDatepickerFilterComponent = /** @class */ (function () {
        function CmxDatepickerFilterComponent(watcher, parent) {
            this.watcher = watcher;
            this.parent = parent;
            this.isRtl = false;
            this.activeFilter = new rxjs.BehaviorSubject(false);
            this.isRtl = this.parent.rtl;
        }
        /**
         * @return {?}
         */
        CmxDatepickerFilterComponent.prototype.listenToActiveFilter = /**
         * @return {?}
         */
            function () {
                return this.activeFilter.asObservable();
            };
        /**
         * @param {?} $event
         * @return {?}
         */
        CmxDatepickerFilterComponent.prototype.activateFilter = /**
         * @param {?} $event
         * @return {?}
         */
            function ($event) {
                this.filter.value = $event.value;
                this.filter.active = true;
                /** @type {?} */
                var $aux = [this.filter];
                this.activeFilter.next(true);
                this.watcher.emitActiveFilters(this.parent.assignedId, $aux);
            };
        /**
         * @return {?}
         */
        CmxDatepickerFilterComponent.prototype.removeFilter = /**
         * @return {?}
         */
            function () {
                this.filter.active = false;
                /** @type {?} */
                var $aux = [this.filter];
                this.activeFilter.next(false);
                this.watcher.emitActiveFilters(this.parent.assignedId, $aux);
            };
        CmxDatepickerFilterComponent.decorators = [
            { type: core.Component, args: [{
                        selector: 'cmx-datepicker-filter',
                        template: "<cmx-datepicker (select)=\"activateFilter( $event )\" (cancel)=\"removeFilter()\" [rtl]=\"isRtl\"></cmx-datepicker>",
                        styles: [""]
                    }] }
        ];
        /** @nocollapse */
        CmxDatepickerFilterComponent.ctorParameters = function () {
            return [
                { type: WatcherService },
                { type: CmxTableComponent, decorators: [{ type: core.Host }] }
            ];
        };
        CmxDatepickerFilterComponent.propDecorators = {
            filter: [{ type: core.Input }]
        };
        return CmxDatepickerFilterComponent;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var CmxFilterSorterComponent = /** @class */ (function () {
        function CmxFilterSorterComponent() {
            this._searchValue = '';
            this._isAscending = false;
            this._isDescending = false;
            this.specificProp = null;
            this.enableSearch = true;
            this.onSelectedFilterItem = new core.EventEmitter();
            this.isfiltered = new core.EventEmitter();
            this.inputSelected = new core.EventEmitter();
            this.checkboxSelected = new core.EventEmitter();
            this._filteredCollection = [];
            this._compareCustomFn = null;
            this._searchFilterFn = null;
            this._rtl = false;
        }
        Object.defineProperty(CmxFilterSorterComponent.prototype, "collection", {
            get: /**
             * @return {?}
             */ function () {
                return this._filteredCollection;
            },
            set: /**
             * @param {?} value
             * @return {?}
             */ function (value) {
                this._filteredCollection = value;
                if (value && value !== undefined) {
                    this._originalCollection = value.slice(0, value.length);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CmxFilterSorterComponent.prototype, "searchValue", {
            set: /**
             * @param {?} value
             * @return {?}
             */ function (value) {
                this._searchValue = value;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CmxFilterSorterComponent.prototype, "sorterCustomFn", {
            set: /**
             * @param {?} value
             * @return {?}
             */ function (value) {
                this._compareCustomFn = value;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CmxFilterSorterComponent.prototype, "searchFilterFn", {
            set: /**
             * @param {?} value
             * @return {?}
             */ function (value) {
                this._searchFilterFn = value;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CmxFilterSorterComponent.prototype, "rtl", {
            get: /**
             * @return {?}
             */ function () {
                return this._rtl;
            },
            set: /**
             * @param {?} $value
             * @return {?}
             */ function ($value) {
                if ($value !== undefined && $value !== undefined) {
                    this._rtl = $value;
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CmxFilterSorterComponent.prototype, "dirRtl", {
            get: /**
             * @return {?}
             */ function () {
                return (this._rtl) ? 'rtl' : 'ltr';
            },
            enumerable: true,
            configurable: true
        });
        /**
         * @param {?} event
         * @return {?}
         */
        CmxFilterSorterComponent.prototype.clickInside = /**
         * @param {?} event
         * @return {?}
         */
            function (event) {
                // event.stopPropagation();
            };
        /**
         * @return {?}
         */
        CmxFilterSorterComponent.prototype.reset = /**
         * @return {?}
         */
            function () {
                this._searchValue = '';
                this._isAscending = false;
                this._isDescending = false;
                this._filteredCollection = this._originalCollection.slice(0, this._originalCollection.length);
                this.onSelectedFilterItem.emit(this._filteredCollection);
                this.isfiltered.emit(false);
            };
        /**
         * @param {?} $event
         * @return {?}
         */
        CmxFilterSorterComponent.prototype.ascendingItem = /**
         * @param {?} $event
         * @return {?}
         */
            function ($event) {
                this.checkboxSelected.emit({ order: 'asc', value: $event });
                this._isAscending = $event;
                this._isDescending = false;
                this.orderAZ();
            };
        /**
         * @param {?} $event
         * @return {?}
         */
        CmxFilterSorterComponent.prototype.descendingItem = /**
         * @param {?} $event
         * @return {?}
         */
            function ($event) {
                this.checkboxSelected.emit({ order: 'des', value: $event });
                this._isAscending = false;
                this._isDescending = $event;
                this.orderAZ();
            };
        /**
         * @param {?} event
         * @return {?}
         */
        CmxFilterSorterComponent.prototype.onSearch = /**
         * @param {?} event
         * @return {?}
         */
            function (event) {
                /** @type {?} */
                var isAZ = this._isAscending || this._isDescending;
                this._filteredCollection = this._searchFilterFn(this._originalCollection, event.currentTarget.value, this.specificProp);
                if (isAZ) {
                    this.orderAZ();
                }
                else {
                    this.onSelectedFilterItem.emit(this._filteredCollection);
                }
                this.isfiltered.emit(this._searchValue !== '');
            };
        /**
         * @return {?}
         */
        CmxFilterSorterComponent.prototype.resetInput = /**
         * @return {?}
         */
            function () {
                /** @type {?} */
                var validate = this._isAscending || this._isDescending;
                if ((this._searchValue === '' || !this._searchValue) && !validate) {
                    this.inputSelected.emit(this.id);
                }
            };
        // tslint:disable-next-line:typedef
        // tslint:disable-next-line:typedef
        /**
         * @private
         * @return {?}
         */
        CmxFilterSorterComponent.prototype.orderAZ =
            // tslint:disable-next-line:typedef
            /**
             * @private
             * @return {?}
             */
            function () {
                if (!this._compareCustomFn) {
                    return;
                }
                /** @type {?} */
                var isAZ = this._isAscending || this._isDescending;
                if (isAZ) {
                    this._filteredCollection = this.orderAscDesc();
                }
                else {
                    this._filteredCollection = this._searchValue !== '' ? this._filteredCollection
                        .slice(0, this._originalCollection.length) :
                        this._originalCollection.slice(0, this._originalCollection.length);
                }
                this.onSelectedFilterItem.emit(this._filteredCollection);
                this.isfiltered.emit(true);
            };
        /**
         * @private
         * @return {?}
         */
        CmxFilterSorterComponent.prototype.orderAscDesc = /**
         * @private
         * @return {?}
         */
            function () {
                /** @type {?} */
                var sortCollection;
                if (this.specificProp) {
                    sortCollection = this._filteredCollection.sort(this._compareCustomFn(this.specificProp));
                    return this._isAscending ? sortCollection : sortCollection.reverse();
                }
                else {
                    sortCollection = this._filteredCollection.sort(this._compareCustomFn);
                    return this._isAscending ? sortCollection : sortCollection.reverse();
                }
            };
        CmxFilterSorterComponent.decorators = [
            { type: core.Component, args: [{
                        selector: 'cmx-filter-sorter',
                        template: "<!-- this component must be inside a div with dropdown bootstrao class \r\n    this component must be after a button to fire bootstrap dropdown\r\n    this component must have dropdown-menu bootstrap class\r\n-->\r\n\r\n<div \r\n    class=\"dropdown-menu-container\" \r\n    aria-labelledby=\"\" \r\n    (click)=\"clickInside($event)\" id=\"filtro\">\r\n    <div id=\"cmx-filter-sorter-search-input\" *ngIf=\"enableSearch\" dir=\"{{dirRtl}}\" class=\"search-input\">\r\n        <span class=\"cmx-icon-magnifier-glass icon\" aria-hidden=\"true\"></span>\r\n        <input (keyup.enter)=\"onSearch($event)\" [(ngModel)]=\"_searchValue\" type=\"text\" placeholder=\"{{ placeholder }}\" (focus)=\"resetInput()\">\r\n        <span class=\"cmx-icon-close icon-clear\" (click)=\"reset()\" aria-hidden=\"true\"></span>\r\n    </div>\r\n    <div class=\"cmx-checkbox__container\">\r\n        <cmx-checkbox [rtl]=\"rtl\" class=\"sorted__box\" [ngModel]=\"_isAscending\" (ngModelChange)=\"ascendingItem($event)\">{{keyOrderAsc}}</cmx-checkbox>\r\n        <br/>\r\n        <cmx-checkbox [rtl]=\"rtl\" class=\"sorted__box\" [ngModel]=\"_isDescending\" (ngModelChange)=\"descendingItem($event)\">{{keyOrderDesc}}</cmx-checkbox>\r\n    </div>\r\n</div>",
                        styles: [".roboto-bold{font-weight:700}.roboto-medium{font-weight:500}.roboto-regular{font-weight:400}.roboto-light{font-weight:300}.roboto-thin{font-weight:100}.h1-role,h1{font-family:Roboto,sans-serif;font-size:3rem;line-height:3rem;font-weight:700;color:#001b3a}.h2-role,.h3-role,h2,h3{font-family:Roboto,sans-serif;font-size:1.625rem;line-height:2rem;font-weight:400;color:#001b3a}.h4-role,h4{font-family:Roboto,sans-serif;font-size:2rem;line-height:2rem;font-weight:500;color:#001b3a}.h5-role,h5{font-family:Roboto,sans-serif;font-size:1.25rem;line-height:1.5rem;font-weight:400;color:#001b3a}.h6-role,h6{font-family:Roboto,sans-serif;font-size:.875rem;line-height:1rem;font-weight:700;color:#001b3a;text-transform:uppercase}.table-entry{font-family:Roboto,sans-serif;font-size:.875rem;line-height:1rem}.table-entry-strong{font-family:Roboto,sans-serif;font-size:.875rem;line-height:1rem;color:#333;font-weight:700}.link,.table-entry,a{text-decoration:none;color:#3fa9f5}a:hover{text-decoration:underline}.input-placeholder{font-family:Roboto,sans-serif;font-size:.875rem;line-height:1rem;color:#666}.input-text{font-family:Roboto,sans-serif;font-size:.875rem;line-height:1rem;color:#333}.size-15{font-size:.9375rem}.size-24{font-size:1.5rem}.text-left{text-align:left!important}.text-right{text-align:right!important}.text-center{text-align:center!important}.flex-first{order:-1}.flex-last{order:1}.flex-unordered{order:0}.flex-row{flex-direction:row!important}.flex-column{flex-direction:column!important}.flex-row-reverse{flex-direction:row-reverse!important}.flex-column-reverse{flex-direction:column-reverse!important}.flex-wrap{flex-wrap:wrap!important}.flex-nowrap{flex-wrap:nowrap!important}.flex-wrap-reverse{flex-wrap:wrap-reverse!important}.justify-content-start{justify-content:flex-start!important}.justify-content-end{justify-content:flex-end!important}.justify-content-center{justify-content:center!important}.justify-content-between{justify-content:space-between!important}.justify-content-around{justify-content:space-around!important}.align-items-start{align-items:flex-start!important}.align-items-end{align-items:flex-end!important}.align-items-center{align-items:center!important}.align-items-baseline{align-items:baseline!important}.align-items-stretch{align-items:stretch!important}.align-content-start{align-content:flex-start!important}.align-content-end{align-content:flex-end!important}.align-content-center{align-content:center!important}.align-content-between{align-content:space-between!important}.align-content-around{align-content:space-around!important}.align-content-stretch{align-content:stretch!important}.align-self-auto{-ms-grid-row-align:auto!important;align-self:auto!important}.align-self-start{align-self:flex-start!important}.align-self-end{align-self:flex-end!important}.align-self-center{-ms-grid-row-align:center!important;align-self:center!important}.align-self-baseline{align-self:baseline!important}.align-self-stretch{-ms-grid-row-align:stretch!important;align-self:stretch!important}@media (min-width:576px){.text-xs-left{text-align:left!important}.text-xs-right{text-align:right!important}.text-xs-center{text-align:center!important}.flex-xs-first{order:-1}.flex-xs-last{order:1}.flex-xs-unordered{order:0}.flex-xs-row{flex-direction:row!important}.flex-xs-column{flex-direction:column!important}.flex-xs-row-reverse{flex-direction:row-reverse!important}.flex-xs-column-reverse{flex-direction:column-reverse!important}.flex-xs-wrap{flex-wrap:wrap!important}.flex-xs-nowrap{flex-wrap:nowrap!important}.flex-xs-wrap-reverse{flex-wrap:wrap-reverse!important}.justify-content-xs-start{justify-content:flex-start!important}.justify-content-xs-end{justify-content:flex-end!important}.justify-content-xs-center{justify-content:center!important}.justify-content-xs-between{justify-content:space-between!important}.justify-content-xs-around{justify-content:space-around!important}.align-items-xs-start{align-items:flex-start!important}.align-items-xs-end{align-items:flex-end!important}.align-items-xs-center{align-items:center!important}.align-items-xs-baseline{align-items:baseline!important}.align-items-xs-stretch{align-items:stretch!important}.align-content-xs-start{align-content:flex-start!important}.align-content-xs-end{align-content:flex-end!important}.align-content-xs-center{align-content:center!important}.align-content-xs-between{align-content:space-between!important}.align-content-xs-around{align-content:space-around!important}.align-content-xs-stretch{align-content:stretch!important}.align-self-xs-auto{-ms-grid-row-align:auto!important;align-self:auto!important}.align-self-xs-start{align-self:flex-start!important}.align-self-xs-end{align-self:flex-end!important}.align-self-xs-center{-ms-grid-row-align:center!important;align-self:center!important}.align-self-xs-baseline{align-self:baseline!important}.align-self-xs-stretch{-ms-grid-row-align:stretch!important;align-self:stretch!important}}@media (min-width:768px){.text-sm-left{text-align:left!important}.text-sm-right{text-align:right!important}.text-sm-center{text-align:center!important}.flex-sm-first{order:-1}.flex-sm-last{order:1}.flex-sm-unordered{order:0}.flex-sm-row{flex-direction:row!important}.flex-sm-column{flex-direction:column!important}.flex-sm-row-reverse{flex-direction:row-reverse!important}.flex-sm-column-reverse{flex-direction:column-reverse!important}.flex-sm-wrap{flex-wrap:wrap!important}.flex-sm-nowrap{flex-wrap:nowrap!important}.flex-sm-wrap-reverse{flex-wrap:wrap-reverse!important}.justify-content-sm-start{justify-content:flex-start!important}.justify-content-sm-end{justify-content:flex-end!important}.justify-content-sm-center{justify-content:center!important}.justify-content-sm-between{justify-content:space-between!important}.justify-content-sm-around{justify-content:space-around!important}.align-items-sm-start{align-items:flex-start!important}.align-items-sm-end{align-items:flex-end!important}.align-items-sm-center{align-items:center!important}.align-items-sm-baseline{align-items:baseline!important}.align-items-sm-stretch{align-items:stretch!important}.align-content-sm-start{align-content:flex-start!important}.align-content-sm-end{align-content:flex-end!important}.align-content-sm-center{align-content:center!important}.align-content-sm-between{align-content:space-between!important}.align-content-sm-around{align-content:space-around!important}.align-content-sm-stretch{align-content:stretch!important}.align-self-sm-auto{-ms-grid-row-align:auto!important;align-self:auto!important}.align-self-sm-start{align-self:flex-start!important}.align-self-sm-end{align-self:flex-end!important}.align-self-sm-center{-ms-grid-row-align:center!important;align-self:center!important}.align-self-sm-baseline{align-self:baseline!important}.align-self-sm-stretch{-ms-grid-row-align:stretch!important;align-self:stretch!important}}@media (min-width:1080px){.text-md-left{text-align:left!important}.text-md-right{text-align:right!important}.text-md-center{text-align:center!important}.flex-md-first{order:-1}.flex-md-last{order:1}.flex-md-unordered{order:0}.flex-md-row{flex-direction:row!important}.flex-md-column{flex-direction:column!important}.flex-md-row-reverse{flex-direction:row-reverse!important}.flex-md-column-reverse{flex-direction:column-reverse!important}.flex-md-wrap{flex-wrap:wrap!important}.flex-md-nowrap{flex-wrap:nowrap!important}.flex-md-wrap-reverse{flex-wrap:wrap-reverse!important}.justify-content-md-start{justify-content:flex-start!important}.justify-content-md-end{justify-content:flex-end!important}.justify-content-md-center{justify-content:center!important}.justify-content-md-between{justify-content:space-between!important}.justify-content-md-around{justify-content:space-around!important}.align-items-md-start{align-items:flex-start!important}.align-items-md-end{align-items:flex-end!important}.align-items-md-center{align-items:center!important}.align-items-md-baseline{align-items:baseline!important}.align-items-md-stretch{align-items:stretch!important}.align-content-md-start{align-content:flex-start!important}.align-content-md-end{align-content:flex-end!important}.align-content-md-center{align-content:center!important}.align-content-md-between{align-content:space-between!important}.align-content-md-around{align-content:space-around!important}.align-content-md-stretch{align-content:stretch!important}.align-self-md-auto{-ms-grid-row-align:auto!important;align-self:auto!important}.align-self-md-start{align-self:flex-start!important}.align-self-md-end{align-self:flex-end!important}.align-self-md-center{-ms-grid-row-align:center!important;align-self:center!important}.align-self-md-baseline{align-self:baseline!important}.align-self-md-stretch{-ms-grid-row-align:stretch!important;align-self:stretch!important}}@media (min-width:1320px){.text-lg-left{text-align:left!important}.text-lg-right{text-align:right!important}.text-lg-center{text-align:center!important}.flex-lg-first{order:-1}.flex-lg-last{order:1}.flex-lg-unordered{order:0}.flex-lg-row{flex-direction:row!important}.flex-lg-column{flex-direction:column!important}.flex-lg-row-reverse{flex-direction:row-reverse!important}.flex-lg-column-reverse{flex-direction:column-reverse!important}.flex-lg-wrap{flex-wrap:wrap!important}.flex-lg-nowrap{flex-wrap:nowrap!important}.flex-lg-wrap-reverse{flex-wrap:wrap-reverse!important}.justify-content-lg-start{justify-content:flex-start!important}.justify-content-lg-end{justify-content:flex-end!important}.justify-content-lg-center{justify-content:center!important}.justify-content-lg-between{justify-content:space-between!important}.justify-content-lg-around{justify-content:space-around!important}.align-items-lg-start{align-items:flex-start!important}.align-items-lg-end{align-items:flex-end!important}.align-items-lg-center{align-items:center!important}.align-items-lg-baseline{align-items:baseline!important}.align-items-lg-stretch{align-items:stretch!important}.align-content-lg-start{align-content:flex-start!important}.align-content-lg-end{align-content:flex-end!important}.align-content-lg-center{align-content:center!important}.align-content-lg-between{align-content:space-between!important}.align-content-lg-around{align-content:space-around!important}.align-content-lg-stretch{align-content:stretch!important}.align-self-lg-auto{-ms-grid-row-align:auto!important;align-self:auto!important}.align-self-lg-start{align-self:flex-start!important}.align-self-lg-end{align-self:flex-end!important}.align-self-lg-center{-ms-grid-row-align:center!important;align-self:center!important}.align-self-lg-baseline{align-self:baseline!important}.align-self-lg-stretch{-ms-grid-row-align:stretch!important;align-self:stretch!important}}@media (min-width:1560px){.text-xlg-left{text-align:left!important}.text-xlg-right{text-align:right!important}.text-xlg-center{text-align:center!important}.flex-xlg-first{order:-1}.flex-xlg-last{order:1}.flex-xlg-unordered{order:0}.flex-xlg-row{flex-direction:row!important}.flex-xlg-column{flex-direction:column!important}.flex-xlg-row-reverse{flex-direction:row-reverse!important}.flex-xlg-column-reverse{flex-direction:column-reverse!important}.flex-xlg-wrap{flex-wrap:wrap!important}.flex-xlg-nowrap{flex-wrap:nowrap!important}.flex-xlg-wrap-reverse{flex-wrap:wrap-reverse!important}.justify-content-xlg-start{justify-content:flex-start!important}.justify-content-xlg-end{justify-content:flex-end!important}.justify-content-xlg-center{justify-content:center!important}.justify-content-xlg-between{justify-content:space-between!important}.justify-content-xlg-around{justify-content:space-around!important}.align-items-xlg-start{align-items:flex-start!important}.align-items-xlg-end{align-items:flex-end!important}.align-items-xlg-center{align-items:center!important}.align-items-xlg-baseline{align-items:baseline!important}.align-items-xlg-stretch{align-items:stretch!important}.align-content-xlg-start{align-content:flex-start!important}.align-content-xlg-end{align-content:flex-end!important}.align-content-xlg-center{align-content:center!important}.align-content-xlg-between{align-content:space-between!important}.align-content-xlg-around{align-content:space-around!important}.align-content-xlg-stretch{align-content:stretch!important}.align-self-xlg-auto{-ms-grid-row-align:auto!important;align-self:auto!important}.align-self-xlg-start{align-self:flex-start!important}.align-self-xlg-end{align-self:flex-end!important}.align-self-xlg-center{-ms-grid-row-align:center!important;align-self:center!important}.align-self-xlg-baseline{align-self:baseline!important}.align-self-xlg-stretch{-ms-grid-row-align:stretch!important;align-self:stretch!important}}:host{display:block;max-height:196px;border-top:3px solid #3fa9f5;cursor:default}.dropdown-menu-container{width:325px;max-height:204px}.dropdown-menu-container .search-input{padding:0 10px}.dropdown-menu-container .search-input .icon{top:8%;position:absolute}.dropdown-menu-container .search-input .icon-magnifier-glass{width:15px;height:15px;position:absolute}.dropdown-menu-container .search-input input{width:100%;border:0;border-bottom:1px solid #d6d6d6;background-color:transparent;text-indent:20px;padding-bottom:5px}.dropdown-menu-container .search-input input:focus{outline:0}.dropdown-menu-container .cmx-checkbox__container{margin-top:10px}.search-input[dir=rtl] .icon-clear{right:90%}.sorted__box{font-size:14px;padding:10px 9px}.icon-clear{position:absolute;top:8%;right:5%;width:4.3%}.icon-clear .icon-close-black{width:12px}.content-buttons-action{flex-direction:row-reverse;display:flex}.content-buttons-action a{padding:5px}"]
                    }] }
        ];
        /** @nocollapse */
        CmxFilterSorterComponent.ctorParameters = function () { return []; };
        CmxFilterSorterComponent.propDecorators = {
            collection: [{ type: core.Input }],
            sorterCustomFn: [{ type: core.Input }],
            searchFilterFn: [{ type: core.Input }],
            rtl: [{ type: core.Input }],
            specificProp: [{ type: core.Input }],
            id: [{ type: core.Input }],
            placeholder: [{ type: core.Input }],
            keyTitle: [{ type: core.Input }],
            keySubtitle: [{ type: core.Input }],
            keyOrderAsc: [{ type: core.Input }],
            keyOrderDesc: [{ type: core.Input }],
            enableSearch: [{ type: core.Input }],
            onSelectedFilterItem: [{ type: core.Output }],
            isfiltered: [{ type: core.Output }],
            inputSelected: [{ type: core.Output }],
            checkboxSelected: [{ type: core.Output }]
        };
        return CmxFilterSorterComponent;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var CmxHeaderCellComponent = /** @class */ (function () {
        function CmxHeaderCellComponent(parent, renderer) {
            this.parent = parent;
            this.renderer = renderer;
            this.cmxHeaderCellClass = true;
            this.hasFiltersClass = false;
            this.activeFiltersClass = false;
            this.showFilters = false;
        }
        /**
         * @return {?}
         */
        CmxHeaderCellComponent.prototype.ngAfterContentInit = /**
         * @return {?}
         */
            function () {
                var _this = this;
                if (this.checkboxFilters) {
                    this.hasFiltersClass = true;
                    this.filtersListener = this.checkboxFilters.listenToActiveFilters().subscribe(( /**
                     * @param {?} $event
                     * @return {?}
                     */function ($event) {
                        _this.activeFiltersClass = $event;
                    }));
                }
                else if (this.datepickerFilter) {
                    this.hasFiltersClass = true;
                    this.filtersListener = this.datepickerFilter.listenToActiveFilter().subscribe(( /**
                     * @param {?} $event
                     * @return {?}
                     */function ($event) {
                        _this.activeFiltersClass = $event;
                    }));
                }
                else if (this.filterSorter) {
                    this.hasFiltersClass = true;
                }
            };
        /**
         * @return {?}
         */
        CmxHeaderCellComponent.prototype.ngOnDestroy = /**
         * @return {?}
         */
            function () {
                if (this.filtersListener) {
                    this.filtersListener.unsubscribe();
                }
            };
        /**
         * @return {?}
         */
        CmxHeaderCellComponent.prototype.toggle = /**
         * @return {?}
         */
            function () {
                var _this = this;
                if (this.checkboxFilters || this.datepickerFilter || this.filterSorter) {
                    this.showFilters = !this.showFilters;
                    if (this.showFilters) {
                        setTimeout(( /**
                         * @return {?}
                         */function () { return _this.isInsideViewport(); }), 100);
                    }
                }
            };
        /**
         * @return {?}
         */
        CmxHeaderCellComponent.prototype.closeFilters = /**
         * @return {?}
         */
            function () {
                this.showFilters = false;
            };
        /**
         * @private
         * @return {?}
         */
        CmxHeaderCellComponent.prototype.isInsideViewport = /**
         * @private
         * @return {?}
         */
            function () {
                /** @type {?} */
                var sidePositioner = this.parent.rtl ? 'right' : 'left';
                // clearing
                this.renderer.setStyle(this.filtersContainer.nativeElement, sidePositioner, undefined);
                this.renderer.setStyle(this.filtersContainer.nativeElement, 'top', undefined);
                // calculations
                /** @type {?} */
                var rect = this.filtersContainer.nativeElement.getBoundingClientRect();
                /** @type {?} */
                var screenHeight = window.innerHeight;
                /** @type {?} */
                var screenWidth = window.innerWidth;
                /** @type {?} */
                var adjustment = 20;
                if (this.parent.rtl) {
                    if (rect.left < 0) {
                        /** @type {?} */
                        var pxValue = Math.abs(rect.left);
                        this.renderer.setStyle(this.filtersContainer.nativeElement, sidePositioner, (-1 * pxValue) + 'px');
                    }
                }
                else {
                    if (rect.right > screenWidth) {
                        // move to the left
                        /** @type {?} */
                        var pxValue = Math.abs(rect.right - screenWidth) + adjustment;
                        this.renderer.setStyle(this.filtersContainer.nativeElement, sidePositioner, (-1 * pxValue) + 'px');
                    }
                }
                if (rect.bottom > screenHeight) {
                    // move to the top
                    /** @type {?} */
                    var pxValue = Math.abs(rect.bottom - screenHeight);
                    this.renderer.setStyle(this.filtersContainer.nativeElement, 'top', (-1 * pxValue) + 'px');
                }
            };
        CmxHeaderCellComponent.decorators = [
            { type: core.Component, args: [{
                        selector: 'cmx-header-cell',
                        template: "<div class=\"cmx-header-cell__text\" (click)=\"toggle()\">\r\n    <div class=\"text-container\">\r\n        <ng-content></ng-content>\r\n        <ng-container *ngIf=\"checkboxFilters || datepickerFilter || filterSorter\">\r\n            <div class=\"cmx-icon__container\">\r\n                <span class=\"cmx-icon-down-single\" aria-hidden=\"true\"></span>\r\n            </div>\r\n        </ng-container>\r\n    </div>\r\n</div>\r\n<ng-container *ngIf=\"showFilters\">\r\n    <div #filtersContainer class=\"cmx-header-cell__filters-container\">\r\n        <ng-content select=\"cmx-checkbox-filters,cmx-datepicker-filter,cmx-filter-sorter\"></ng-content>\r\n    </div>\r\n    <div class=\"cmx-header-cell__mask\" (click)=\"closeFilters()\"></div>\r\n</ng-container>",
                        styles: [".roboto-bold{font-weight:700}.roboto-medium{font-weight:500}.roboto-regular{font-weight:400}.roboto-light{font-weight:300}.roboto-thin{font-weight:100}.h1-role,h1{font-family:Roboto,sans-serif;font-size:3rem;line-height:3rem;font-weight:700;color:#001b3a}.h2-role,.h3-role,h2,h3{font-family:Roboto,sans-serif;font-size:1.625rem;line-height:2rem;font-weight:400;color:#001b3a}.h4-role,h4{font-family:Roboto,sans-serif;font-size:2rem;line-height:2rem;font-weight:500;color:#001b3a}.h5-role,h5{font-family:Roboto,sans-serif;font-size:1.25rem;line-height:1.5rem;font-weight:400;color:#001b3a}.h6-role,h6{font-family:Roboto,sans-serif;font-size:.875rem;line-height:1rem;font-weight:700;color:#001b3a;text-transform:uppercase}.table-entry{font-family:Roboto,sans-serif;font-size:.875rem;line-height:1rem}.table-entry-strong{font-family:Roboto,sans-serif;font-size:.875rem;line-height:1rem;color:#333;font-weight:700}.link,.table-entry,a{text-decoration:none;color:#3fa9f5}a:hover{text-decoration:underline}.input-placeholder{font-family:Roboto,sans-serif;font-size:.875rem;line-height:1rem;color:#666}.input-text{font-family:Roboto,sans-serif;font-size:.875rem;line-height:1rem;color:#333}.size-15{font-size:.9375rem}.size-24{font-size:1.5rem}.text-left{text-align:left!important}.text-right{text-align:right!important}.text-center{text-align:center!important}.flex-first{order:-1}.flex-last{order:1}.flex-unordered{order:0}.flex-row{flex-direction:row!important}.flex-column{flex-direction:column!important}.flex-row-reverse{flex-direction:row-reverse!important}.flex-column-reverse{flex-direction:column-reverse!important}.flex-wrap{flex-wrap:wrap!important}.flex-nowrap{flex-wrap:nowrap!important}.flex-wrap-reverse{flex-wrap:wrap-reverse!important}.justify-content-start{justify-content:flex-start!important}.justify-content-end{justify-content:flex-end!important}.justify-content-center{justify-content:center!important}.justify-content-between{justify-content:space-between!important}.justify-content-around{justify-content:space-around!important}.align-items-start{align-items:flex-start!important}.align-items-end{align-items:flex-end!important}.align-items-center{align-items:center!important}.align-items-baseline{align-items:baseline!important}.align-items-stretch{align-items:stretch!important}.align-content-start{align-content:flex-start!important}.align-content-end{align-content:flex-end!important}.align-content-center{align-content:center!important}.align-content-between{align-content:space-between!important}.align-content-around{align-content:space-around!important}.align-content-stretch{align-content:stretch!important}.align-self-auto{-ms-grid-row-align:auto!important;align-self:auto!important}.align-self-start{align-self:flex-start!important}.align-self-end{align-self:flex-end!important}.align-self-center{-ms-grid-row-align:center!important;align-self:center!important}.align-self-baseline{align-self:baseline!important}.align-self-stretch{-ms-grid-row-align:stretch!important;align-self:stretch!important}@media (min-width:576px){.text-xs-left{text-align:left!important}.text-xs-right{text-align:right!important}.text-xs-center{text-align:center!important}.flex-xs-first{order:-1}.flex-xs-last{order:1}.flex-xs-unordered{order:0}.flex-xs-row{flex-direction:row!important}.flex-xs-column{flex-direction:column!important}.flex-xs-row-reverse{flex-direction:row-reverse!important}.flex-xs-column-reverse{flex-direction:column-reverse!important}.flex-xs-wrap{flex-wrap:wrap!important}.flex-xs-nowrap{flex-wrap:nowrap!important}.flex-xs-wrap-reverse{flex-wrap:wrap-reverse!important}.justify-content-xs-start{justify-content:flex-start!important}.justify-content-xs-end{justify-content:flex-end!important}.justify-content-xs-center{justify-content:center!important}.justify-content-xs-between{justify-content:space-between!important}.justify-content-xs-around{justify-content:space-around!important}.align-items-xs-start{align-items:flex-start!important}.align-items-xs-end{align-items:flex-end!important}.align-items-xs-center{align-items:center!important}.align-items-xs-baseline{align-items:baseline!important}.align-items-xs-stretch{align-items:stretch!important}.align-content-xs-start{align-content:flex-start!important}.align-content-xs-end{align-content:flex-end!important}.align-content-xs-center{align-content:center!important}.align-content-xs-between{align-content:space-between!important}.align-content-xs-around{align-content:space-around!important}.align-content-xs-stretch{align-content:stretch!important}.align-self-xs-auto{-ms-grid-row-align:auto!important;align-self:auto!important}.align-self-xs-start{align-self:flex-start!important}.align-self-xs-end{align-self:flex-end!important}.align-self-xs-center{-ms-grid-row-align:center!important;align-self:center!important}.align-self-xs-baseline{align-self:baseline!important}.align-self-xs-stretch{-ms-grid-row-align:stretch!important;align-self:stretch!important}}@media (min-width:768px){.text-sm-left{text-align:left!important}.text-sm-right{text-align:right!important}.text-sm-center{text-align:center!important}.flex-sm-first{order:-1}.flex-sm-last{order:1}.flex-sm-unordered{order:0}.flex-sm-row{flex-direction:row!important}.flex-sm-column{flex-direction:column!important}.flex-sm-row-reverse{flex-direction:row-reverse!important}.flex-sm-column-reverse{flex-direction:column-reverse!important}.flex-sm-wrap{flex-wrap:wrap!important}.flex-sm-nowrap{flex-wrap:nowrap!important}.flex-sm-wrap-reverse{flex-wrap:wrap-reverse!important}.justify-content-sm-start{justify-content:flex-start!important}.justify-content-sm-end{justify-content:flex-end!important}.justify-content-sm-center{justify-content:center!important}.justify-content-sm-between{justify-content:space-between!important}.justify-content-sm-around{justify-content:space-around!important}.align-items-sm-start{align-items:flex-start!important}.align-items-sm-end{align-items:flex-end!important}.align-items-sm-center{align-items:center!important}.align-items-sm-baseline{align-items:baseline!important}.align-items-sm-stretch{align-items:stretch!important}.align-content-sm-start{align-content:flex-start!important}.align-content-sm-end{align-content:flex-end!important}.align-content-sm-center{align-content:center!important}.align-content-sm-between{align-content:space-between!important}.align-content-sm-around{align-content:space-around!important}.align-content-sm-stretch{align-content:stretch!important}.align-self-sm-auto{-ms-grid-row-align:auto!important;align-self:auto!important}.align-self-sm-start{align-self:flex-start!important}.align-self-sm-end{align-self:flex-end!important}.align-self-sm-center{-ms-grid-row-align:center!important;align-self:center!important}.align-self-sm-baseline{align-self:baseline!important}.align-self-sm-stretch{-ms-grid-row-align:stretch!important;align-self:stretch!important}}@media (min-width:1080px){.text-md-left{text-align:left!important}.text-md-right{text-align:right!important}.text-md-center{text-align:center!important}.flex-md-first{order:-1}.flex-md-last{order:1}.flex-md-unordered{order:0}.flex-md-row{flex-direction:row!important}.flex-md-column{flex-direction:column!important}.flex-md-row-reverse{flex-direction:row-reverse!important}.flex-md-column-reverse{flex-direction:column-reverse!important}.flex-md-wrap{flex-wrap:wrap!important}.flex-md-nowrap{flex-wrap:nowrap!important}.flex-md-wrap-reverse{flex-wrap:wrap-reverse!important}.justify-content-md-start{justify-content:flex-start!important}.justify-content-md-end{justify-content:flex-end!important}.justify-content-md-center{justify-content:center!important}.justify-content-md-between{justify-content:space-between!important}.justify-content-md-around{justify-content:space-around!important}.align-items-md-start{align-items:flex-start!important}.align-items-md-end{align-items:flex-end!important}.align-items-md-center{align-items:center!important}.align-items-md-baseline{align-items:baseline!important}.align-items-md-stretch{align-items:stretch!important}.align-content-md-start{align-content:flex-start!important}.align-content-md-end{align-content:flex-end!important}.align-content-md-center{align-content:center!important}.align-content-md-between{align-content:space-between!important}.align-content-md-around{align-content:space-around!important}.align-content-md-stretch{align-content:stretch!important}.align-self-md-auto{-ms-grid-row-align:auto!important;align-self:auto!important}.align-self-md-start{align-self:flex-start!important}.align-self-md-end{align-self:flex-end!important}.align-self-md-center{-ms-grid-row-align:center!important;align-self:center!important}.align-self-md-baseline{align-self:baseline!important}.align-self-md-stretch{-ms-grid-row-align:stretch!important;align-self:stretch!important}}@media (min-width:1320px){.text-lg-left{text-align:left!important}.text-lg-right{text-align:right!important}.text-lg-center{text-align:center!important}.flex-lg-first{order:-1}.flex-lg-last{order:1}.flex-lg-unordered{order:0}.flex-lg-row{flex-direction:row!important}.flex-lg-column{flex-direction:column!important}.flex-lg-row-reverse{flex-direction:row-reverse!important}.flex-lg-column-reverse{flex-direction:column-reverse!important}.flex-lg-wrap{flex-wrap:wrap!important}.flex-lg-nowrap{flex-wrap:nowrap!important}.flex-lg-wrap-reverse{flex-wrap:wrap-reverse!important}.justify-content-lg-start{justify-content:flex-start!important}.justify-content-lg-end{justify-content:flex-end!important}.justify-content-lg-center{justify-content:center!important}.justify-content-lg-between{justify-content:space-between!important}.justify-content-lg-around{justify-content:space-around!important}.align-items-lg-start{align-items:flex-start!important}.align-items-lg-end{align-items:flex-end!important}.align-items-lg-center{align-items:center!important}.align-items-lg-baseline{align-items:baseline!important}.align-items-lg-stretch{align-items:stretch!important}.align-content-lg-start{align-content:flex-start!important}.align-content-lg-end{align-content:flex-end!important}.align-content-lg-center{align-content:center!important}.align-content-lg-between{align-content:space-between!important}.align-content-lg-around{align-content:space-around!important}.align-content-lg-stretch{align-content:stretch!important}.align-self-lg-auto{-ms-grid-row-align:auto!important;align-self:auto!important}.align-self-lg-start{align-self:flex-start!important}.align-self-lg-end{align-self:flex-end!important}.align-self-lg-center{-ms-grid-row-align:center!important;align-self:center!important}.align-self-lg-baseline{align-self:baseline!important}.align-self-lg-stretch{-ms-grid-row-align:stretch!important;align-self:stretch!important}}@media (min-width:1560px){.text-xlg-left{text-align:left!important}.text-xlg-right{text-align:right!important}.text-xlg-center{text-align:center!important}.flex-xlg-first{order:-1}.flex-xlg-last{order:1}.flex-xlg-unordered{order:0}.flex-xlg-row{flex-direction:row!important}.flex-xlg-column{flex-direction:column!important}.flex-xlg-row-reverse{flex-direction:row-reverse!important}.flex-xlg-column-reverse{flex-direction:column-reverse!important}.flex-xlg-wrap{flex-wrap:wrap!important}.flex-xlg-nowrap{flex-wrap:nowrap!important}.flex-xlg-wrap-reverse{flex-wrap:wrap-reverse!important}.justify-content-xlg-start{justify-content:flex-start!important}.justify-content-xlg-end{justify-content:flex-end!important}.justify-content-xlg-center{justify-content:center!important}.justify-content-xlg-between{justify-content:space-between!important}.justify-content-xlg-around{justify-content:space-around!important}.align-items-xlg-start{align-items:flex-start!important}.align-items-xlg-end{align-items:flex-end!important}.align-items-xlg-center{align-items:center!important}.align-items-xlg-baseline{align-items:baseline!important}.align-items-xlg-stretch{align-items:stretch!important}.align-content-xlg-start{align-content:flex-start!important}.align-content-xlg-end{align-content:flex-end!important}.align-content-xlg-center{align-content:center!important}.align-content-xlg-between{align-content:space-between!important}.align-content-xlg-around{align-content:space-around!important}.align-content-xlg-stretch{align-content:stretch!important}.align-self-xlg-auto{-ms-grid-row-align:auto!important;align-self:auto!important}.align-self-xlg-start{align-self:flex-start!important}.align-self-xlg-end{align-self:flex-end!important}.align-self-xlg-center{-ms-grid-row-align:center!important;align-self:center!important}.align-self-xlg-baseline{align-self:baseline!important}.align-self-xlg-stretch{-ms-grid-row-align:stretch!important;align-self:stretch!important}}:host.cmx-header-cell{font-family:Roboto,sans-serif;padding-left:12px;padding-right:12px;box-sizing:border-box;-moz-box-sizing:border-box;-webkit-box-sizing:border-box;position:relative}:host.cmx-header-cell.--has-filters{cursor:pointer}:host.cmx-header-cell.--has-filters .cmx-header-cell__text:hover{color:#3fa9f5}:host.cmx-header-cell.--has-filters .text-container{padding-right:16px}:host.cmx-header-cell.--active-filters .cmx-header-cell__text{color:#3fa9f5}:host.cmx-header-cell.--number .cmx-header-cell__text{text-align:right}:host.cmx-header-cell.--number .text-container{float:right}html[dir=rtl] :host.cmx-header-cell.--has-filters .cmx-icon__container{left:0;right:unset}html[dir=rtl] :host.cmx-header-cell.--has-filters .text-container{padding-right:0;padding-left:16px}html[dir=rtl] :host.cmx-header-cell.--number .cmx-header-cell__text{text-align:left}html[dir=rtl] :host.cmx-header-cell.--number .text-container{float:left}svg{width:10px;height:10px;margin-left:4px;fill:#3fa9f5}.cmx-header-cell__text{font-weight:700;color:#001b3a;font-size:.875rem;width:100%}.cmx-header-cell__filters-container{z-index:10;position:absolute;top:100%;width:auto;height:auto;background-color:#fff;box-shadow:0 8px 13px rgba(0,0,0,.3);-webkit-box-shadow:0 8px 13px rgba(0,0,0,.3);-moz-box-shadow:0 8px 13px rgba(0,0,0,.3)}.cmx-header-cell__mask{z-index:9;opacity:0;background:0 0;position:fixed;width:100vw;height:100vh;top:0;left:0;display:block;cursor:default}.text-container{position:relative;overflow:hidden;text-overflow:ellipsis;width:auto;display:inline-block}.cmx-icon__container{position:absolute;top:0;right:0}"]
                    }] }
        ];
        /** @nocollapse */
        CmxHeaderCellComponent.ctorParameters = function () {
            return [
                { type: CmxTableComponent, decorators: [{ type: core.Host }] },
                { type: core.Renderer2 }
            ];
        };
        CmxHeaderCellComponent.propDecorators = {
            cmxHeaderCellClass: [{ type: core.HostBinding, args: ['class.cmx-header-cell',] }],
            hasFiltersClass: [{ type: core.HostBinding, args: ['class.--has-filters',] }],
            activeFiltersClass: [{ type: core.HostBinding, args: ['class.--active-filters',] }],
            checkboxFilters: [{ type: core.ContentChild, args: [CmxCheckboxFiltersComponent,] }],
            datepickerFilter: [{ type: core.ContentChild, args: [CmxDatepickerFilterComponent,] }],
            filterSorter: [{ type: core.ContentChild, args: [CmxFilterSorterComponent,] }],
            filtersContainer: [{ type: core.ViewChild, args: ['filtersContainer',] }]
        };
        return CmxHeaderCellComponent;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var RowPlaceholderDirective = /** @class */ (function () {
        function RowPlaceholderDirective(viewContainerReference) {
            this.viewContainerReference = viewContainerReference;
            this.cmxRowClass = true;
        }
        RowPlaceholderDirective.decorators = [
            { type: core.Directive, args: [{
                        selector: '[rowPlaceholder]',
                    },] }
        ];
        /** @nocollapse */
        RowPlaceholderDirective.ctorParameters = function () {
            return [
                { type: core.ViewContainerRef }
            ];
        };
        RowPlaceholderDirective.propDecorators = {
            cmxRowClass: [{ type: core.HostBinding, args: ['class.cmx-row',] }]
        };
        return RowPlaceholderDirective;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var HeaderPlaceholderDirective = /** @class */ (function () {
        function HeaderPlaceholderDirective(viewContainerReference) {
            this.viewContainerReference = viewContainerReference;
            this.cmxHeaderClass = true;
        }
        HeaderPlaceholderDirective.decorators = [
            { type: core.Directive, args: [{
                        selector: '[headerPlaceholder]',
                    },] }
        ];
        /** @nocollapse */
        HeaderPlaceholderDirective.ctorParameters = function () {
            return [
                { type: core.ViewContainerRef }
            ];
        };
        HeaderPlaceholderDirective.propDecorators = {
            cmxHeaderClass: [{ type: core.HostBinding, args: ['class.cmx-header',] }]
        };
        return HeaderPlaceholderDirective;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var CmxTableComponent = /** @class */ (function () {
        function CmxTableComponent(watcher) {
            this.watcher = watcher;
            this.cmxTableClass = true;
            this.pages = [];
            this.tableHasScroll = false;
            this._dataSource = [];
            this._pageSize = 30;
            this._rtl = false;
            this.currentActivePage = 1;
            this.currentPageData = [];
            this.viewportData = [];
            this.activeFiltersCopy = [];
            this.rowViewReferences = [];
        }
        Object.defineProperty(CmxTableComponent.prototype, "tableSource", {
            get: /**
             * @return {?}
             */ function () {
                return this._table;
            },
            set: /**
             * @param {?} $value
             * @return {?}
             */ function ($value) {
                if ($value !== undefined && $value !== null && $value instanceof Table) {
                    this._table = $value;
                    this.renderHeader();
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CmxTableComponent.prototype, "dataSource", {
            get: /**
             * @return {?}
             */ function () {
                return this._dataSource;
            },
            set: /**
             * @param {?} $value
             * @return {?}
             */ function ($value) {
                if ($value !== undefined && $value !== null) {
                    this._dataSource = $value;
                    this.viewportData = $value;
                    this.rowViewReferences = [];
                    this.initialize();
                }
                else {
                    this._dataSource = [];
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CmxTableComponent.prototype, "updateDataSource", {
            set: /**
             * @param {?} $value
             * @return {?}
             */ function ($value) {
                if ($value !== undefined && $value !== null) {
                    this._dataSource = $value;
                    this.viewportData = $value;
                    this.rowViewReferences = [];
                    this.updateDataTable();
                }
                else {
                    this._dataSource = [];
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CmxTableComponent.prototype, "pageSize", {
            get: /**
             * @return {?}
             */ function () {
                return this._pageSize;
            },
            set: /**
             * @param {?} $value
             * @return {?}
             */ function ($value) {
                if ($value !== undefined && $value !== null) {
                    this._pageSize = $value;
                    this.calculateNumberOfPages();
                    this.setPageData();
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CmxTableComponent.prototype, "rtl", {
            get: /**
             * @return {?}
             */ function () {
                return this._rtl;
            },
            set: /**
             * @param {?} $value
             * @return {?}
             */ function ($value) {
                if ($value !== undefined && $value !== null) {
                    this._rtl = $value;
                }
            },
            enumerable: true,
            configurable: true
        });
        /**
         * @return {?}
         */
        CmxTableComponent.prototype.ngAfterContentInit = /**
         * @return {?}
         */
            function () {
                var _this = this;
                this.renderHeader();
                this.assignedId = this.watcher.createSubject();
                this.activeFiltersSubscription = this.watcher.listenToActiveFilters(this.assignedId)
                    .subscribe(( /**
             * @param {?} $event
             * @return {?}
             */function ($event) {
                    if ($event.length > 0) {
                        _this.activeFiltersCopy = $event;
                        // there are filters to apply
                        _this.viewportData = _this.filterData($event);
                    }
                    else {
                        _this.activeFiltersCopy = [];
                        // no filters to apply
                        _this.viewportData = _this._dataSource;
                    }
                    _this.currentActivePage = 1;
                    _this.calculateNumberOfPages();
                    _this.setPageData();
                }));
            };
        /**
         * @return {?}
         */
        CmxTableComponent.prototype.ngOnDestroy = /**
         * @return {?}
         */
            function () {
                this.rowPlaceholder.viewContainerReference.clear();
                this.headerPlaceholder.viewContainerReference.clear();
                this.activeFiltersSubscription.unsubscribe();
            };
        /**
         * returns the items including filters applied in table
         * Author: Andres Santos
         */
        /**
         * returns the items including filters applied in table
         * Author: Andres Santos
         * @return {?}
         */
        CmxTableComponent.prototype.filteredItems = /**
         * returns the items including filters applied in table
         * Author: Andres Santos
         * @return {?}
         */
            function () {
                return this.viewportData;
            };
        /**
         * returns the items including filters applied in current page
         * Author: Andres Santos
         */
        /**
         * returns the items including filters applied in current page
         * Author: Andres Santos
         * @return {?}
         */
        CmxTableComponent.prototype.filteredItemsInPage = /**
         * returns the items including filters applied in current page
         * Author: Andres Santos
         * @return {?}
         */
            function () {
                return this.currentPageData;
            };
        /**
         * @return {?}
         */
        CmxTableComponent.prototype.clearActiveFilters = /**
         * @return {?}
         */
            function () {
                this.watcher.clearActiveFilters();
            };
        /**
         * returns the current active filters
         * Author: Antonio Vargas
         */
        /**
         * returns the current active filters
         * Author: Antonio Vargas
         * @return {?}
         */
        CmxTableComponent.prototype.getActiveFiltersCopy = /**
         * returns the current active filters
         * Author: Antonio Vargas
         * @return {?}
         */
            function () {
                return this.activeFiltersCopy;
            };
        /**
         * Triggers the filtering of data
         */
        /**
         * Triggers the filtering of data
         * @param {?} $activeFilters
         * @return {?}
         */
        CmxTableComponent.prototype.triggerFilter = /**
         * Triggers the filtering of data
         * @param {?} $activeFilters
         * @return {?}
         */
            function ($activeFilters) {
                if ($activeFilters.length > 0) {
                    // there are filters to apply
                    this.viewportData = this.filterData($activeFilters);
                }
                else {
                    // no filters to apply
                    this.viewportData = this._dataSource;
                }
                this.calculateNumberOfPages();
                this.setPageData();
            };
        /**
         * @description Resets the table visualization.
         */
        /**
         * \@description Resets the table visualization.
         * @return {?}
         */
        CmxTableComponent.prototype.reset = /**
         * \@description Resets the table visualization.
         * @return {?}
         */
            function () {
                this.currentActivePage = 1;
                this.rowViewReferences = [];
                this.initialize();
            };
        /**
         * @param {?} activeFilters
         * @return {?}
         */
        CmxTableComponent.prototype.filterData = /**
         * @param {?} activeFilters
         * @return {?}
         */
            function (activeFilters) {
                var _this = this;
                var e_1, _a;
                /** @type {?} */
                var result = this._dataSource;
                /** @type {?} */
                var data = this._dataSource;
                /** @type {?} */
                var aux = [];
                /** @type {?} */
                var filtered = [];
                activeFilters.forEach(( /**
                 * @param {?} $filter
                 * @return {?}
                 */function ($filter) {
                    filtered[$filter.columnKey] = [];
                }));
                activeFilters.forEach(( /**
                 * @param {?} $filter
                 * @param {?} $index
                 * @return {?}
                 */function ($filter, $index) {
                    aux = data.filter(_this._table.getColumn($filter.columnKey).getFilterFunction($filter));
                    filtered[$filter.columnKey] = filtered[$filter.columnKey].concat(aux);
                }));
                try {
                    for (var _b = __values(Object.keys(filtered)), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var $key = _c.value;
                        result = this.findIntersection(result, filtered[$key]);
                    }
                }
                catch (e_1_1) {
                    e_1 = { error: e_1_1 };
                }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return))
                            _a.call(_b);
                    }
                    finally {
                        if (e_1)
                            throw e_1.error;
                    }
                }
                return result;
            };
        /**
         * @param {?} columnId
         * @param {?} ASC
         * @return {?}
         */
        CmxTableComponent.prototype.sortData = /**
         * @param {?} columnId
         * @param {?} ASC
         * @return {?}
         */
            function (columnId, ASC) {
                this.viewportData = this.viewportData.sort(this._table.getColumn(columnId).getSortFunction(ASC));
                this.calculateNumberOfPages();
                this.setPageData();
            };
        /**
         * @description Apply the current active filters in the table
         */
        /**
         * \@description Apply the current active filters in the table
         * @return {?}
         */
        CmxTableComponent.prototype.applyCurrentFilters = /**
         * \@description Apply the current active filters in the table
         * @return {?}
         */
            function () {
                if (this.activeFiltersCopy.length > 0) {
                    this.viewportData = this.filterData(this.activeFiltersCopy);
                }
                else {
                    this.viewportData = this._dataSource;
                }
                this.calculateNumberOfPages();
                this.setPageData();
            };
        /**
         * @description Overwrite the active filters with new ones to apply
         * @param  $filters: array<Filter>
         */
        /**
         * \@description Overwrite the active filters with new ones to apply
         * @param {?} $filters
         * @return {?}
         */
        CmxTableComponent.prototype.applyNewFilters = /**
         * \@description Overwrite the active filters with new ones to apply
         * @param {?} $filters
         * @return {?}
         */
            function ($filters) {
                if ($filters && $filters.length > 0) {
                    this.viewportData = this.filterData($filters);
                }
                else {
                    this.viewportData = this._dataSource;
                }
                this.calculateNumberOfPages();
                this.setPageData();
            };
        /**
         * @param {?} $currentPage
         * @return {?}
         */
        CmxTableComponent.prototype.setCurrentPage = /**
         * @param {?} $currentPage
         * @return {?}
         */
            function ($currentPage) {
                this.currentActivePage = $currentPage;
                this.setPageData();
            };
        /**
         * @private
         * @return {?}
         */
        CmxTableComponent.prototype.initialize = /**
         * @private
         * @return {?}
         */
            function () {
                this.rowPlaceholder.viewContainerReference.clear();
                this.headerPlaceholder.viewContainerReference.clear();
                this.renderHeader();
                this.calculateNumberOfPages();
                this.setPageData();
            };
        /**
         * @private
         * @return {?}
         */
        CmxTableComponent.prototype.updateDataTable = /**
         * @private
         * @return {?}
         */
            function () {
                this.rowPlaceholder.viewContainerReference.clear();
                this.calculateNumberOfPages();
                this.setPageData();
            };
        /**
         * @private
         * @return {?}
         */
        CmxTableComponent.prototype.checkIfTableHasScroll = /**
         * @private
         * @return {?}
         */
            function () {
                if (this.cmxTableBodyElement &&
                    this.cmxTableBodyElement.nativeElement.offsetHeight <
                        this.cmxTableBodyElement.nativeElement.scrollHeight) {
                    this.tableHasScroll = true;
                }
                else {
                    this.tableHasScroll = false;
                }
            };
        // =============================================================================================
        // views' rendering
        // =============================================================================================
        // =============================================================================================
        // views' rendering
        // =============================================================================================
        /**
         * @private
         * @return {?}
         */
        CmxTableComponent.prototype.renderHeader =
            // =============================================================================================
            // views' rendering
            // =============================================================================================
            /**
             * @private
             * @return {?}
             */
            function () {
                var _this = this;
                this.headerPlaceholder.viewContainerReference.clear();
                if (this.headerDefinitions) {
                    this.headerDefinitions.forEach(( /**
                     * @param {?} headerDef
                     * @return {?}
                     */function (headerDef) {
                        /** @type {?} */
                        var context = { $implicit: _this._table };
                        _this.headerPlaceholder.viewContainerReference.createEmbeddedView(headerDef.template, context);
                    }));
                }
            };
        /**
         * @private
         * @return {?}
         */
        CmxTableComponent.prototype.renderRows = /**
         * @private
         * @return {?}
         */
            function () {
                var _this = this;
                if (this.rowDefinitions) {
                    if (this.rowViewReferences && this.rowViewReferences.length > 0) {
                        // the views already exist
                        this.updateRowsContext();
                    }
                    else {
                        // first rendering of the rows
                        this.rowDefinitions.forEach(( /**
                         * @param {?} rowDef
                         * @return {?}
                         */function (rowDef) {
                            _this.currentPageData.forEach(( /**
                             * @param {?} rowData
                             * @param {?} $index
                             * @return {?}
                             */function (rowData, $index) {
                                /** @type {?} */
                                var context = { $implicit: rowData };
                                /** @type {?} */
                                var ref = _this.rowPlaceholder.viewContainerReference.createEmbeddedView(rowDef.template, context);
                                _this.rowViewReferences.push(ref);
                            }));
                        }));
                    }
                }
            };
        /**
         * @private
         * @return {?}
         */
        CmxTableComponent.prototype.updateRowsContext = /**
         * @private
         * @return {?}
         */
            function () {
                var _this = this;
                if (this.rowDefinitions) {
                    this.rowDefinitions.forEach(( /**
                     * @param {?} rowDef
                     * @return {?}
                     */function (rowDef) {
                        _this.rowViewReferences.forEach(( /**
                         * @param {?} viewRef
                         * @param {?} $index
                         * @return {?}
                         */function (viewRef, $index) {
                            if ($index > (_this.currentPageData.length - 1)) {
                                // the current page has less data to show than the set page size
                                if (viewRef !== undefined) {
                                    viewRef.destroy();
                                }
                                _this.rowViewReferences.splice($index, 1, undefined);
                            }
                            else {
                                // the view reference is used on the current page
                                /** @type {?} */
                                var context = { $implicit: _this.currentPageData[$index] };
                                if (viewRef === undefined) {
                                    // the view reference was destroyed, a new replacement
                                    /** @type {?} */
                                    var ref = _this.rowPlaceholder.viewContainerReference
                                        .createEmbeddedView(rowDef.template, context, $index);
                                    _this.rowViewReferences[$index] = ref;
                                }
                                else {
                                    // no new view reference is required, update the context data
                                    viewRef.context.$implicit = context.$implicit;
                                }
                            }
                        }));
                    }));
                }
            };
        // =============================================================================================
        // filters
        // =============================================================================================
        // =============================================================================================
        // filters
        // =============================================================================================
        /**
         * @private
         * @param {?} arrayOne
         * @param {?} arrayTwo
         * @return {?}
         */
        CmxTableComponent.prototype.findIntersection =
            // =============================================================================================
            // filters
            // =============================================================================================
            /**
             * @private
             * @param {?} arrayOne
             * @param {?} arrayTwo
             * @return {?}
             */
            function (arrayOne, arrayTwo) {
                /** @type {?} */
                var intersection = [];
                /** @type {?} */
                var $i = 0;
                /** @type {?} */
                var $j = 0;
                while ($i < arrayOne.length) {
                    $j = 0;
                    while ($j < arrayTwo.length) {
                        if (arrayOne[$i] === arrayTwo[$j]) {
                            intersection.push(arrayOne[$i]);
                        }
                        $j++;
                    }
                    $i++;
                }
                return intersection;
            };
        // =============================================================================================
        // pagination
        // =============================================================================================
        /**
         * @description Calculates the number of pages given the array of data and
         * determines the index of the data source for each page.
         */
        // =============================================================================================
        // pagination
        // =============================================================================================
        /**
         * \@description Calculates the number of pages given the array of data and
         * determines the index of the data source for each page.
         * @private
         * @return {?}
         */
        CmxTableComponent.prototype.calculateNumberOfPages =
            // =============================================================================================
            // pagination
            // =============================================================================================
            /**
             * \@description Calculates the number of pages given the array of data and
             * determines the index of the data source for each page.
             * @private
             * @return {?}
             */
            function () {
                /** @type {?} */
                var numberOfPages = Math.ceil(this.viewportData.length / this._pageSize);
                this.pages = [];
                /** @type {?} */
                var i = 1;
                do {
                    /** @type {?} */
                    var min = ((i - 1) * this._pageSize);
                    /** @type {?} */
                    var max = min + this._pageSize - 1;
                    this.pages.push(( /** @type {?} */({
                        pageNumber: i,
                        minIndex: min,
                        maxIndex: max
                    })));
                    i++;
                } while (i <= numberOfPages);
            };
        /**
         * @private
         * @return {?}
         */
        CmxTableComponent.prototype.setPageData = /**
         * @private
         * @return {?}
         */
            function () {
                var _this = this;
                /** @type {?} */
                var $page = this.pages.find(( /**
                 * @param {?} page
                 * @return {?}
                 */function (page) { return page.pageNumber === _this.currentActivePage; }));
                this.currentPageData = [];
                if ($page !== undefined && $page !== null) {
                    for (var $i = $page.minIndex; $i <= $page.maxIndex; $i++) {
                        if (this.viewportData[$i]) {
                            this.currentPageData.push(this.viewportData[$i]);
                        }
                    }
                }
                else {
                    this.currentActivePage = 1;
                    for (var $i = this.pages[0].minIndex; $i <= this.pages[0].maxIndex; $i++) {
                        if (this.viewportData[$i]) {
                            this.currentPageData.push(this.viewportData[$i]);
                        }
                    }
                }
                this.renderRows();
                this.checkIfTableHasScroll();
            };
        CmxTableComponent.decorators = [
            { type: core.Component, args: [{
                        selector: 'cmx-table',
                        template: "<div class=\"cmx-table-header\" [class.--scroll-spacing]=\"tableHasScroll\">\r\n    <ng-container headerPlaceholder></ng-container>\r\n</div>\r\n<div #cmxTableBody class=\"cmx-table-body\">\r\n    <ng-container rowPlaceholder></ng-container>\r\n</div>\r\n<div *ngIf=\"pages.length > 1\" style=\"text-align: center;\">\r\n    <cmx-pagination [pages]=\"pages.length\" [currentPage]=\"currentActivePage\"\r\n    (pageChanged)=\"setCurrentPage($event)\"></cmx-pagination>\r\n</div>",
                        styles: ["@import url(https://www.cemexgo.com/cdn/cmx-dls-icons.css);.roboto-bold{font-weight:700}.roboto-medium{font-weight:500}.roboto-regular{font-weight:400}.roboto-light{font-weight:300}.roboto-thin{font-weight:100}.h1-role,h1{font-family:Roboto,sans-serif;font-size:3rem;line-height:3rem;font-weight:700;color:#001b3a}.h2-role,.h3-role,h2,h3{font-family:Roboto,sans-serif;font-size:1.625rem;line-height:2rem;font-weight:400;color:#001b3a}.h4-role,h4{font-family:Roboto,sans-serif;font-size:2rem;line-height:2rem;font-weight:500;color:#001b3a}.h5-role,h5{font-family:Roboto,sans-serif;font-size:1.25rem;line-height:1.5rem;font-weight:400;color:#001b3a}.h6-role,h6{font-family:Roboto,sans-serif;font-size:.875rem;line-height:1rem;font-weight:700;color:#001b3a;text-transform:uppercase}.table-entry{font-family:Roboto,sans-serif;font-size:.875rem;line-height:1rem}.table-entry-strong{font-family:Roboto,sans-serif;font-size:.875rem;line-height:1rem;color:#333;font-weight:700}.link,.table-entry,a{text-decoration:none;color:#3fa9f5}a:hover{text-decoration:underline}.input-placeholder{font-family:Roboto,sans-serif;font-size:.875rem;line-height:1rem;color:#666}.input-text{font-family:Roboto,sans-serif;font-size:.875rem;line-height:1rem;color:#333}.size-15{font-size:.9375rem}.size-24{font-size:1.5rem}.text-left{text-align:left!important}.text-right{text-align:right!important}.text-center{text-align:center!important}.flex-first{order:-1}.flex-last{order:1}.flex-unordered{order:0}.flex-row{flex-direction:row!important}.flex-column{flex-direction:column!important}.flex-row-reverse{flex-direction:row-reverse!important}.flex-column-reverse{flex-direction:column-reverse!important}.flex-wrap{flex-wrap:wrap!important}.flex-nowrap{flex-wrap:nowrap!important}.flex-wrap-reverse{flex-wrap:wrap-reverse!important}.justify-content-start{justify-content:flex-start!important}.justify-content-end{justify-content:flex-end!important}.justify-content-center{justify-content:center!important}.justify-content-between{justify-content:space-between!important}.justify-content-around{justify-content:space-around!important}.align-items-start{align-items:flex-start!important}.align-items-end{align-items:flex-end!important}.align-items-center{align-items:center!important}.align-items-baseline{align-items:baseline!important}.align-items-stretch{align-items:stretch!important}.align-content-start{align-content:flex-start!important}.align-content-end{align-content:flex-end!important}.align-content-center{align-content:center!important}.align-content-between{align-content:space-between!important}.align-content-around{align-content:space-around!important}.align-content-stretch{align-content:stretch!important}.align-self-auto{-ms-grid-row-align:auto!important;align-self:auto!important}.align-self-start{align-self:flex-start!important}.align-self-end{align-self:flex-end!important}.align-self-center{-ms-grid-row-align:center!important;align-self:center!important}.align-self-baseline{align-self:baseline!important}.align-self-stretch{-ms-grid-row-align:stretch!important;align-self:stretch!important}@media (min-width:576px){.text-xs-left{text-align:left!important}.text-xs-right{text-align:right!important}.text-xs-center{text-align:center!important}.flex-xs-first{order:-1}.flex-xs-last{order:1}.flex-xs-unordered{order:0}.flex-xs-row{flex-direction:row!important}.flex-xs-column{flex-direction:column!important}.flex-xs-row-reverse{flex-direction:row-reverse!important}.flex-xs-column-reverse{flex-direction:column-reverse!important}.flex-xs-wrap{flex-wrap:wrap!important}.flex-xs-nowrap{flex-wrap:nowrap!important}.flex-xs-wrap-reverse{flex-wrap:wrap-reverse!important}.justify-content-xs-start{justify-content:flex-start!important}.justify-content-xs-end{justify-content:flex-end!important}.justify-content-xs-center{justify-content:center!important}.justify-content-xs-between{justify-content:space-between!important}.justify-content-xs-around{justify-content:space-around!important}.align-items-xs-start{align-items:flex-start!important}.align-items-xs-end{align-items:flex-end!important}.align-items-xs-center{align-items:center!important}.align-items-xs-baseline{align-items:baseline!important}.align-items-xs-stretch{align-items:stretch!important}.align-content-xs-start{align-content:flex-start!important}.align-content-xs-end{align-content:flex-end!important}.align-content-xs-center{align-content:center!important}.align-content-xs-between{align-content:space-between!important}.align-content-xs-around{align-content:space-around!important}.align-content-xs-stretch{align-content:stretch!important}.align-self-xs-auto{-ms-grid-row-align:auto!important;align-self:auto!important}.align-self-xs-start{align-self:flex-start!important}.align-self-xs-end{align-self:flex-end!important}.align-self-xs-center{-ms-grid-row-align:center!important;align-self:center!important}.align-self-xs-baseline{align-self:baseline!important}.align-self-xs-stretch{-ms-grid-row-align:stretch!important;align-self:stretch!important}}@media (min-width:768px){.text-sm-left{text-align:left!important}.text-sm-right{text-align:right!important}.text-sm-center{text-align:center!important}.flex-sm-first{order:-1}.flex-sm-last{order:1}.flex-sm-unordered{order:0}.flex-sm-row{flex-direction:row!important}.flex-sm-column{flex-direction:column!important}.flex-sm-row-reverse{flex-direction:row-reverse!important}.flex-sm-column-reverse{flex-direction:column-reverse!important}.flex-sm-wrap{flex-wrap:wrap!important}.flex-sm-nowrap{flex-wrap:nowrap!important}.flex-sm-wrap-reverse{flex-wrap:wrap-reverse!important}.justify-content-sm-start{justify-content:flex-start!important}.justify-content-sm-end{justify-content:flex-end!important}.justify-content-sm-center{justify-content:center!important}.justify-content-sm-between{justify-content:space-between!important}.justify-content-sm-around{justify-content:space-around!important}.align-items-sm-start{align-items:flex-start!important}.align-items-sm-end{align-items:flex-end!important}.align-items-sm-center{align-items:center!important}.align-items-sm-baseline{align-items:baseline!important}.align-items-sm-stretch{align-items:stretch!important}.align-content-sm-start{align-content:flex-start!important}.align-content-sm-end{align-content:flex-end!important}.align-content-sm-center{align-content:center!important}.align-content-sm-between{align-content:space-between!important}.align-content-sm-around{align-content:space-around!important}.align-content-sm-stretch{align-content:stretch!important}.align-self-sm-auto{-ms-grid-row-align:auto!important;align-self:auto!important}.align-self-sm-start{align-self:flex-start!important}.align-self-sm-end{align-self:flex-end!important}.align-self-sm-center{-ms-grid-row-align:center!important;align-self:center!important}.align-self-sm-baseline{align-self:baseline!important}.align-self-sm-stretch{-ms-grid-row-align:stretch!important;align-self:stretch!important}}@media (min-width:1080px){.text-md-left{text-align:left!important}.text-md-right{text-align:right!important}.text-md-center{text-align:center!important}.flex-md-first{order:-1}.flex-md-last{order:1}.flex-md-unordered{order:0}.flex-md-row{flex-direction:row!important}.flex-md-column{flex-direction:column!important}.flex-md-row-reverse{flex-direction:row-reverse!important}.flex-md-column-reverse{flex-direction:column-reverse!important}.flex-md-wrap{flex-wrap:wrap!important}.flex-md-nowrap{flex-wrap:nowrap!important}.flex-md-wrap-reverse{flex-wrap:wrap-reverse!important}.justify-content-md-start{justify-content:flex-start!important}.justify-content-md-end{justify-content:flex-end!important}.justify-content-md-center{justify-content:center!important}.justify-content-md-between{justify-content:space-between!important}.justify-content-md-around{justify-content:space-around!important}.align-items-md-start{align-items:flex-start!important}.align-items-md-end{align-items:flex-end!important}.align-items-md-center{align-items:center!important}.align-items-md-baseline{align-items:baseline!important}.align-items-md-stretch{align-items:stretch!important}.align-content-md-start{align-content:flex-start!important}.align-content-md-end{align-content:flex-end!important}.align-content-md-center{align-content:center!important}.align-content-md-between{align-content:space-between!important}.align-content-md-around{align-content:space-around!important}.align-content-md-stretch{align-content:stretch!important}.align-self-md-auto{-ms-grid-row-align:auto!important;align-self:auto!important}.align-self-md-start{align-self:flex-start!important}.align-self-md-end{align-self:flex-end!important}.align-self-md-center{-ms-grid-row-align:center!important;align-self:center!important}.align-self-md-baseline{align-self:baseline!important}.align-self-md-stretch{-ms-grid-row-align:stretch!important;align-self:stretch!important}}@media (min-width:1320px){.text-lg-left{text-align:left!important}.text-lg-right{text-align:right!important}.text-lg-center{text-align:center!important}.flex-lg-first{order:-1}.flex-lg-last{order:1}.flex-lg-unordered{order:0}.flex-lg-row{flex-direction:row!important}.flex-lg-column{flex-direction:column!important}.flex-lg-row-reverse{flex-direction:row-reverse!important}.flex-lg-column-reverse{flex-direction:column-reverse!important}.flex-lg-wrap{flex-wrap:wrap!important}.flex-lg-nowrap{flex-wrap:nowrap!important}.flex-lg-wrap-reverse{flex-wrap:wrap-reverse!important}.justify-content-lg-start{justify-content:flex-start!important}.justify-content-lg-end{justify-content:flex-end!important}.justify-content-lg-center{justify-content:center!important}.justify-content-lg-between{justify-content:space-between!important}.justify-content-lg-around{justify-content:space-around!important}.align-items-lg-start{align-items:flex-start!important}.align-items-lg-end{align-items:flex-end!important}.align-items-lg-center{align-items:center!important}.align-items-lg-baseline{align-items:baseline!important}.align-items-lg-stretch{align-items:stretch!important}.align-content-lg-start{align-content:flex-start!important}.align-content-lg-end{align-content:flex-end!important}.align-content-lg-center{align-content:center!important}.align-content-lg-between{align-content:space-between!important}.align-content-lg-around{align-content:space-around!important}.align-content-lg-stretch{align-content:stretch!important}.align-self-lg-auto{-ms-grid-row-align:auto!important;align-self:auto!important}.align-self-lg-start{align-self:flex-start!important}.align-self-lg-end{align-self:flex-end!important}.align-self-lg-center{-ms-grid-row-align:center!important;align-self:center!important}.align-self-lg-baseline{align-self:baseline!important}.align-self-lg-stretch{-ms-grid-row-align:stretch!important;align-self:stretch!important}}@media (min-width:1560px){.text-xlg-left{text-align:left!important}.text-xlg-right{text-align:right!important}.text-xlg-center{text-align:center!important}.flex-xlg-first{order:-1}.flex-xlg-last{order:1}.flex-xlg-unordered{order:0}.flex-xlg-row{flex-direction:row!important}.flex-xlg-column{flex-direction:column!important}.flex-xlg-row-reverse{flex-direction:row-reverse!important}.flex-xlg-column-reverse{flex-direction:column-reverse!important}.flex-xlg-wrap{flex-wrap:wrap!important}.flex-xlg-nowrap{flex-wrap:nowrap!important}.flex-xlg-wrap-reverse{flex-wrap:wrap-reverse!important}.justify-content-xlg-start{justify-content:flex-start!important}.justify-content-xlg-end{justify-content:flex-end!important}.justify-content-xlg-center{justify-content:center!important}.justify-content-xlg-between{justify-content:space-between!important}.justify-content-xlg-around{justify-content:space-around!important}.align-items-xlg-start{align-items:flex-start!important}.align-items-xlg-end{align-items:flex-end!important}.align-items-xlg-center{align-items:center!important}.align-items-xlg-baseline{align-items:baseline!important}.align-items-xlg-stretch{align-items:stretch!important}.align-content-xlg-start{align-content:flex-start!important}.align-content-xlg-end{align-content:flex-end!important}.align-content-xlg-center{align-content:center!important}.align-content-xlg-between{align-content:space-between!important}.align-content-xlg-around{align-content:space-around!important}.align-content-xlg-stretch{align-content:stretch!important}.align-self-xlg-auto{-ms-grid-row-align:auto!important;align-self:auto!important}.align-self-xlg-start{align-self:flex-start!important}.align-self-xlg-end{align-self:flex-end!important}.align-self-xlg-center{-ms-grid-row-align:center!important;align-self:center!important}.align-self-xlg-baseline{align-self:baseline!important}.align-self-xlg-stretch{-ms-grid-row-align:stretch!important;align-self:stretch!important}}:host{font-family:Roboto,sans-serif;box-sizing:border-box;-moz-box-sizing:border-box;-webkit-box-sizing:border-box}:host.cmx-table{display:block}.table-container{position:relative;width:100%;height:100%;background-color:#f4f6f9;display:block}.cmx-table-header{text-decoration:none;font-size:.75rem;line-height:20px;color:#001b3a;display:block;border-collapse:collapse;margin-bottom:4px;padding:10px 0;width:100%;box-sizing:border-box;-moz-box-sizing:border-box;-webkit-box-sizing:border-box}.cmx-table-header.--scroll-spacing{padding-right:2.5vh;padding-left:0}html[dir=rtl] :host .cmx-table-header{padding-left:10px}.cmx-table-body{display:block;padding:0;background-color:none;margin-bottom:16px;overflow-x:hidden}.--truncate-text{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;max-width:100%;min-width:0}:host::ng-deep .cmx-table-item{border-collapse:collapse;margin-bottom:4px;padding:8px 0;height:40px;width:100%;box-sizing:border-box;-moz-box-sizing:border-box;-webkit-box-sizing:border-box;border-top:2px solid #f4f6f9;border-bottom:2px solid #f4f6f9;background-color:#fff;transition:background-color .5s ease-out;-moz-transition:background-color .5s ease-out;-webkit-transition:background-color .5s ease-out}:host::ng-deep .cmx-table-item.checked{background-color:#b7deff!important}:host::ng-deep .cmx-table-item:hover{background-color:#d6d6d6}:host::ng-deep .cmx-table-item:nth-child(even){background-color:#e8ebef}:host::ng-deep .cmx-table-item:nth-child(even):hover{background-color:#d6d6d6}:host::ng-deep .cmx-cell{overflow:hidden;white-space:nowrap;text-overflow:ellipsis;padding-left:12px;padding-right:12px;color:#333;font-family:Roboto,sans-serif;font-size:.75rem;line-height:.75rem}:host::ng-deep .status{width:24px;height:16px;border-radius:2px;margin-right:8px;background-color:#d6d6d6}:host::ng-deep .status.ok{background-color:#7ac943}:host::ng-deep .status.warning{background-color:#f9a23d}:host::ng-deep .status.error{background-color:#c0392b}.pagination{display:inline-block;list-style:none;padding:0;margin:0}.pagination li{display:inline-block;margin:0 8px;float:left}.pagination li a{cursor:pointer;font-size:.875rem;line-height:22px;width:24px;height:24px;display:inline-block;color:#5c6570;float:left;text-decoration:none;border-radius:2px;text-align:center;border:1px solid transparent}.pagination li a.hover,.pagination li a:hover{border:1px solid #3fa9f5}.pagination li a.current{color:#fff;background:#3fa9f5}.pagination li svg{width:8px;height:12px;fill:#3fa9f5;transition:.25s}.pagination .pagination-next.hide,.pagination .pagination-prev.hide{display:none}.pagination .pagination-next.hover a,.pagination .pagination-next:hover a,.pagination .pagination-prev.hover a,.pagination .pagination-prev:hover a{border:0}.pagination .pagination-next.hover a svg,.pagination .pagination-next:hover a svg,.pagination .pagination-prev.hover a svg,.pagination .pagination-prev:hover a svg{width:16px;height:20px;fill:#3fa9f5}"]
                    }] }
        ];
        /** @nocollapse */
        CmxTableComponent.ctorParameters = function () {
            return [
                { type: WatcherService }
            ];
        };
        CmxTableComponent.propDecorators = {
            tableSource: [{ type: core.Input }],
            dataSource: [{ type: core.Input }],
            updateDataSource: [{ type: core.Input }],
            pageSize: [{ type: core.Input }],
            rtl: [{ type: core.Input }],
            cmxTableClass: [{ type: core.HostBinding, args: ['class.cmx-table',] }],
            rowDefinitions: [{ type: core.ContentChildren, args: [CmxRowTemplateDirective,] }],
            headerDefinitions: [{ type: core.ContentChildren, args: [CmxHeaderTemplateDirective,] }],
            headerCells: [{ type: core.ContentChildren, args: [CmxHeaderCellComponent, { descendants: true },] }],
            rowPlaceholder: [{ type: core.ViewChild, args: [RowPlaceholderDirective,] }],
            headerPlaceholder: [{ type: core.ViewChild, args: [HeaderPlaceholderDirective,] }],
            cmxTableBodyElement: [{ type: core.ViewChild, args: ['cmxTableBody',] }]
        };
        return CmxTableComponent;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var CmxPaginationComponent = /** @class */ (function () {
        function CmxPaginationComponent(parent) {
            var _this = this;
            this.parent = parent;
            this.pageChanged = new core.EventEmitter();
            this.beginning = [];
            this.end = [];
            this.state = 1;
            this.isRtl = false;
            this._currentPage = 1;
            this.range = 5;
            // strange shit that a delay is needed to set the value from the parent
            setTimeout(( /**
             * @return {?}
             */function () {
                _this.isRtl = _this.parent.rtl;
            }), 100);
        }
        Object.defineProperty(CmxPaginationComponent.prototype, "pages", {
            get: /**
             * @return {?}
             */ function () {
                return this._pages;
            },
            set: /**
             * @param {?} $value
             * @return {?}
             */ function ($value) {
                if ($value !== undefined && $value !== null) {
                    this._pages = $value;
                    this.organizePages();
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CmxPaginationComponent.prototype, "currentPage", {
            get: /**
             * @return {?}
             */ function () {
                return this._currentPage;
            },
            set: /**
             * @param {?} $value
             * @return {?}
             */ function ($value) {
                if ($value !== undefined && $value != null) {
                    this._currentPage = $value;
                    if (this._currentPage < this.range) {
                        this.state = 1;
                    }
                    else if (this._currentPage >= this.range &&
                        this._currentPage <= (this.pages - this.range)) {
                        this.state = 2;
                    }
                    else if (this._currentPage > (this.pages - this.range)) {
                        this.state = 3;
                    }
                }
            },
            enumerable: true,
            configurable: true
        });
        /**
         * @description Goes one page down from the current one.
         */
        /**
         * \@description Goes one page down from the current one.
         * @return {?}
         */
        CmxPaginationComponent.prototype.previousPage = /**
         * \@description Goes one page down from the current one.
         * @return {?}
         */
            function () {
                /** @type {?} */
                var $calc = this.currentPage - 1;
                if ($calc > 0) {
                    this.setPage($calc);
                }
            };
        /**
         * @description Goes one page up from the current one.
         */
        /**
         * \@description Goes one page up from the current one.
         * @return {?}
         */
        CmxPaginationComponent.prototype.nextPage = /**
         * \@description Goes one page up from the current one.
         * @return {?}
         */
            function () {
                /** @type {?} */
                var $calc = this.currentPage + 1;
                if ($calc <= this.pages) {
                    this.setPage($calc);
                }
            };
        /**
         * @description Check if the last page shortcut is shown
         * whether the first page is present or not.
         * @returns boolean
         */
        /**
         * \@description Check if the last page shortcut is shown
         * whether the first page is present or not.
         * @return {?} boolean
         */
        CmxPaginationComponent.prototype.showFirstPageShortcut = /**
         * \@description Check if the last page shortcut is shown
         * whether the first page is present or not.
         * @return {?} boolean
         */
            function () {
                /** @type {?} */
                var $show = true;
                this.end.forEach(( /**
                 * @param {?} $page
                 * @return {?}
                 */function ($page) {
                    if ($page === 1) {
                        $show = false;
                    }
                }));
                return $show && (this.state !== 1);
            };
        /**
         * @description Check if the last page shortcut is shown
         * whether the last page is present or not.
         * @returns boolean
         */
        /**
         * \@description Check if the last page shortcut is shown
         * whether the last page is present or not.
         * @return {?} boolean
         */
        CmxPaginationComponent.prototype.showLastPageShortcut = /**
         * \@description Check if the last page shortcut is shown
         * whether the last page is present or not.
         * @return {?} boolean
         */
            function () {
                var _this = this;
                /** @type {?} */
                var $show = true;
                this.beginning.forEach(( /**
                 * @param {?} $page
                 * @return {?}
                 */function ($page) {
                    if ($page === _this.pages) {
                        $show = false;
                    }
                }));
                return $show && (this.state !== 3);
            };
        /**
         * @description Sets the current page from the user's click.
         * @param number $page The number of the page clicked.
         */
        /**
         * \@description Sets the current page from the user's click.
         * @param {?} $page
         * @return {?}
         */
        CmxPaginationComponent.prototype.setPage = /**
         * \@description Sets the current page from the user's click.
         * @param {?} $page
         * @return {?}
         */
            function ($page) {
                this.currentPage = $page;
                if (this.currentPage < this.range) {
                    this.state = 1;
                }
                else if (this.currentPage >= this.range &&
                    this.currentPage <= (this.pages - this.range)) {
                    this.state = 2;
                }
                else if (this.currentPage > (this.pages - this.range)) {
                    this.state = 3;
                }
                this.pageChanged.emit(this.currentPage);
            };
        /**
         * @private
         * @return {?}
         */
        CmxPaginationComponent.prototype.organizePages = /**
         * @private
         * @return {?}
         */
            function () {
                this.state = 1;
                this.currentPage = 1;
                this.beginning = [];
                this.end = [];
                /** @type {?} */
                var $i = 1;
                while ($i <= this.range && $i <= this.pages) {
                    this.beginning.push($i);
                    $i++;
                }
                $i = (this.pages - this.range);
                if ($i === 0) {
                    $i++;
                }
                while ($i <= this.pages) {
                    this.end.push($i);
                    $i++;
                }
            };
        CmxPaginationComponent.decorators = [
            { type: core.Component, args: [{
                        selector: 'cmx-pagination',
                        template: "<ul class=\"pagination\" [dir]=\"isRtl ? 'rtl':''\">\r\n    <ng-container *ngIf=\"currentPage !== 1\">\r\n        <li class=\"pagination-prev\">\r\n            <a (click)=\"previousPage()\">\r\n                <ng-container *ngIf=\"isRtl === false\">\r\n                    <svg id=\"icon-straight-arrow-left\" viewBox=\"0 0 6 10\" width=\"100%\" height=\"100%\">\r\n                        <title>icon-straight-arrow-left</title>\r\n                        <polygon class=\"icon-straight-arrow-left\" points=\"4.86 0 6 1.18 2.29 5 6 8.83 4.86 10 0 5 4.86 0\"></polygon>\r\n                    </svg>\r\n                </ng-container>\r\n                <ng-container *ngIf=\"isRtl === true\">\r\n                    <svg id=\"icon-straight-arrow-right\" viewBox=\"0 0 6 10\" width=\"100%\" height=\"100%\">\r\n                        <title>icon-straight-arrow-right</title>\r\n                        <polygon class=\"icon-straight-arrow-right\" points=\"1.14 0 0 1.18 3.71 5 0 8.83 1.14 10 6 5 1.14 0\"></polygon>\r\n                    </svg>\r\n                </ng-container>\r\n            </a>\r\n        </li>\r\n    </ng-container>\r\n    <ng-container *ngIf=\"showFirstPageShortcut()\">\r\n        <li>\r\n            <a (click)=\"setPage(1)\">\r\n                1\r\n            </a>\r\n        </li>\r\n        <li>\r\n            ...\r\n        </li>\r\n    </ng-container>\r\n    <ng-container *ngIf=\"state === 1\">\r\n        <ng-container *ngFor=\"let $page of beginning;\">\r\n            <li>\r\n                <a [class.current]=\"$page === currentPage\" (click)=\"setPage($page)\">\r\n                    {{ $page }}\r\n                </a>\r\n            </li>    \r\n        </ng-container>\r\n    </ng-container>\r\n    <ng-container *ngIf=\"state === 2\">\r\n        <li>\r\n            <a (click)=\"setPage(currentPage - 1)\">\r\n                {{ currentPage - 1 }}\r\n            </a>\r\n        </li>\r\n        <li>\r\n            <a class=\"current\" (click)=\"setPage(currentPage)\">\r\n                {{ currentPage }}\r\n            </a>\r\n        </li>\r\n        <li>\r\n            <a (click)=\"setPage(currentPage + 1)\">\r\n                {{ currentPage + 1 }}\r\n            </a>\r\n        </li>   \r\n    </ng-container>\r\n    <ng-container *ngIf=\"state === 3\">\r\n        <ng-container *ngFor=\"let $page of end;\">\r\n            <li>\r\n                <a [class.current]=\"$page === currentPage\" (click)=\"setPage($page)\">\r\n                    {{ $page }}\r\n                </a>\r\n            </li>      \r\n        </ng-container>\r\n    </ng-container>\r\n    <ng-container *ngIf=\"showLastPageShortcut()\">\r\n        <li>\r\n            ...\r\n        </li>\r\n        <li>\r\n            <a (click)=\"setPage(pages)\">\r\n                {{ pages }}\r\n            </a>\r\n        </li>\r\n    </ng-container>\r\n    <ng-container *ngIf=\"currentPage !== pages\">\r\n        <li class=\"pagination-next\">\r\n            <a (click)=\"nextPage()\">\r\n                <ng-container *ngIf=\"isRtl === false\">\r\n                    <svg id=\"icon-straight-arrow-right\" viewBox=\"0 0 6 10\" width=\"100%\" height=\"100%\">\r\n                        <title>icon-straight-arrow-right</title>\r\n                        <polygon class=\"icon-straight-arrow-right\" points=\"1.14 0 0 1.18 3.71 5 0 8.83 1.14 10 6 5 1.14 0\"></polygon>\r\n                    </svg>\r\n                </ng-container>\r\n                <ng-container *ngIf=\"isRtl === true\">\r\n                    <svg id=\"icon-straight-arrow-left\" viewBox=\"0 0 6 10\" width=\"100%\" height=\"100%\">\r\n                        <title>icon-straight-arrow-left</title>\r\n                        <polygon class=\"icon-straight-arrow-left\" points=\"4.86 0 6 1.18 2.29 5 6 8.83 4.86 10 0 5 4.86 0\"></polygon>\r\n                    </svg>\r\n                </ng-container>\r\n            </a>\r\n        </li>\r\n    </ng-container>\r\n</ul>",
                        styles: [".roboto-bold{font-weight:700}.roboto-medium{font-weight:500}.roboto-regular{font-weight:400}.roboto-light{font-weight:300}.roboto-thin{font-weight:100}.h1-role,h1{font-family:Roboto,sans-serif;font-size:3rem;line-height:3rem;font-weight:700;color:#001b3a}.h2-role,.h3-role,h2,h3{font-family:Roboto,sans-serif;font-size:1.625rem;line-height:2rem;font-weight:400;color:#001b3a}.h4-role,h4{font-family:Roboto,sans-serif;font-size:2rem;line-height:2rem;font-weight:500;color:#001b3a}.h5-role,h5{font-family:Roboto,sans-serif;font-size:1.25rem;line-height:1.5rem;font-weight:400;color:#001b3a}.h6-role,h6{font-family:Roboto,sans-serif;font-size:.875rem;line-height:1rem;font-weight:700;color:#001b3a;text-transform:uppercase}.table-entry{font-family:Roboto,sans-serif;font-size:.875rem;line-height:1rem}.table-entry-strong{font-family:Roboto,sans-serif;font-size:.875rem;line-height:1rem;color:#333;font-weight:700}.link,.table-entry,a{text-decoration:none;color:#3fa9f5}a:hover{text-decoration:underline}.input-placeholder{font-family:Roboto,sans-serif;font-size:.875rem;line-height:1rem;color:#666}.input-text{font-family:Roboto,sans-serif;font-size:.875rem;line-height:1rem;color:#333}.size-15{font-size:.9375rem}.size-24{font-size:1.5rem}.text-left{text-align:left!important}.text-right{text-align:right!important}.text-center{text-align:center!important}.flex-first{order:-1}.flex-last{order:1}.flex-unordered{order:0}.flex-row{flex-direction:row!important}.flex-column{flex-direction:column!important}.flex-row-reverse{flex-direction:row-reverse!important}.flex-column-reverse{flex-direction:column-reverse!important}.flex-wrap{flex-wrap:wrap!important}.flex-nowrap{flex-wrap:nowrap!important}.flex-wrap-reverse{flex-wrap:wrap-reverse!important}.justify-content-start{justify-content:flex-start!important}.justify-content-end{justify-content:flex-end!important}.justify-content-center{justify-content:center!important}.justify-content-between{justify-content:space-between!important}.justify-content-around{justify-content:space-around!important}.align-items-start{align-items:flex-start!important}.align-items-end{align-items:flex-end!important}.align-items-center{align-items:center!important}.align-items-baseline{align-items:baseline!important}.align-items-stretch{align-items:stretch!important}.align-content-start{align-content:flex-start!important}.align-content-end{align-content:flex-end!important}.align-content-center{align-content:center!important}.align-content-between{align-content:space-between!important}.align-content-around{align-content:space-around!important}.align-content-stretch{align-content:stretch!important}.align-self-auto{-ms-grid-row-align:auto!important;align-self:auto!important}.align-self-start{align-self:flex-start!important}.align-self-end{align-self:flex-end!important}.align-self-center{-ms-grid-row-align:center!important;align-self:center!important}.align-self-baseline{align-self:baseline!important}.align-self-stretch{-ms-grid-row-align:stretch!important;align-self:stretch!important}@media (min-width:576px){.text-xs-left{text-align:left!important}.text-xs-right{text-align:right!important}.text-xs-center{text-align:center!important}.flex-xs-first{order:-1}.flex-xs-last{order:1}.flex-xs-unordered{order:0}.flex-xs-row{flex-direction:row!important}.flex-xs-column{flex-direction:column!important}.flex-xs-row-reverse{flex-direction:row-reverse!important}.flex-xs-column-reverse{flex-direction:column-reverse!important}.flex-xs-wrap{flex-wrap:wrap!important}.flex-xs-nowrap{flex-wrap:nowrap!important}.flex-xs-wrap-reverse{flex-wrap:wrap-reverse!important}.justify-content-xs-start{justify-content:flex-start!important}.justify-content-xs-end{justify-content:flex-end!important}.justify-content-xs-center{justify-content:center!important}.justify-content-xs-between{justify-content:space-between!important}.justify-content-xs-around{justify-content:space-around!important}.align-items-xs-start{align-items:flex-start!important}.align-items-xs-end{align-items:flex-end!important}.align-items-xs-center{align-items:center!important}.align-items-xs-baseline{align-items:baseline!important}.align-items-xs-stretch{align-items:stretch!important}.align-content-xs-start{align-content:flex-start!important}.align-content-xs-end{align-content:flex-end!important}.align-content-xs-center{align-content:center!important}.align-content-xs-between{align-content:space-between!important}.align-content-xs-around{align-content:space-around!important}.align-content-xs-stretch{align-content:stretch!important}.align-self-xs-auto{-ms-grid-row-align:auto!important;align-self:auto!important}.align-self-xs-start{align-self:flex-start!important}.align-self-xs-end{align-self:flex-end!important}.align-self-xs-center{-ms-grid-row-align:center!important;align-self:center!important}.align-self-xs-baseline{align-self:baseline!important}.align-self-xs-stretch{-ms-grid-row-align:stretch!important;align-self:stretch!important}}@media (min-width:768px){.text-sm-left{text-align:left!important}.text-sm-right{text-align:right!important}.text-sm-center{text-align:center!important}.flex-sm-first{order:-1}.flex-sm-last{order:1}.flex-sm-unordered{order:0}.flex-sm-row{flex-direction:row!important}.flex-sm-column{flex-direction:column!important}.flex-sm-row-reverse{flex-direction:row-reverse!important}.flex-sm-column-reverse{flex-direction:column-reverse!important}.flex-sm-wrap{flex-wrap:wrap!important}.flex-sm-nowrap{flex-wrap:nowrap!important}.flex-sm-wrap-reverse{flex-wrap:wrap-reverse!important}.justify-content-sm-start{justify-content:flex-start!important}.justify-content-sm-end{justify-content:flex-end!important}.justify-content-sm-center{justify-content:center!important}.justify-content-sm-between{justify-content:space-between!important}.justify-content-sm-around{justify-content:space-around!important}.align-items-sm-start{align-items:flex-start!important}.align-items-sm-end{align-items:flex-end!important}.align-items-sm-center{align-items:center!important}.align-items-sm-baseline{align-items:baseline!important}.align-items-sm-stretch{align-items:stretch!important}.align-content-sm-start{align-content:flex-start!important}.align-content-sm-end{align-content:flex-end!important}.align-content-sm-center{align-content:center!important}.align-content-sm-between{align-content:space-between!important}.align-content-sm-around{align-content:space-around!important}.align-content-sm-stretch{align-content:stretch!important}.align-self-sm-auto{-ms-grid-row-align:auto!important;align-self:auto!important}.align-self-sm-start{align-self:flex-start!important}.align-self-sm-end{align-self:flex-end!important}.align-self-sm-center{-ms-grid-row-align:center!important;align-self:center!important}.align-self-sm-baseline{align-self:baseline!important}.align-self-sm-stretch{-ms-grid-row-align:stretch!important;align-self:stretch!important}}@media (min-width:1080px){.text-md-left{text-align:left!important}.text-md-right{text-align:right!important}.text-md-center{text-align:center!important}.flex-md-first{order:-1}.flex-md-last{order:1}.flex-md-unordered{order:0}.flex-md-row{flex-direction:row!important}.flex-md-column{flex-direction:column!important}.flex-md-row-reverse{flex-direction:row-reverse!important}.flex-md-column-reverse{flex-direction:column-reverse!important}.flex-md-wrap{flex-wrap:wrap!important}.flex-md-nowrap{flex-wrap:nowrap!important}.flex-md-wrap-reverse{flex-wrap:wrap-reverse!important}.justify-content-md-start{justify-content:flex-start!important}.justify-content-md-end{justify-content:flex-end!important}.justify-content-md-center{justify-content:center!important}.justify-content-md-between{justify-content:space-between!important}.justify-content-md-around{justify-content:space-around!important}.align-items-md-start{align-items:flex-start!important}.align-items-md-end{align-items:flex-end!important}.align-items-md-center{align-items:center!important}.align-items-md-baseline{align-items:baseline!important}.align-items-md-stretch{align-items:stretch!important}.align-content-md-start{align-content:flex-start!important}.align-content-md-end{align-content:flex-end!important}.align-content-md-center{align-content:center!important}.align-content-md-between{align-content:space-between!important}.align-content-md-around{align-content:space-around!important}.align-content-md-stretch{align-content:stretch!important}.align-self-md-auto{-ms-grid-row-align:auto!important;align-self:auto!important}.align-self-md-start{align-self:flex-start!important}.align-self-md-end{align-self:flex-end!important}.align-self-md-center{-ms-grid-row-align:center!important;align-self:center!important}.align-self-md-baseline{align-self:baseline!important}.align-self-md-stretch{-ms-grid-row-align:stretch!important;align-self:stretch!important}}@media (min-width:1320px){.text-lg-left{text-align:left!important}.text-lg-right{text-align:right!important}.text-lg-center{text-align:center!important}.flex-lg-first{order:-1}.flex-lg-last{order:1}.flex-lg-unordered{order:0}.flex-lg-row{flex-direction:row!important}.flex-lg-column{flex-direction:column!important}.flex-lg-row-reverse{flex-direction:row-reverse!important}.flex-lg-column-reverse{flex-direction:column-reverse!important}.flex-lg-wrap{flex-wrap:wrap!important}.flex-lg-nowrap{flex-wrap:nowrap!important}.flex-lg-wrap-reverse{flex-wrap:wrap-reverse!important}.justify-content-lg-start{justify-content:flex-start!important}.justify-content-lg-end{justify-content:flex-end!important}.justify-content-lg-center{justify-content:center!important}.justify-content-lg-between{justify-content:space-between!important}.justify-content-lg-around{justify-content:space-around!important}.align-items-lg-start{align-items:flex-start!important}.align-items-lg-end{align-items:flex-end!important}.align-items-lg-center{align-items:center!important}.align-items-lg-baseline{align-items:baseline!important}.align-items-lg-stretch{align-items:stretch!important}.align-content-lg-start{align-content:flex-start!important}.align-content-lg-end{align-content:flex-end!important}.align-content-lg-center{align-content:center!important}.align-content-lg-between{align-content:space-between!important}.align-content-lg-around{align-content:space-around!important}.align-content-lg-stretch{align-content:stretch!important}.align-self-lg-auto{-ms-grid-row-align:auto!important;align-self:auto!important}.align-self-lg-start{align-self:flex-start!important}.align-self-lg-end{align-self:flex-end!important}.align-self-lg-center{-ms-grid-row-align:center!important;align-self:center!important}.align-self-lg-baseline{align-self:baseline!important}.align-self-lg-stretch{-ms-grid-row-align:stretch!important;align-self:stretch!important}}@media (min-width:1560px){.text-xlg-left{text-align:left!important}.text-xlg-right{text-align:right!important}.text-xlg-center{text-align:center!important}.flex-xlg-first{order:-1}.flex-xlg-last{order:1}.flex-xlg-unordered{order:0}.flex-xlg-row{flex-direction:row!important}.flex-xlg-column{flex-direction:column!important}.flex-xlg-row-reverse{flex-direction:row-reverse!important}.flex-xlg-column-reverse{flex-direction:column-reverse!important}.flex-xlg-wrap{flex-wrap:wrap!important}.flex-xlg-nowrap{flex-wrap:nowrap!important}.flex-xlg-wrap-reverse{flex-wrap:wrap-reverse!important}.justify-content-xlg-start{justify-content:flex-start!important}.justify-content-xlg-end{justify-content:flex-end!important}.justify-content-xlg-center{justify-content:center!important}.justify-content-xlg-between{justify-content:space-between!important}.justify-content-xlg-around{justify-content:space-around!important}.align-items-xlg-start{align-items:flex-start!important}.align-items-xlg-end{align-items:flex-end!important}.align-items-xlg-center{align-items:center!important}.align-items-xlg-baseline{align-items:baseline!important}.align-items-xlg-stretch{align-items:stretch!important}.align-content-xlg-start{align-content:flex-start!important}.align-content-xlg-end{align-content:flex-end!important}.align-content-xlg-center{align-content:center!important}.align-content-xlg-between{align-content:space-between!important}.align-content-xlg-around{align-content:space-around!important}.align-content-xlg-stretch{align-content:stretch!important}.align-self-xlg-auto{-ms-grid-row-align:auto!important;align-self:auto!important}.align-self-xlg-start{align-self:flex-start!important}.align-self-xlg-end{align-self:flex-end!important}.align-self-xlg-center{-ms-grid-row-align:center!important;align-self:center!important}.align-self-xlg-baseline{align-self:baseline!important}.align-self-xlg-stretch{-ms-grid-row-align:stretch!important;align-self:stretch!important}}.pagination{display:inline-block;list-style:none;padding:0;margin:0}.pagination li{margin:0 8px;float:left}.pagination li a{cursor:pointer;font-size:.875rem;line-height:22px;width:24px;height:24px;display:inline-block;color:#5c6570;float:left;text-decoration:none;border-radius:2px;text-align:center;border:1px solid transparent}.pagination li a.hover,.pagination li a:hover{border:1px solid #3fa9f5}.pagination li a.current{color:#fff;background:#3fa9f5}.pagination li svg{width:8px;height:12px;fill:#3fa9f5;transition:.25s}.pagination .pagination-next.hide,.pagination .pagination-prev.hide{display:none}.pagination .pagination-next.hover a,.pagination .pagination-next:hover a,.pagination .pagination-prev.hover a,.pagination .pagination-prev:hover a{border:0}.pagination .pagination-next.hover a svg,.pagination .pagination-next:hover a svg,.pagination .pagination-prev.hover a svg,.pagination .pagination-prev:hover a svg{width:16px;height:20px;fill:#3fa9f5}.pagination[dir=rtl] li{float:right}"]
                    }] }
        ];
        /** @nocollapse */
        CmxPaginationComponent.ctorParameters = function () {
            return [
                { type: CmxTableComponent, decorators: [{ type: core.Host }] }
            ];
        };
        CmxPaginationComponent.propDecorators = {
            pages: [{ type: core.Input }],
            currentPage: [{ type: core.Input }],
            pageChanged: [{ type: core.Output }]
        };
        return CmxPaginationComponent;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var CmxTableItemDirective = /** @class */ (function () {
        function CmxTableItemDirective() {
            this.cmxTableItemClass = true;
        }
        CmxTableItemDirective.decorators = [
            { type: core.Directive, args: [{
                        selector: 'cmx-table-item, [cmx-table-item]',
                    },] }
        ];
        /** @nocollapse */
        CmxTableItemDirective.ctorParameters = function () { return []; };
        CmxTableItemDirective.propDecorators = {
            cmxTableItemClass: [{ type: core.HostBinding, args: ['class.cmx-table-item',] }]
        };
        return CmxTableItemDirective;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var CmxCellDirective = /** @class */ (function () {
        function CmxCellDirective() {
            this.cmxCellClass = true;
        }
        CmxCellDirective.decorators = [
            { type: core.Directive, args: [{
                        selector: 'cmx-cell, [cmx-cell]',
                    },] }
        ];
        /** @nocollapse */
        CmxCellDirective.ctorParameters = function () { return []; };
        CmxCellDirective.propDecorators = {
            cmxCellClass: [{ type: core.HostBinding, args: ['class.cmx-cell',] }]
        };
        return CmxCellDirective;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var CmxTableModule = /** @class */ (function () {
        function CmxTableModule() {
        }
        CmxTableModule.decorators = [
            { type: core.NgModule, args: [{
                        imports: [
                            common.CommonModule,
                            forms.FormsModule,
                            flexLayout.FlexLayoutModule,
                            cmxCheckboxV4.CmxCheckboxModule,
                            cmxDatepickerV4.CmxDatepickerModule,
                        ],
                        declarations: [
                            CmxTableComponent,
                            CmxCheckboxFiltersComponent,
                            CmxRowTemplateDirective,
                            CmxHeaderTemplateDirective,
                            RowPlaceholderDirective,
                            HeaderPlaceholderDirective,
                            CmxHeaderCellComponent,
                            CmxFilterSorterComponent,
                            CmxCellDirective,
                            CmxTableItemDirective,
                            CmxDatepickerFilterComponent,
                            CmxPaginationComponent,
                        ],
                        exports: [
                            CmxTableComponent,
                            CmxCheckboxFiltersComponent,
                            CmxRowTemplateDirective,
                            CmxHeaderTemplateDirective,
                            CmxFilterSorterComponent,
                            RowPlaceholderDirective,
                            HeaderPlaceholderDirective,
                            CmxHeaderCellComponent,
                            CmxCellDirective,
                            CmxTableItemDirective,
                            CmxDatepickerFilterComponent,
                            CmxPaginationComponent,
                        ],
                        providers: [
                            WatcherService,
                        ]
                    },] }
        ];
        return CmxTableModule;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var Column = /** @class */ (function () {
        function Column(_name, _columnKey, _active, _on, _nameValueKey, _filterValueKey, _hide) {
            this.name = _name;
            this.columnKey = _columnKey;
            this.active = _active;
            this.on = _on;
            this.filters = [];
            this.nameValueKey = _nameValueKey;
            this.filterValueKey = _filterValueKey;
            this.hide = _hide;
        }
        /**
         * @return {?}
         */
        Column.prototype.addDateFilter = /**
         * @return {?}
         */
            function () {
                if (this.nameValueKey) {
                    /** @type {?} */
                    var dates = {
                        min: new Date(),
                        max: new Date()
                    };
                    /** @type {?} */
                    var aux = new Filter(this.nameValueKey, dates, false, this.columnKey);
                    this.dateFilter = aux;
                }
            };
        /**
         * @param {?} item
         * @param {?=} isDate
         * @return {?}
         */
        Column.prototype.addFilter = /**
         * @param {?} item
         * @param {?=} isDate
         * @return {?}
         */
            function (item, isDate) {
                var _this = this;
                if (this.nameValueKey && this.filterValueKey) {
                    /** @type {?} */
                    var filter = this.filters.find(( /**
                     * @param {?} $element
                     * @return {?}
                     */function ($element) { return $element.value === item[_this.filterValueKey]; }));
                    if (filter === undefined) {
                        /** @type {?} */
                        var aux = new Filter(item[this.nameValueKey], item[this.filterValueKey], false, this.columnKey);
                        this.filters.push(aux);
                    }
                }
            };
        /**
         * @return {?}
         */
        Column.prototype.getName = /**
         * @return {?}
         */
            function () {
                return this.name;
            };
        /**
         * @return {?}
         */
        Column.prototype.getKey = /**
         * @return {?}
         */
            function () {
                return this.columnKey;
            };
        /**
         * @return {?}
         */
        Column.prototype.getFilterNameKey = /**
         * @return {?}
         */
            function () {
                return this.nameValueKey;
            };
        /**
         * @return {?}
         */
        Column.prototype.getFilterValueKey = /**
         * @return {?}
         */
            function () {
                return this.filterValueKey;
            };
        /**
         * @return {?}
         */
        Column.prototype.getFilters = /**
         * @return {?}
         */
            function () {
                return this.filters;
            };
        /**
         * @param {?} $filters
         * @return {?}
         */
        Column.prototype.setFilters = /**
         * @param {?} $filters
         * @return {?}
         */
            function ($filters) {
                this.filters = $filters;
            };
        /**
         * @return {?}
         */
        Column.prototype.getDateFilter = /**
         * @return {?}
         */
            function () {
                return this.dateFilter;
            };
        /**
         * @param {?} filter
         * @return {?}
         */
        Column.prototype.getFilterFunction = /**
         * @param {?} filter
         * @return {?}
         */
            function (filter) {
                if (this.filters.length > 0) {
                    /** @type {?} */
                    var aux = this.filters[0].value;
                    if (typeof aux === 'number' && isFinite(aux)) {
                        return this.numericFilterFunction(filter);
                    }
                    else {
                        return this.commonFilterFunction(filter);
                    }
                    // array value && typeof value === 'object' && value.constructor === Array
                    // object value && typeof value === 'object' && value.constructor === Object
                }
                if (this.dateFilter) {
                    return this.dateFilterFunction(filter);
                }
                return undefined;
            };
        /**
         * @param {?} filter
         * @return {?}
         */
        Column.prototype.commonFilterFunction = /**
         * @param {?} filter
         * @return {?}
         */
            function (filter) {
                var _this = this;
                return ( /**
                 * @param {?} item
                 * @return {?}
                 */function (item) {
                    return item[_this.filterValueKey] === filter.value;
                });
            };
        /**
         * @param {?} filter
         * @return {?}
         */
        Column.prototype.dateFilterFunction = /**
         * @param {?} filter
         * @return {?}
         */
            function (filter) {
                var _this = this;
                return ( /**
                 * @param {?} item
                 * @return {?}
                 */function (item) {
                    if (typeof filter.value.min === 'string') {
                        filter.value.min = _this.getDateObject(filter.value.min);
                    }
                    if (typeof filter.value.max === 'string') {
                        filter.value.max = _this.getDateObject(filter.value.max);
                    }
                    /** @type {?} */
                    var min = filter.value.min.getTime();
                    /** @type {?} */
                    var max = filter.value.max.getTime();
                    return (item[_this.filterValueKey] !== undefined &&
                        min <= item[_this.filterValueKey].getTime() &&
                        item[_this.filterValueKey].getTime() <= max);
                });
            };
        /**
         * @param {?} filter
         * @return {?}
         */
        Column.prototype.numericFilterFunction = /**
         * @param {?} filter
         * @return {?}
         */
            function (filter) {
                var _this = this;
                return ( /**
                 * @param {?} item
                 * @return {?}
                 */function (item) {
                    return item[_this.filterValueKey] === filter.value;
                    // return filter.value.min <= item[ this.filterValueKey ] &&
                    // item[ this.filterValueKey ] <= filter.value.max;
                });
            };
        /**
         * @return {?}
         */
        Column.prototype.clearFilters = /**
         * @return {?}
         */
            function () {
                this.filters = [];
            };
        /**
         * @param {?} ASC
         * @return {?}
         */
        Column.prototype.getSortFunction = /**
         * @param {?} ASC
         * @return {?}
         */
            function (ASC) {
                if (this.filters.length > 0) {
                    /** @type {?} */
                    var aux = this.filters[0].value;
                    if (typeof aux === 'string' || aux instanceof String) {
                        return this.stringSortFunction(ASC);
                    }
                    if (typeof aux === 'number' && isFinite(aux)) {
                        return this.numericSortFunction(ASC);
                    }
                    if (typeof aux === 'boolean') {
                        return this.booleanSortFunction(ASC);
                    }
                    // array value && typeof value === 'object' && value.constructor === Array
                    // object value && typeof value === 'object' && value.constructor === Object
                }
                if (this.dateFilter) {
                    return this.dateSortFunction(ASC);
                }
                return undefined;
            };
        /**
         * @private
         * @param {?} ASC
         * @return {?}
         */
        Column.prototype.stringSortFunction = /**
         * @private
         * @param {?} ASC
         * @return {?}
         */
            function (ASC) {
                var _this = this;
                return ( /**
                 * @param {?} a
                 * @param {?} b
                 * @return {?}
                 */function (a, b) {
                    if (a[_this.filterValueKey] === undefined) {
                        return 1;
                    }
                    /** @type {?} */
                    var order = (ASC) ? 1 : -1;
                    return order * a[_this.filterValueKey].localeCompare(b[_this.filterValueKey]);
                });
            };
        /**
         * @private
         * @param {?} ASC
         * @return {?}
         */
        Column.prototype.numericSortFunction = /**
         * @private
         * @param {?} ASC
         * @return {?}
         */
            function (ASC) {
                var _this = this;
                return ( /**
                 * @param {?} a
                 * @param {?} b
                 * @return {?}
                 */function (a, b) {
                    if (a[_this.filterValueKey] === undefined) {
                        /** @type {?} */
                        var order = (ASC) ? 1 : -1;
                        return order;
                    }
                    if (b[_this.filterValueKey] === undefined) {
                        /** @type {?} */
                        var order = (ASC) ? -1 : 1;
                        return order;
                    }
                    if (a[_this.filterValueKey] < b[_this.filterValueKey]) {
                        /** @type {?} */
                        var order = (ASC) ? -1 : 1;
                        return order;
                    }
                    if (a[_this.filterValueKey] > b[_this.filterValueKey]) {
                        /** @type {?} */
                        var order = (ASC) ? 1 : -1;
                        return order;
                    }
                    return 0;
                });
            };
        /**
         * @private
         * @param {?} ASC
         * @return {?}
         */
        Column.prototype.booleanSortFunction = /**
         * @private
         * @param {?} ASC
         * @return {?}
         */
            function (ASC) {
                var _this = this;
                return ( /**
                 * @param {?} a
                 * @param {?} b
                 * @return {?}
                 */function (a, b) {
                    if (a[_this.filterValueKey] === undefined) {
                        return 1;
                    }
                    if (a[_this.filterValueKey] === true && b[_this.filterValueKey] === false) {
                        /** @type {?} */
                        var order = (ASC) ? -1 : 1;
                        return order;
                    }
                    if (a[_this.filterValueKey] === false && b[_this.filterValueKey] === true) {
                        /** @type {?} */
                        var order = (ASC) ? 1 : -1;
                        return order;
                    }
                    return 0;
                });
            };
        /**
         * @private
         * @param {?} ASC
         * @return {?}
         */
        Column.prototype.dateSortFunction = /**
         * @private
         * @param {?} ASC
         * @return {?}
         */
            function (ASC) {
                var _this = this;
                return ( /**
                 * @param {?} a
                 * @param {?} b
                 * @return {?}
                 */function (a, b) {
                    if (a[_this.filterValueKey] === undefined) {
                        /** @type {?} */
                        var order = (ASC) ? 1 : -1;
                        return order;
                    }
                    if (b[_this.filterValueKey] === undefined) {
                        /** @type {?} */
                        var order = (ASC) ? -1 : 1;
                        return order;
                    }
                    if (a[_this.filterValueKey].getTime() < b[_this.filterValueKey].getTime()) {
                        /** @type {?} */
                        var order = (ASC) ? -1 : 1;
                        return order;
                    }
                    if (a[_this.filterValueKey].getTime() > b[_this.filterValueKey].getTime()) {
                        /** @type {?} */
                        var order = (ASC) ? 1 : -1;
                        return order;
                    }
                    return 0;
                });
            };
        /**
         * @private
         * @param {?} date
         * @return {?}
         */
        Column.prototype.getDateObject = /**
         * @private
         * @param {?} date
         * @return {?}
         */
            function (date) {
                /** @type {?} */
                var auxDate = date.replace(/-g/, '/');
                /** @type {?} */
                var bits = auxDate.split(/\D/);
                /** @type {?} */
                var month = parseInt(bits[1], 10) - 1;
                return new Date(bits[0], month, bits[2], bits[3], bits[4], bits[5]);
            };
        return Column;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */

    exports.CmxTableModule = CmxTableModule;
    exports.CmxTableComponent = CmxTableComponent;
    exports.Column = Column;
    exports.Filter = Filter;
    exports.Table = Table;
    exports.ɵd = CmxCheckboxFiltersComponent;
    exports.ɵf = CmxDatepickerFilterComponent;
    exports.ɵc = CmxHeaderCellComponent;
    exports.ɵl = CmxPaginationComponent;
    exports.ɵg = CmxFilterSorterComponent;
    exports.ɵj = CmxCellDirective;
    exports.ɵi = HeaderPlaceholderDirective;
    exports.ɵb = CmxHeaderTemplateDirective;
    exports.ɵh = RowPlaceholderDirective;
    exports.ɵa = CmxRowTemplateDirective;
    exports.ɵk = CmxTableItemDirective;
    exports.ɵe = WatcherService;

    Object.defineProperty(exports, '__esModule', { value: true });

})));

//# sourceMappingURL=cemex-cmx-table-v7.umd.js.map