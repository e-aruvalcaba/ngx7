import { OnDestroy, AfterViewInit, QueryList } from '@angular/core';
import { Observable } from 'rxjs';
import { CmxCheckboxComponent } from '@cemex/cmx-checkbox-v4';
import { Filter } from '../../classes/filter.class';
import { WatcherService } from '../../services/watcher.service';
import { CmxTableComponent } from '../cmx-table/cmx-table.component';
export declare class CmxCheckboxFiltersComponent implements AfterViewInit, OnDestroy {
    private watcher;
    private parent;
    filters: Filter[];
    showAllOption: boolean;
    allOptionName: string;
    searchPlaceholder: string;
    enableSearch: boolean;
    checkboxes: QueryList<CmxCheckboxComponent>;
    searchTerm: string;
    allFilter: Filter;
    _filters: Filter[];
    isRtl: boolean;
    private activeFilters;
    private checkboxSubscriptions;
    constructor(watcher: WatcherService, parent: CmxTableComponent);
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    listenToActiveFilters(): Observable<boolean>;
    /**
     * @description Checks all filters when the 'All' checkbox is clicked.
     * @param boolean $event: The event received by the change event of the checkbox.
     */
    toggleAll($event: boolean): void;
    /**
     * @description Toggles the 'active' attribute of a filter to enable or disable.
     * @param Filter filter: The Filter object to toggle.
     * @param boolean $event: The event received by the change event of the checkbox.
     */
    toggleFilter(filter: Filter, $event: boolean): void;
    clearSearch(): void;
    searchInFilter(term: string): void;
    private emitFilters;
    private emitActiveCheckboxes;
    private listenToCheckboxes;
    private dropSubscriptions;
}
