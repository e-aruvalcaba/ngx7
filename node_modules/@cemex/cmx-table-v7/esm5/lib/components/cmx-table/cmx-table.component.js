/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, ViewChild, Input, ElementRef, ContentChildren, QueryList, HostBinding } from '@angular/core';
import { Table } from '../../classes/table.class';
import { CmxRowTemplateDirective } from '../../directives/cmx-row-template.directive';
import { CmxHeaderTemplateDirective } from '../../directives/cmx-header-template.directive';
import { CmxHeaderCellComponent } from '../cmx-header-cell/cmx-header-cell.component';
import { RowPlaceholderDirective } from '../../directives/cmx-row-placeholder.directive';
import { HeaderPlaceholderDirective } from '../../directives/cmx-header-placeholder.directive';
import { WatcherService } from '../../services/watcher.service';
/**
 * @record
 */
export function Page() { }
if (false) {
    /** @type {?} */
    Page.prototype.pageNumber;
    /** @type {?} */
    Page.prototype.minIndex;
    /** @type {?} */
    Page.prototype.maxIndex;
}
var CmxTableComponent = /** @class */ (function () {
    function CmxTableComponent(watcher) {
        this.watcher = watcher;
        this.cmxTableClass = true;
        this.pages = [];
        this.tableHasScroll = false;
        this._dataSource = [];
        this._pageSize = 30;
        this._rtl = false;
        this.currentActivePage = 1;
        this.currentPageData = [];
        this.viewportData = [];
        this.activeFiltersCopy = [];
        this.rowViewReferences = [];
    }
    Object.defineProperty(CmxTableComponent.prototype, "tableSource", {
        get: /**
         * @return {?}
         */
        function () {
            return this._table;
        },
        set: /**
         * @param {?} $value
         * @return {?}
         */
        function ($value) {
            if ($value !== undefined && $value !== null && $value instanceof Table) {
                this._table = $value;
                this.renderHeader();
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CmxTableComponent.prototype, "dataSource", {
        get: /**
         * @return {?}
         */
        function () {
            return this._dataSource;
        },
        set: /**
         * @param {?} $value
         * @return {?}
         */
        function ($value) {
            if ($value !== undefined && $value !== null) {
                this._dataSource = $value;
                this.viewportData = $value;
                this.rowViewReferences = [];
                this.initialize();
            }
            else {
                this._dataSource = [];
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CmxTableComponent.prototype, "updateDataSource", {
        set: /**
         * @param {?} $value
         * @return {?}
         */
        function ($value) {
            if ($value !== undefined && $value !== null) {
                this._dataSource = $value;
                this.viewportData = $value;
                this.rowViewReferences = [];
                this.updateDataTable();
            }
            else {
                this._dataSource = [];
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CmxTableComponent.prototype, "pageSize", {
        get: /**
         * @return {?}
         */
        function () {
            return this._pageSize;
        },
        set: /**
         * @param {?} $value
         * @return {?}
         */
        function ($value) {
            if ($value !== undefined && $value !== null) {
                this._pageSize = $value;
                this.calculateNumberOfPages();
                this.setPageData();
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CmxTableComponent.prototype, "rtl", {
        get: /**
         * @return {?}
         */
        function () {
            return this._rtl;
        },
        set: /**
         * @param {?} $value
         * @return {?}
         */
        function ($value) {
            if ($value !== undefined && $value !== null) {
                this._rtl = $value;
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    CmxTableComponent.prototype.ngAfterContentInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this.renderHeader();
        this.assignedId = this.watcher.createSubject();
        this.activeFiltersSubscription = this.watcher.listenToActiveFilters(this.assignedId)
            .subscribe((/**
         * @param {?} $event
         * @return {?}
         */
        function ($event) {
            if ($event.length > 0) {
                _this.activeFiltersCopy = $event;
                // there are filters to apply
                _this.viewportData = _this.filterData($event);
            }
            else {
                _this.activeFiltersCopy = [];
                // no filters to apply
                _this.viewportData = _this._dataSource;
            }
            _this.currentActivePage = 1;
            _this.calculateNumberOfPages();
            _this.setPageData();
        }));
    };
    /**
     * @return {?}
     */
    CmxTableComponent.prototype.ngOnDestroy = /**
     * @return {?}
     */
    function () {
        this.rowPlaceholder.viewContainerReference.clear();
        this.headerPlaceholder.viewContainerReference.clear();
        this.activeFiltersSubscription.unsubscribe();
    };
    /**
     * returns the items including filters applied in table
     * Author: Andres Santos
     */
    /**
     * returns the items including filters applied in table
     * Author: Andres Santos
     * @return {?}
     */
    CmxTableComponent.prototype.filteredItems = /**
     * returns the items including filters applied in table
     * Author: Andres Santos
     * @return {?}
     */
    function () {
        return this.viewportData;
    };
    /**
     * returns the items including filters applied in current page
     * Author: Andres Santos
     */
    /**
     * returns the items including filters applied in current page
     * Author: Andres Santos
     * @return {?}
     */
    CmxTableComponent.prototype.filteredItemsInPage = /**
     * returns the items including filters applied in current page
     * Author: Andres Santos
     * @return {?}
     */
    function () {
        return this.currentPageData;
    };
    /**
     * @return {?}
     */
    CmxTableComponent.prototype.clearActiveFilters = /**
     * @return {?}
     */
    function () {
        this.watcher.clearActiveFilters();
    };
    /**
     * returns the current active filters
     * Author: Antonio Vargas
     */
    /**
     * returns the current active filters
     * Author: Antonio Vargas
     * @return {?}
     */
    CmxTableComponent.prototype.getActiveFiltersCopy = /**
     * returns the current active filters
     * Author: Antonio Vargas
     * @return {?}
     */
    function () {
        return this.activeFiltersCopy;
    };
    /**
     * Triggers the filtering of data
     */
    /**
     * Triggers the filtering of data
     * @param {?} $activeFilters
     * @return {?}
     */
    CmxTableComponent.prototype.triggerFilter = /**
     * Triggers the filtering of data
     * @param {?} $activeFilters
     * @return {?}
     */
    function ($activeFilters) {
        if ($activeFilters.length > 0) {
            // there are filters to apply
            this.viewportData = this.filterData($activeFilters);
        }
        else {
            // no filters to apply
            this.viewportData = this._dataSource;
        }
        this.calculateNumberOfPages();
        this.setPageData();
    };
    /**
     * @description Resets the table visualization.
     */
    /**
     * \@description Resets the table visualization.
     * @return {?}
     */
    CmxTableComponent.prototype.reset = /**
     * \@description Resets the table visualization.
     * @return {?}
     */
    function () {
        this.currentActivePage = 1;
        this.rowViewReferences = [];
        this.initialize();
    };
    /**
     * @param {?} activeFilters
     * @return {?}
     */
    CmxTableComponent.prototype.filterData = /**
     * @param {?} activeFilters
     * @return {?}
     */
    function (activeFilters) {
        var _this = this;
        var e_1, _a;
        /** @type {?} */
        var result = this._dataSource;
        /** @type {?} */
        var data = this._dataSource;
        /** @type {?} */
        var aux = [];
        /** @type {?} */
        var filtered = [];
        activeFilters.forEach((/**
         * @param {?} $filter
         * @return {?}
         */
        function ($filter) {
            filtered[$filter.columnKey] = [];
        }));
        activeFilters.forEach((/**
         * @param {?} $filter
         * @param {?} $index
         * @return {?}
         */
        function ($filter, $index) {
            aux = data.filter(_this._table.getColumn($filter.columnKey).getFilterFunction($filter));
            filtered[$filter.columnKey] = filtered[$filter.columnKey].concat(aux);
        }));
        try {
            for (var _b = tslib_1.__values(Object.keys(filtered)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var $key = _c.value;
                result = this.findIntersection(result, filtered[$key]);
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_1) throw e_1.error; }
        }
        return result;
    };
    /**
     * @param {?} columnId
     * @param {?} ASC
     * @return {?}
     */
    CmxTableComponent.prototype.sortData = /**
     * @param {?} columnId
     * @param {?} ASC
     * @return {?}
     */
    function (columnId, ASC) {
        this.viewportData = this.viewportData.sort(this._table.getColumn(columnId).getSortFunction(ASC));
        this.calculateNumberOfPages();
        this.setPageData();
    };
    /**
     * @description Apply the current active filters in the table
     */
    /**
     * \@description Apply the current active filters in the table
     * @return {?}
     */
    CmxTableComponent.prototype.applyCurrentFilters = /**
     * \@description Apply the current active filters in the table
     * @return {?}
     */
    function () {
        if (this.activeFiltersCopy.length > 0) {
            this.viewportData = this.filterData(this.activeFiltersCopy);
        }
        else {
            this.viewportData = this._dataSource;
        }
        this.calculateNumberOfPages();
        this.setPageData();
    };
    /**
     * @description Overwrite the active filters with new ones to apply
     * @param  $filters: array<Filter>
     */
    /**
     * \@description Overwrite the active filters with new ones to apply
     * @param {?} $filters
     * @return {?}
     */
    CmxTableComponent.prototype.applyNewFilters = /**
     * \@description Overwrite the active filters with new ones to apply
     * @param {?} $filters
     * @return {?}
     */
    function ($filters) {
        if ($filters && $filters.length > 0) {
            this.viewportData = this.filterData($filters);
        }
        else {
            this.viewportData = this._dataSource;
        }
        this.calculateNumberOfPages();
        this.setPageData();
    };
    /**
     * @param {?} $currentPage
     * @return {?}
     */
    CmxTableComponent.prototype.setCurrentPage = /**
     * @param {?} $currentPage
     * @return {?}
     */
    function ($currentPage) {
        this.currentActivePage = $currentPage;
        this.setPageData();
    };
    /**
     * @private
     * @return {?}
     */
    CmxTableComponent.prototype.initialize = /**
     * @private
     * @return {?}
     */
    function () {
        this.rowPlaceholder.viewContainerReference.clear();
        this.headerPlaceholder.viewContainerReference.clear();
        this.renderHeader();
        this.calculateNumberOfPages();
        this.setPageData();
    };
    /**
     * @private
     * @return {?}
     */
    CmxTableComponent.prototype.updateDataTable = /**
     * @private
     * @return {?}
     */
    function () {
        this.rowPlaceholder.viewContainerReference.clear();
        this.calculateNumberOfPages();
        this.setPageData();
    };
    /**
     * @private
     * @return {?}
     */
    CmxTableComponent.prototype.checkIfTableHasScroll = /**
     * @private
     * @return {?}
     */
    function () {
        if (this.cmxTableBodyElement &&
            this.cmxTableBodyElement.nativeElement.offsetHeight <
                this.cmxTableBodyElement.nativeElement.scrollHeight) {
            this.tableHasScroll = true;
        }
        else {
            this.tableHasScroll = false;
        }
    };
    // =============================================================================================
    // views' rendering
    // =============================================================================================
    // =============================================================================================
    // views' rendering
    // =============================================================================================
    /**
     * @private
     * @return {?}
     */
    CmxTableComponent.prototype.renderHeader = 
    // =============================================================================================
    // views' rendering
    // =============================================================================================
    /**
     * @private
     * @return {?}
     */
    function () {
        var _this = this;
        this.headerPlaceholder.viewContainerReference.clear();
        if (this.headerDefinitions) {
            this.headerDefinitions.forEach((/**
             * @param {?} headerDef
             * @return {?}
             */
            function (headerDef) {
                /** @type {?} */
                var context = { $implicit: _this._table };
                _this.headerPlaceholder.viewContainerReference.createEmbeddedView(headerDef.template, context);
            }));
        }
    };
    /**
     * @private
     * @return {?}
     */
    CmxTableComponent.prototype.renderRows = /**
     * @private
     * @return {?}
     */
    function () {
        var _this = this;
        if (this.rowDefinitions) {
            if (this.rowViewReferences && this.rowViewReferences.length > 0) {
                // the views already exist
                this.updateRowsContext();
            }
            else {
                // first rendering of the rows
                this.rowDefinitions.forEach((/**
                 * @param {?} rowDef
                 * @return {?}
                 */
                function (rowDef) {
                    _this.currentPageData.forEach((/**
                     * @param {?} rowData
                     * @param {?} $index
                     * @return {?}
                     */
                    function (rowData, $index) {
                        /** @type {?} */
                        var context = { $implicit: rowData };
                        /** @type {?} */
                        var ref = _this.rowPlaceholder.viewContainerReference.createEmbeddedView(rowDef.template, context);
                        _this.rowViewReferences.push(ref);
                    }));
                }));
            }
        }
    };
    /**
     * @private
     * @return {?}
     */
    CmxTableComponent.prototype.updateRowsContext = /**
     * @private
     * @return {?}
     */
    function () {
        var _this = this;
        if (this.rowDefinitions) {
            this.rowDefinitions.forEach((/**
             * @param {?} rowDef
             * @return {?}
             */
            function (rowDef) {
                _this.rowViewReferences.forEach((/**
                 * @param {?} viewRef
                 * @param {?} $index
                 * @return {?}
                 */
                function (viewRef, $index) {
                    if ($index > (_this.currentPageData.length - 1)) {
                        // the current page has less data to show than the set page size
                        if (viewRef !== undefined) {
                            viewRef.destroy();
                        }
                        _this.rowViewReferences.splice($index, 1, undefined);
                    }
                    else {
                        // the view reference is used on the current page
                        /** @type {?} */
                        var context = { $implicit: _this.currentPageData[$index] };
                        if (viewRef === undefined) {
                            // the view reference was destroyed, a new replacement
                            /** @type {?} */
                            var ref = _this.rowPlaceholder.viewContainerReference
                                .createEmbeddedView(rowDef.template, context, $index);
                            _this.rowViewReferences[$index] = ref;
                        }
                        else {
                            // no new view reference is required, update the context data
                            viewRef.context.$implicit = context.$implicit;
                        }
                    }
                }));
            }));
        }
    };
    // =============================================================================================
    // filters
    // =============================================================================================
    // =============================================================================================
    // filters
    // =============================================================================================
    /**
     * @private
     * @param {?} arrayOne
     * @param {?} arrayTwo
     * @return {?}
     */
    CmxTableComponent.prototype.findIntersection = 
    // =============================================================================================
    // filters
    // =============================================================================================
    /**
     * @private
     * @param {?} arrayOne
     * @param {?} arrayTwo
     * @return {?}
     */
    function (arrayOne, arrayTwo) {
        /** @type {?} */
        var intersection = [];
        /** @type {?} */
        var $i = 0;
        /** @type {?} */
        var $j = 0;
        while ($i < arrayOne.length) {
            $j = 0;
            while ($j < arrayTwo.length) {
                if (arrayOne[$i] === arrayTwo[$j]) {
                    intersection.push(arrayOne[$i]);
                }
                $j++;
            }
            $i++;
        }
        return intersection;
    };
    // =============================================================================================
    // pagination
    // =============================================================================================
    /**
     * @description Calculates the number of pages given the array of data and
     * determines the index of the data source for each page.
     */
    // =============================================================================================
    // pagination
    // =============================================================================================
    /**
     * \@description Calculates the number of pages given the array of data and
     * determines the index of the data source for each page.
     * @private
     * @return {?}
     */
    CmxTableComponent.prototype.calculateNumberOfPages = 
    // =============================================================================================
    // pagination
    // =============================================================================================
    /**
     * \@description Calculates the number of pages given the array of data and
     * determines the index of the data source for each page.
     * @private
     * @return {?}
     */
    function () {
        /** @type {?} */
        var numberOfPages = Math.ceil(this.viewportData.length / this._pageSize);
        this.pages = [];
        /** @type {?} */
        var i = 1;
        do {
            /** @type {?} */
            var min = ((i - 1) * this._pageSize);
            /** @type {?} */
            var max = min + this._pageSize - 1;
            this.pages.push((/** @type {?} */ ({
                pageNumber: i,
                minIndex: min,
                maxIndex: max
            })));
            i++;
        } while (i <= numberOfPages);
    };
    /**
     * @private
     * @return {?}
     */
    CmxTableComponent.prototype.setPageData = /**
     * @private
     * @return {?}
     */
    function () {
        var _this = this;
        /** @type {?} */
        var $page = this.pages.find((/**
         * @param {?} page
         * @return {?}
         */
        function (page) { return page.pageNumber === _this.currentActivePage; }));
        this.currentPageData = [];
        if ($page !== undefined && $page !== null) {
            for (var $i = $page.minIndex; $i <= $page.maxIndex; $i++) {
                if (this.viewportData[$i]) {
                    this.currentPageData.push(this.viewportData[$i]);
                }
            }
        }
        else {
            this.currentActivePage = 1;
            for (var $i = this.pages[0].minIndex; $i <= this.pages[0].maxIndex; $i++) {
                if (this.viewportData[$i]) {
                    this.currentPageData.push(this.viewportData[$i]);
                }
            }
        }
        this.renderRows();
        this.checkIfTableHasScroll();
    };
    CmxTableComponent.decorators = [
        { type: Component, args: [{
                    selector: 'cmx-table',
                    template: "<div class=\"cmx-table-header\" [class.--scroll-spacing]=\"tableHasScroll\">\r\n    <ng-container headerPlaceholder></ng-container>\r\n</div>\r\n<div #cmxTableBody class=\"cmx-table-body\">\r\n    <ng-container rowPlaceholder></ng-container>\r\n</div>\r\n<div *ngIf=\"pages.length > 1\" style=\"text-align: center;\">\r\n    <cmx-pagination [pages]=\"pages.length\" [currentPage]=\"currentActivePage\"\r\n    (pageChanged)=\"setCurrentPage($event)\"></cmx-pagination>\r\n</div>",
                    styles: ["@import url(https://www.cemexgo.com/cdn/cmx-dls-icons.css);.roboto-bold{font-weight:700}.roboto-medium{font-weight:500}.roboto-regular{font-weight:400}.roboto-light{font-weight:300}.roboto-thin{font-weight:100}.h1-role,h1{font-family:Roboto,sans-serif;font-size:3rem;line-height:3rem;font-weight:700;color:#001b3a}.h2-role,.h3-role,h2,h3{font-family:Roboto,sans-serif;font-size:1.625rem;line-height:2rem;font-weight:400;color:#001b3a}.h4-role,h4{font-family:Roboto,sans-serif;font-size:2rem;line-height:2rem;font-weight:500;color:#001b3a}.h5-role,h5{font-family:Roboto,sans-serif;font-size:1.25rem;line-height:1.5rem;font-weight:400;color:#001b3a}.h6-role,h6{font-family:Roboto,sans-serif;font-size:.875rem;line-height:1rem;font-weight:700;color:#001b3a;text-transform:uppercase}.table-entry{font-family:Roboto,sans-serif;font-size:.875rem;line-height:1rem}.table-entry-strong{font-family:Roboto,sans-serif;font-size:.875rem;line-height:1rem;color:#333;font-weight:700}.link,.table-entry,a{text-decoration:none;color:#3fa9f5}a:hover{text-decoration:underline}.input-placeholder{font-family:Roboto,sans-serif;font-size:.875rem;line-height:1rem;color:#666}.input-text{font-family:Roboto,sans-serif;font-size:.875rem;line-height:1rem;color:#333}.size-15{font-size:.9375rem}.size-24{font-size:1.5rem}.text-left{text-align:left!important}.text-right{text-align:right!important}.text-center{text-align:center!important}.flex-first{order:-1}.flex-last{order:1}.flex-unordered{order:0}.flex-row{flex-direction:row!important}.flex-column{flex-direction:column!important}.flex-row-reverse{flex-direction:row-reverse!important}.flex-column-reverse{flex-direction:column-reverse!important}.flex-wrap{flex-wrap:wrap!important}.flex-nowrap{flex-wrap:nowrap!important}.flex-wrap-reverse{flex-wrap:wrap-reverse!important}.justify-content-start{justify-content:flex-start!important}.justify-content-end{justify-content:flex-end!important}.justify-content-center{justify-content:center!important}.justify-content-between{justify-content:space-between!important}.justify-content-around{justify-content:space-around!important}.align-items-start{align-items:flex-start!important}.align-items-end{align-items:flex-end!important}.align-items-center{align-items:center!important}.align-items-baseline{align-items:baseline!important}.align-items-stretch{align-items:stretch!important}.align-content-start{align-content:flex-start!important}.align-content-end{align-content:flex-end!important}.align-content-center{align-content:center!important}.align-content-between{align-content:space-between!important}.align-content-around{align-content:space-around!important}.align-content-stretch{align-content:stretch!important}.align-self-auto{-ms-grid-row-align:auto!important;align-self:auto!important}.align-self-start{align-self:flex-start!important}.align-self-end{align-self:flex-end!important}.align-self-center{-ms-grid-row-align:center!important;align-self:center!important}.align-self-baseline{align-self:baseline!important}.align-self-stretch{-ms-grid-row-align:stretch!important;align-self:stretch!important}@media (min-width:576px){.text-xs-left{text-align:left!important}.text-xs-right{text-align:right!important}.text-xs-center{text-align:center!important}.flex-xs-first{order:-1}.flex-xs-last{order:1}.flex-xs-unordered{order:0}.flex-xs-row{flex-direction:row!important}.flex-xs-column{flex-direction:column!important}.flex-xs-row-reverse{flex-direction:row-reverse!important}.flex-xs-column-reverse{flex-direction:column-reverse!important}.flex-xs-wrap{flex-wrap:wrap!important}.flex-xs-nowrap{flex-wrap:nowrap!important}.flex-xs-wrap-reverse{flex-wrap:wrap-reverse!important}.justify-content-xs-start{justify-content:flex-start!important}.justify-content-xs-end{justify-content:flex-end!important}.justify-content-xs-center{justify-content:center!important}.justify-content-xs-between{justify-content:space-between!important}.justify-content-xs-around{justify-content:space-around!important}.align-items-xs-start{align-items:flex-start!important}.align-items-xs-end{align-items:flex-end!important}.align-items-xs-center{align-items:center!important}.align-items-xs-baseline{align-items:baseline!important}.align-items-xs-stretch{align-items:stretch!important}.align-content-xs-start{align-content:flex-start!important}.align-content-xs-end{align-content:flex-end!important}.align-content-xs-center{align-content:center!important}.align-content-xs-between{align-content:space-between!important}.align-content-xs-around{align-content:space-around!important}.align-content-xs-stretch{align-content:stretch!important}.align-self-xs-auto{-ms-grid-row-align:auto!important;align-self:auto!important}.align-self-xs-start{align-self:flex-start!important}.align-self-xs-end{align-self:flex-end!important}.align-self-xs-center{-ms-grid-row-align:center!important;align-self:center!important}.align-self-xs-baseline{align-self:baseline!important}.align-self-xs-stretch{-ms-grid-row-align:stretch!important;align-self:stretch!important}}@media (min-width:768px){.text-sm-left{text-align:left!important}.text-sm-right{text-align:right!important}.text-sm-center{text-align:center!important}.flex-sm-first{order:-1}.flex-sm-last{order:1}.flex-sm-unordered{order:0}.flex-sm-row{flex-direction:row!important}.flex-sm-column{flex-direction:column!important}.flex-sm-row-reverse{flex-direction:row-reverse!important}.flex-sm-column-reverse{flex-direction:column-reverse!important}.flex-sm-wrap{flex-wrap:wrap!important}.flex-sm-nowrap{flex-wrap:nowrap!important}.flex-sm-wrap-reverse{flex-wrap:wrap-reverse!important}.justify-content-sm-start{justify-content:flex-start!important}.justify-content-sm-end{justify-content:flex-end!important}.justify-content-sm-center{justify-content:center!important}.justify-content-sm-between{justify-content:space-between!important}.justify-content-sm-around{justify-content:space-around!important}.align-items-sm-start{align-items:flex-start!important}.align-items-sm-end{align-items:flex-end!important}.align-items-sm-center{align-items:center!important}.align-items-sm-baseline{align-items:baseline!important}.align-items-sm-stretch{align-items:stretch!important}.align-content-sm-start{align-content:flex-start!important}.align-content-sm-end{align-content:flex-end!important}.align-content-sm-center{align-content:center!important}.align-content-sm-between{align-content:space-between!important}.align-content-sm-around{align-content:space-around!important}.align-content-sm-stretch{align-content:stretch!important}.align-self-sm-auto{-ms-grid-row-align:auto!important;align-self:auto!important}.align-self-sm-start{align-self:flex-start!important}.align-self-sm-end{align-self:flex-end!important}.align-self-sm-center{-ms-grid-row-align:center!important;align-self:center!important}.align-self-sm-baseline{align-self:baseline!important}.align-self-sm-stretch{-ms-grid-row-align:stretch!important;align-self:stretch!important}}@media (min-width:1080px){.text-md-left{text-align:left!important}.text-md-right{text-align:right!important}.text-md-center{text-align:center!important}.flex-md-first{order:-1}.flex-md-last{order:1}.flex-md-unordered{order:0}.flex-md-row{flex-direction:row!important}.flex-md-column{flex-direction:column!important}.flex-md-row-reverse{flex-direction:row-reverse!important}.flex-md-column-reverse{flex-direction:column-reverse!important}.flex-md-wrap{flex-wrap:wrap!important}.flex-md-nowrap{flex-wrap:nowrap!important}.flex-md-wrap-reverse{flex-wrap:wrap-reverse!important}.justify-content-md-start{justify-content:flex-start!important}.justify-content-md-end{justify-content:flex-end!important}.justify-content-md-center{justify-content:center!important}.justify-content-md-between{justify-content:space-between!important}.justify-content-md-around{justify-content:space-around!important}.align-items-md-start{align-items:flex-start!important}.align-items-md-end{align-items:flex-end!important}.align-items-md-center{align-items:center!important}.align-items-md-baseline{align-items:baseline!important}.align-items-md-stretch{align-items:stretch!important}.align-content-md-start{align-content:flex-start!important}.align-content-md-end{align-content:flex-end!important}.align-content-md-center{align-content:center!important}.align-content-md-between{align-content:space-between!important}.align-content-md-around{align-content:space-around!important}.align-content-md-stretch{align-content:stretch!important}.align-self-md-auto{-ms-grid-row-align:auto!important;align-self:auto!important}.align-self-md-start{align-self:flex-start!important}.align-self-md-end{align-self:flex-end!important}.align-self-md-center{-ms-grid-row-align:center!important;align-self:center!important}.align-self-md-baseline{align-self:baseline!important}.align-self-md-stretch{-ms-grid-row-align:stretch!important;align-self:stretch!important}}@media (min-width:1320px){.text-lg-left{text-align:left!important}.text-lg-right{text-align:right!important}.text-lg-center{text-align:center!important}.flex-lg-first{order:-1}.flex-lg-last{order:1}.flex-lg-unordered{order:0}.flex-lg-row{flex-direction:row!important}.flex-lg-column{flex-direction:column!important}.flex-lg-row-reverse{flex-direction:row-reverse!important}.flex-lg-column-reverse{flex-direction:column-reverse!important}.flex-lg-wrap{flex-wrap:wrap!important}.flex-lg-nowrap{flex-wrap:nowrap!important}.flex-lg-wrap-reverse{flex-wrap:wrap-reverse!important}.justify-content-lg-start{justify-content:flex-start!important}.justify-content-lg-end{justify-content:flex-end!important}.justify-content-lg-center{justify-content:center!important}.justify-content-lg-between{justify-content:space-between!important}.justify-content-lg-around{justify-content:space-around!important}.align-items-lg-start{align-items:flex-start!important}.align-items-lg-end{align-items:flex-end!important}.align-items-lg-center{align-items:center!important}.align-items-lg-baseline{align-items:baseline!important}.align-items-lg-stretch{align-items:stretch!important}.align-content-lg-start{align-content:flex-start!important}.align-content-lg-end{align-content:flex-end!important}.align-content-lg-center{align-content:center!important}.align-content-lg-between{align-content:space-between!important}.align-content-lg-around{align-content:space-around!important}.align-content-lg-stretch{align-content:stretch!important}.align-self-lg-auto{-ms-grid-row-align:auto!important;align-self:auto!important}.align-self-lg-start{align-self:flex-start!important}.align-self-lg-end{align-self:flex-end!important}.align-self-lg-center{-ms-grid-row-align:center!important;align-self:center!important}.align-self-lg-baseline{align-self:baseline!important}.align-self-lg-stretch{-ms-grid-row-align:stretch!important;align-self:stretch!important}}@media (min-width:1560px){.text-xlg-left{text-align:left!important}.text-xlg-right{text-align:right!important}.text-xlg-center{text-align:center!important}.flex-xlg-first{order:-1}.flex-xlg-last{order:1}.flex-xlg-unordered{order:0}.flex-xlg-row{flex-direction:row!important}.flex-xlg-column{flex-direction:column!important}.flex-xlg-row-reverse{flex-direction:row-reverse!important}.flex-xlg-column-reverse{flex-direction:column-reverse!important}.flex-xlg-wrap{flex-wrap:wrap!important}.flex-xlg-nowrap{flex-wrap:nowrap!important}.flex-xlg-wrap-reverse{flex-wrap:wrap-reverse!important}.justify-content-xlg-start{justify-content:flex-start!important}.justify-content-xlg-end{justify-content:flex-end!important}.justify-content-xlg-center{justify-content:center!important}.justify-content-xlg-between{justify-content:space-between!important}.justify-content-xlg-around{justify-content:space-around!important}.align-items-xlg-start{align-items:flex-start!important}.align-items-xlg-end{align-items:flex-end!important}.align-items-xlg-center{align-items:center!important}.align-items-xlg-baseline{align-items:baseline!important}.align-items-xlg-stretch{align-items:stretch!important}.align-content-xlg-start{align-content:flex-start!important}.align-content-xlg-end{align-content:flex-end!important}.align-content-xlg-center{align-content:center!important}.align-content-xlg-between{align-content:space-between!important}.align-content-xlg-around{align-content:space-around!important}.align-content-xlg-stretch{align-content:stretch!important}.align-self-xlg-auto{-ms-grid-row-align:auto!important;align-self:auto!important}.align-self-xlg-start{align-self:flex-start!important}.align-self-xlg-end{align-self:flex-end!important}.align-self-xlg-center{-ms-grid-row-align:center!important;align-self:center!important}.align-self-xlg-baseline{align-self:baseline!important}.align-self-xlg-stretch{-ms-grid-row-align:stretch!important;align-self:stretch!important}}:host{font-family:Roboto,sans-serif;box-sizing:border-box;-moz-box-sizing:border-box;-webkit-box-sizing:border-box}:host.cmx-table{display:block}.table-container{position:relative;width:100%;height:100%;background-color:#f4f6f9;display:block}.cmx-table-header{text-decoration:none;font-size:.75rem;line-height:20px;color:#001b3a;display:block;border-collapse:collapse;margin-bottom:4px;padding:10px 0;width:100%;box-sizing:border-box;-moz-box-sizing:border-box;-webkit-box-sizing:border-box}.cmx-table-header.--scroll-spacing{padding-right:2.5vh;padding-left:0}html[dir=rtl] :host .cmx-table-header{padding-left:10px}.cmx-table-body{display:block;padding:0;background-color:none;margin-bottom:16px;overflow-x:hidden}.--truncate-text{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;max-width:100%;min-width:0}:host::ng-deep .cmx-table-item{border-collapse:collapse;margin-bottom:4px;padding:8px 0;height:40px;width:100%;box-sizing:border-box;-moz-box-sizing:border-box;-webkit-box-sizing:border-box;border-top:2px solid #f4f6f9;border-bottom:2px solid #f4f6f9;background-color:#fff;transition:background-color .5s ease-out;-moz-transition:background-color .5s ease-out;-webkit-transition:background-color .5s ease-out}:host::ng-deep .cmx-table-item.checked{background-color:#b7deff!important}:host::ng-deep .cmx-table-item:hover{background-color:#d6d6d6}:host::ng-deep .cmx-table-item:nth-child(even){background-color:#e8ebef}:host::ng-deep .cmx-table-item:nth-child(even):hover{background-color:#d6d6d6}:host::ng-deep .cmx-cell{overflow:hidden;white-space:nowrap;text-overflow:ellipsis;padding-left:12px;padding-right:12px;color:#333;font-family:Roboto,sans-serif;font-size:.75rem;line-height:.75rem}:host::ng-deep .status{width:24px;height:16px;border-radius:2px;margin-right:8px;background-color:#d6d6d6}:host::ng-deep .status.ok{background-color:#7ac943}:host::ng-deep .status.warning{background-color:#f9a23d}:host::ng-deep .status.error{background-color:#c0392b}.pagination{display:inline-block;list-style:none;padding:0;margin:0}.pagination li{display:inline-block;margin:0 8px;float:left}.pagination li a{cursor:pointer;font-size:.875rem;line-height:22px;width:24px;height:24px;display:inline-block;color:#5c6570;float:left;text-decoration:none;border-radius:2px;text-align:center;border:1px solid transparent}.pagination li a.hover,.pagination li a:hover{border:1px solid #3fa9f5}.pagination li a.current{color:#fff;background:#3fa9f5}.pagination li svg{width:8px;height:12px;fill:#3fa9f5;transition:.25s}.pagination .pagination-next.hide,.pagination .pagination-prev.hide{display:none}.pagination .pagination-next.hover a,.pagination .pagination-next:hover a,.pagination .pagination-prev.hover a,.pagination .pagination-prev:hover a{border:0}.pagination .pagination-next.hover a svg,.pagination .pagination-next:hover a svg,.pagination .pagination-prev.hover a svg,.pagination .pagination-prev:hover a svg{width:16px;height:20px;fill:#3fa9f5}"]
                }] }
    ];
    /** @nocollapse */
    CmxTableComponent.ctorParameters = function () { return [
        { type: WatcherService }
    ]; };
    CmxTableComponent.propDecorators = {
        tableSource: [{ type: Input }],
        dataSource: [{ type: Input }],
        updateDataSource: [{ type: Input }],
        pageSize: [{ type: Input }],
        rtl: [{ type: Input }],
        cmxTableClass: [{ type: HostBinding, args: ['class.cmx-table',] }],
        rowDefinitions: [{ type: ContentChildren, args: [CmxRowTemplateDirective,] }],
        headerDefinitions: [{ type: ContentChildren, args: [CmxHeaderTemplateDirective,] }],
        headerCells: [{ type: ContentChildren, args: [CmxHeaderCellComponent, { descendants: true },] }],
        rowPlaceholder: [{ type: ViewChild, args: [RowPlaceholderDirective,] }],
        headerPlaceholder: [{ type: ViewChild, args: [HeaderPlaceholderDirective,] }],
        cmxTableBodyElement: [{ type: ViewChild, args: ['cmxTableBody',] }]
    };
    return CmxTableComponent;
}());
export { CmxTableComponent };
if (false) {
    /** @type {?} */
    CmxTableComponent.prototype.cmxTableClass;
    /** @type {?} */
    CmxTableComponent.prototype.rowDefinitions;
    /** @type {?} */
    CmxTableComponent.prototype.headerDefinitions;
    /** @type {?} */
    CmxTableComponent.prototype.headerCells;
    /** @type {?} */
    CmxTableComponent.prototype.rowPlaceholder;
    /** @type {?} */
    CmxTableComponent.prototype.headerPlaceholder;
    /** @type {?} */
    CmxTableComponent.prototype.cmxTableBodyElement;
    /** @type {?} */
    CmxTableComponent.prototype.assignedId;
    /** @type {?} */
    CmxTableComponent.prototype.pages;
    /** @type {?} */
    CmxTableComponent.prototype.tableHasScroll;
    /**
     * @type {?}
     * @private
     */
    CmxTableComponent.prototype._dataSource;
    /**
     * @type {?}
     * @private
     */
    CmxTableComponent.prototype._table;
    /**
     * @type {?}
     * @private
     */
    CmxTableComponent.prototype._pageSize;
    /**
     * @type {?}
     * @private
     */
    CmxTableComponent.prototype._rtl;
    /** @type {?} */
    CmxTableComponent.prototype.currentActivePage;
    /**
     * @type {?}
     * @private
     */
    CmxTableComponent.prototype.currentPageData;
    /**
     * @type {?}
     * @private
     */
    CmxTableComponent.prototype.viewportData;
    /**
     * @type {?}
     * @private
     */
    CmxTableComponent.prototype.activeFiltersCopy;
    /**
     * @type {?}
     * @private
     */
    CmxTableComponent.prototype.activeFiltersSubscription;
    /**
     * @type {?}
     * @private
     */
    CmxTableComponent.prototype.rowViewReferences;
    /**
     * @type {?}
     * @private
     */
    CmxTableComponent.prototype.watcher;
}
//# sourceMappingURL=data:application/json;base64,