/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { FormsModule } from '@angular/forms';
import { FlexLayoutModule } from '@angular/flex-layout';
import { CmxCheckboxModule } from '@cemex/cmx-checkbox-v4';
import { CmxDatepickerModule } from '@cemex/cmx-datepicker-v4';
import { CmxTableComponent } from './components/cmx-table/cmx-table.component';
import { CmxPaginationComponent } from './components/cmx-pagination/cmx-pagination.component';
import { CmxDatepickerFilterComponent } from './components/cmx-datepicker-filter/cmx-datepicker-filter.component';
import { CmxHeaderCellComponent } from './components/cmx-header-cell/cmx-header-cell.component';
import { CmxFilterSorterComponent } from './components/cxm-filter-sorter/cmx-filter-sorter.component';
import { CmxCheckboxFiltersComponent } from './components/cmx-checkbox-filters/cmx-checkbox-filters.component';
import { CmxTableItemDirective } from './directives/cmx-table-item.directive';
import { CmxCellDirective } from './directives/cmx-cell.directive';
import { HeaderPlaceholderDirective } from './directives/cmx-header-placeholder.directive';
import { RowPlaceholderDirective } from './directives/cmx-row-placeholder.directive';
import { CmxHeaderTemplateDirective } from './directives/cmx-header-template.directive';
import { CmxRowTemplateDirective } from './directives/cmx-row-template.directive';
import { WatcherService } from './services/watcher.service';
var CmxTableModule = /** @class */ (function () {
    function CmxTableModule() {
    }
    CmxTableModule.decorators = [
        { type: NgModule, args: [{
                    imports: [
                        CommonModule,
                        FormsModule,
                        FlexLayoutModule,
                        CmxCheckboxModule,
                        CmxDatepickerModule,
                    ],
                    declarations: [
                        CmxTableComponent,
                        CmxCheckboxFiltersComponent,
                        CmxRowTemplateDirective,
                        CmxHeaderTemplateDirective,
                        RowPlaceholderDirective,
                        HeaderPlaceholderDirective,
                        CmxHeaderCellComponent,
                        CmxFilterSorterComponent,
                        CmxCellDirective,
                        CmxTableItemDirective,
                        CmxDatepickerFilterComponent,
                        CmxPaginationComponent,
                    ],
                    exports: [
                        CmxTableComponent,
                        CmxCheckboxFiltersComponent,
                        CmxRowTemplateDirective,
                        CmxHeaderTemplateDirective,
                        CmxFilterSorterComponent,
                        RowPlaceholderDirective,
                        HeaderPlaceholderDirective,
                        CmxHeaderCellComponent,
                        CmxCellDirective,
                        CmxTableItemDirective,
                        CmxDatepickerFilterComponent,
                        CmxPaginationComponent,
                    ],
                    providers: [
                        WatcherService,
                    ]
                },] }
    ];
    return CmxTableModule;
}());
export { CmxTableModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY214LXRhYmxlLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BjZW1leC9jbXgtdGFibGUtdjcvIiwic291cmNlcyI6WyJsaWIvY214LXRhYmxlLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN6QyxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDL0MsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQzdDLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBRXhELE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBQzNELE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLDBCQUEwQixDQUFDO0FBRS9ELE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLDRDQUE0QyxDQUFDO0FBQy9FLE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxNQUFNLHNEQUFzRCxDQUFDO0FBQzlGLE9BQU8sRUFBRSw0QkFBNEIsRUFBRSxNQUFNLG9FQUFvRSxDQUFDO0FBQ2xILE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxNQUFNLHdEQUF3RCxDQUFDO0FBQ2hHLE9BQU8sRUFBRSx3QkFBd0IsRUFBRSxNQUFNLDREQUE0RCxDQUFDO0FBQ3RHLE9BQU8sRUFBRSwyQkFBMkIsRUFBRSxNQUFNLGtFQUFrRSxDQUFDO0FBQy9HLE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxNQUFNLHVDQUF1QyxDQUFDO0FBQzlFLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLGlDQUFpQyxDQUFDO0FBQ25FLE9BQU8sRUFBRSwwQkFBMEIsRUFBRSxNQUFNLCtDQUErQyxDQUFDO0FBQzNGLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxNQUFNLDRDQUE0QyxDQUFDO0FBQ3JGLE9BQU8sRUFBRSwwQkFBMEIsRUFBRSxNQUFNLDRDQUE0QyxDQUFDO0FBQ3hGLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxNQUFNLHlDQUF5QyxDQUFDO0FBQ2xGLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSw0QkFBNEIsQ0FBQztBQUU1RDtJQUFBO0lBd0M4QixDQUFDOztnQkF4QzlCLFFBQVEsU0FBQztvQkFDUixPQUFPLEVBQUU7d0JBQ1AsWUFBWTt3QkFDWixXQUFXO3dCQUNYLGdCQUFnQjt3QkFDaEIsaUJBQWlCO3dCQUNqQixtQkFBbUI7cUJBQ3RCO29CQUNELFlBQVksRUFBRTt3QkFDVixpQkFBaUI7d0JBQ2pCLDJCQUEyQjt3QkFDM0IsdUJBQXVCO3dCQUN2QiwwQkFBMEI7d0JBQzFCLHVCQUF1Qjt3QkFDdkIsMEJBQTBCO3dCQUMxQixzQkFBc0I7d0JBQ3RCLHdCQUF3Qjt3QkFDeEIsZ0JBQWdCO3dCQUNoQixxQkFBcUI7d0JBQ3JCLDRCQUE0Qjt3QkFDNUIsc0JBQXNCO3FCQUN6QjtvQkFDRCxPQUFPLEVBQUU7d0JBQ0wsaUJBQWlCO3dCQUNqQiwyQkFBMkI7d0JBQzNCLHVCQUF1Qjt3QkFDdkIsMEJBQTBCO3dCQUMxQix3QkFBd0I7d0JBQ3hCLHVCQUF1Qjt3QkFDdkIsMEJBQTBCO3dCQUMxQixzQkFBc0I7d0JBQ3RCLGdCQUFnQjt3QkFDaEIscUJBQXFCO3dCQUNyQiw0QkFBNEI7d0JBQzVCLHNCQUFzQjtxQkFDekI7b0JBQ0QsU0FBUyxFQUFFO3dCQUNQLGNBQWM7cUJBQ2pCO2lCQUNBOztJQUM2QixxQkFBQztDQUFBLEFBeEMvQixJQXdDK0I7U0FBbEIsY0FBYyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XHJcbmltcG9ydCB7IEZvcm1zTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xyXG5pbXBvcnQgeyBGbGV4TGF5b3V0TW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvZmxleC1sYXlvdXQnO1xyXG5cclxuaW1wb3J0IHsgQ214Q2hlY2tib3hNb2R1bGUgfSBmcm9tICdAY2VtZXgvY214LWNoZWNrYm94LXY0JztcclxuaW1wb3J0IHsgQ214RGF0ZXBpY2tlck1vZHVsZSB9IGZyb20gJ0BjZW1leC9jbXgtZGF0ZXBpY2tlci12NCc7XHJcblxyXG5pbXBvcnQgeyBDbXhUYWJsZUNvbXBvbmVudCB9IGZyb20gJy4vY29tcG9uZW50cy9jbXgtdGFibGUvY214LXRhYmxlLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IENteFBhZ2luYXRpb25Db21wb25lbnQgfSBmcm9tICcuL2NvbXBvbmVudHMvY214LXBhZ2luYXRpb24vY214LXBhZ2luYXRpb24uY29tcG9uZW50JztcclxuaW1wb3J0IHsgQ214RGF0ZXBpY2tlckZpbHRlckNvbXBvbmVudCB9IGZyb20gJy4vY29tcG9uZW50cy9jbXgtZGF0ZXBpY2tlci1maWx0ZXIvY214LWRhdGVwaWNrZXItZmlsdGVyLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IENteEhlYWRlckNlbGxDb21wb25lbnQgfSBmcm9tICcuL2NvbXBvbmVudHMvY214LWhlYWRlci1jZWxsL2NteC1oZWFkZXItY2VsbC5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBDbXhGaWx0ZXJTb3J0ZXJDb21wb25lbnQgfSBmcm9tICcuL2NvbXBvbmVudHMvY3htLWZpbHRlci1zb3J0ZXIvY214LWZpbHRlci1zb3J0ZXIuY29tcG9uZW50JztcclxuaW1wb3J0IHsgQ214Q2hlY2tib3hGaWx0ZXJzQ29tcG9uZW50IH0gZnJvbSAnLi9jb21wb25lbnRzL2NteC1jaGVja2JveC1maWx0ZXJzL2NteC1jaGVja2JveC1maWx0ZXJzLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IENteFRhYmxlSXRlbURpcmVjdGl2ZSB9IGZyb20gJy4vZGlyZWN0aXZlcy9jbXgtdGFibGUtaXRlbS5kaXJlY3RpdmUnO1xyXG5pbXBvcnQgeyBDbXhDZWxsRGlyZWN0aXZlIH0gZnJvbSAnLi9kaXJlY3RpdmVzL2NteC1jZWxsLmRpcmVjdGl2ZSc7XHJcbmltcG9ydCB7IEhlYWRlclBsYWNlaG9sZGVyRGlyZWN0aXZlIH0gZnJvbSAnLi9kaXJlY3RpdmVzL2NteC1oZWFkZXItcGxhY2Vob2xkZXIuZGlyZWN0aXZlJztcclxuaW1wb3J0IHsgUm93UGxhY2Vob2xkZXJEaXJlY3RpdmUgfSBmcm9tICcuL2RpcmVjdGl2ZXMvY214LXJvdy1wbGFjZWhvbGRlci5kaXJlY3RpdmUnO1xyXG5pbXBvcnQgeyBDbXhIZWFkZXJUZW1wbGF0ZURpcmVjdGl2ZSB9IGZyb20gJy4vZGlyZWN0aXZlcy9jbXgtaGVhZGVyLXRlbXBsYXRlLmRpcmVjdGl2ZSc7XHJcbmltcG9ydCB7IENteFJvd1RlbXBsYXRlRGlyZWN0aXZlIH0gZnJvbSAnLi9kaXJlY3RpdmVzL2NteC1yb3ctdGVtcGxhdGUuZGlyZWN0aXZlJztcclxuaW1wb3J0IHsgV2F0Y2hlclNlcnZpY2UgfSBmcm9tICcuL3NlcnZpY2VzL3dhdGNoZXIuc2VydmljZSc7XHJcblxyXG5ATmdNb2R1bGUoe1xyXG4gIGltcG9ydHM6IFtcclxuICAgIENvbW1vbk1vZHVsZSxcclxuICAgIEZvcm1zTW9kdWxlLFxyXG4gICAgRmxleExheW91dE1vZHVsZSxcclxuICAgIENteENoZWNrYm94TW9kdWxlLFxyXG4gICAgQ214RGF0ZXBpY2tlck1vZHVsZSxcclxuXSxcclxuZGVjbGFyYXRpb25zOiBbXHJcbiAgICBDbXhUYWJsZUNvbXBvbmVudCxcclxuICAgIENteENoZWNrYm94RmlsdGVyc0NvbXBvbmVudCxcclxuICAgIENteFJvd1RlbXBsYXRlRGlyZWN0aXZlLFxyXG4gICAgQ214SGVhZGVyVGVtcGxhdGVEaXJlY3RpdmUsXHJcbiAgICBSb3dQbGFjZWhvbGRlckRpcmVjdGl2ZSxcclxuICAgIEhlYWRlclBsYWNlaG9sZGVyRGlyZWN0aXZlLFxyXG4gICAgQ214SGVhZGVyQ2VsbENvbXBvbmVudCxcclxuICAgIENteEZpbHRlclNvcnRlckNvbXBvbmVudCxcclxuICAgIENteENlbGxEaXJlY3RpdmUsXHJcbiAgICBDbXhUYWJsZUl0ZW1EaXJlY3RpdmUsXHJcbiAgICBDbXhEYXRlcGlja2VyRmlsdGVyQ29tcG9uZW50LFxyXG4gICAgQ214UGFnaW5hdGlvbkNvbXBvbmVudCxcclxuXSxcclxuZXhwb3J0czogW1xyXG4gICAgQ214VGFibGVDb21wb25lbnQsXHJcbiAgICBDbXhDaGVja2JveEZpbHRlcnNDb21wb25lbnQsXHJcbiAgICBDbXhSb3dUZW1wbGF0ZURpcmVjdGl2ZSxcclxuICAgIENteEhlYWRlclRlbXBsYXRlRGlyZWN0aXZlLFxyXG4gICAgQ214RmlsdGVyU29ydGVyQ29tcG9uZW50LFxyXG4gICAgUm93UGxhY2Vob2xkZXJEaXJlY3RpdmUsXHJcbiAgICBIZWFkZXJQbGFjZWhvbGRlckRpcmVjdGl2ZSxcclxuICAgIENteEhlYWRlckNlbGxDb21wb25lbnQsXHJcbiAgICBDbXhDZWxsRGlyZWN0aXZlLFxyXG4gICAgQ214VGFibGVJdGVtRGlyZWN0aXZlLFxyXG4gICAgQ214RGF0ZXBpY2tlckZpbHRlckNvbXBvbmVudCxcclxuICAgIENteFBhZ2luYXRpb25Db21wb25lbnQsXHJcbl0sXHJcbnByb3ZpZGVyczogW1xyXG4gICAgV2F0Y2hlclNlcnZpY2UsXHJcbl1cclxufSlcclxuZXhwb3J0IGNsYXNzIENteFRhYmxlTW9kdWxlIHsgfVxyXG4iXX0=