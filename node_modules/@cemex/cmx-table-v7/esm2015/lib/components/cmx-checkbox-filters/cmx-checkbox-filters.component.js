/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, ViewChildren, QueryList, forwardRef, Host, } from '@angular/core';
import { BehaviorSubject } from 'rxjs';
import { CmxCheckboxComponent } from '@cemex/cmx-checkbox-v4';
import { Filter } from '../../classes/filter.class';
import { WatcherService } from '../../services/watcher.service';
import { CmxTableComponent } from '../cmx-table/cmx-table.component';
export class CmxCheckboxFiltersComponent {
    /**
     * @param {?} watcher
     * @param {?} parent
     */
    constructor(watcher, parent) {
        this.watcher = watcher;
        this.parent = parent;
        this.showAllOption = false;
        this.allOptionName = '';
        this.searchPlaceholder = '';
        this.enableSearch = false;
        this.searchTerm = '';
        this.allFilter = new Filter('All', null, false, null);
        this.isRtl = false;
        this.activeFilters = new BehaviorSubject(false);
        this.checkboxSubscriptions = [];
        this.isRtl = this.parent.rtl;
    }
    /**
     * @param {?} $value
     * @return {?}
     */
    set filters($value) {
        if ($value !== undefined && $value !== null) {
            this._filters = $value;
        }
    }
    /**
     * @return {?}
     */
    get filters() {
        return this._filters;
    }
    /**
     * @return {?}
     */
    ngAfterViewInit() {
        this.listenToCheckboxes();
    }
    /**
     * @return {?}
     */
    ngOnDestroy() {
        this.dropSubscriptions();
    }
    /**
     * @return {?}
     */
    listenToActiveFilters() {
        return this.activeFilters.asObservable();
    }
    /**
     * \@description Checks all filters when the 'All' checkbox is clicked.
     * @param {?} $event
     * @return {?}
     */
    toggleAll($event) {
        if (typeof $event === 'boolean') {
            this.allFilter.active = $event;
            this._filters.forEach((/**
             * @param {?} filter
             * @return {?}
             */
            (filter) => {
                if (filter.visible) {
                    filter.active = $event;
                }
            }));
        }
    }
    /**
     * \@description Toggles the 'active' attribute of a filter to enable or disable.
     * @param {?} filter
     * @param {?} $event
     * @return {?}
     */
    toggleFilter(filter, $event) {
        if (typeof $event === 'boolean') {
            filter.active = $event;
            if (!this.showAllOption) {
                return;
            }
            if (!$event) {
                this.allFilter.active = false;
            }
            else {
                /** @type {?} */
                let $filtersOnFalse = 0;
                this.filters.forEach((/**
                 * @param {?} $filter
                 * @return {?}
                 */
                ($filter) => {
                    if ($filter.active === false) {
                        $filtersOnFalse++;
                    }
                }));
                this.allFilter.active = ($filtersOnFalse === 0) ? true : false;
                // let $hasAllFilterActive: boolean = false;
                // $hasAllFilterActive = this._filters.every(function($filter) {
                //     return $filter.active;
                // });
                // this.allFilter.active = $hasAllFilterActive;
            }
        }
    }
    /**
     * @return {?}
     */
    clearSearch() {
        this.searchTerm = '';
        this.filters.forEach((/**
         * @param {?} $filter
         * @return {?}
         */
        ($filter) => {
            $filter.visible = true;
        }));
    }
    /**
     * @param {?} term
     * @return {?}
     */
    searchInFilter(term) {
        if (term.length >= 4 || term === '') {
            /** @type {?} */
            const aux = term.toLowerCase();
            if (aux !== '') {
                this.filters.filter((/**
                 * @param {?} row
                 * @return {?}
                 */
                (row) => {
                    if (row.name && row.name.toLowerCase().includes(aux)) {
                        row.visible = true;
                    }
                    else {
                        row.visible = false;
                    }
                }));
            }
            else {
                this.clearSearch();
            }
        }
    }
    /**
     * @private
     * @return {?}
     */
    emitFilters() {
        this.watcher.emitActiveFilters(this.parent.assignedId, this._filters);
    }
    /**
     * @private
     * @return {?}
     */
    emitActiveCheckboxes() {
        /** @type {?} */
        const activeFilters = [];
        this._filters.forEach((/**
         * @param {?} filter
         * @return {?}
         */
        (filter) => {
            if (filter.active) {
                activeFilters.push(filter);
            }
        }));
        if (activeFilters.length > 0) {
            this.activeFilters.next(true);
        }
        else {
            this.activeFilters.next(false);
        }
    }
    /**
     * @private
     * @return {?}
     */
    listenToCheckboxes() {
        this.checkboxes.forEach((/**
         * @param {?} $checkbox
         * @return {?}
         */
        ($checkbox) => {
            /** @type {?} */
            const $subscription = $checkbox.change.subscribe((/**
             * @param {?} $checked
             * @return {?}
             */
            ($checked) => {
                this.emitFilters();
                this.emitActiveCheckboxes();
            }));
            this.checkboxSubscriptions.push($subscription);
        }));
    }
    /**
     * @private
     * @return {?}
     */
    dropSubscriptions() {
        this.checkboxSubscriptions.forEach((/**
         * @param {?} $sub
         * @return {?}
         */
        ($sub) => $sub.unsubscribe()));
        this.checkboxSubscriptions = [];
    }
}
CmxCheckboxFiltersComponent.decorators = [
    { type: Component, args: [{
                selector: 'cmx-checkbox-filters',
                template: "<div class=\"search-container\" *ngIf=\"enableSearch\">\r\n    <div id=\"cmx-checkbox-filter-search-input\" [dir]=\"isRtl ? 'rtl':'auto'\" class=\"filterSearchBox\" fxLayoutAlign=\"center center\" fxLayout=\"row\">\r\n        <input fxFlex class=\"search-input\" type=\"text\" placeholder=\"{{ searchPlaceholder }}\" [(ngModel)]=\"searchTerm\" (keyup)=\"searchInFilter(searchTerm)\">\r\n        <span fxFlex=\"35px\" class=\"cmx-icon-search search-input-icon\" aria-hidden=\"true\" *ngIf=\"searchTerm === ''\"></span>\r\n        <span fxFlex=\"35px\" class=\"cmx-icon-close search-input-icon\" aria-hidden=\"true\"  *ngIf=\"searchTerm !== ''\" (click)=\"clearSearch()\"></span>\r\n    </div>\r\n</div>\r\n<div *ngIf=\"showAllOption\" class=\"checkbox-container\" [dir]=\"isRtl ? 'rtl':'auto'\">\r\n    <cmx-checkbox [checked]=\"allFilter.active\" (change)=\"toggleAll($event)\" [rtl]=\"isRtl\">\r\n        {{ allOptionName }}\r\n    </cmx-checkbox>\r\n</div>\r\n<ng-container *ngFor=\"let filter of _filters; let $index = index;\">\r\n    <div [hidden]=\"!filter.visible\" class=\"checkbox-container\" [dir]=\"isRtl ? 'rtl':'auto'\">\r\n        <cmx-checkbox [id]=\"'checkbox-' + filter.columnKey + $index\" [checked]=\"filter.active\" (change)=\"toggleFilter(filter, $event)\" [rtl]=\"isRtl\">\r\n            {{ filter.name }}\r\n        </cmx-checkbox>\r\n    </div>\r\n</ng-container>",
                styles: [".roboto-bold{font-weight:700}.roboto-medium{font-weight:500}.roboto-regular{font-weight:400}.roboto-light{font-weight:300}.roboto-thin{font-weight:100}.h1-role,h1{font-family:Roboto,sans-serif;font-size:3rem;line-height:3rem;font-weight:700;color:#001b3a}.h2-role,.h3-role,h2,h3{font-family:Roboto,sans-serif;font-size:1.625rem;line-height:2rem;font-weight:400;color:#001b3a}.h4-role,h4{font-family:Roboto,sans-serif;font-size:2rem;line-height:2rem;font-weight:500;color:#001b3a}.h5-role,h5{font-family:Roboto,sans-serif;font-size:1.25rem;line-height:1.5rem;font-weight:400;color:#001b3a}.h6-role,h6{font-family:Roboto,sans-serif;font-size:.875rem;line-height:1rem;font-weight:700;color:#001b3a;text-transform:uppercase}.table-entry{font-family:Roboto,sans-serif;font-size:.875rem;line-height:1rem}.table-entry-strong{font-family:Roboto,sans-serif;font-size:.875rem;line-height:1rem;color:#333;font-weight:700}.link,.table-entry,a{text-decoration:none;color:#3fa9f5}a:hover{text-decoration:underline}.input-placeholder{font-family:Roboto,sans-serif;font-size:.875rem;line-height:1rem;color:#666}.input-text{font-family:Roboto,sans-serif;font-size:.875rem;line-height:1rem;color:#333}.size-15{font-size:.9375rem}.size-24{font-size:1.5rem}.text-left{text-align:left!important}.text-right{text-align:right!important}.text-center{text-align:center!important}.flex-first{order:-1}.flex-last{order:1}.flex-unordered{order:0}.flex-row{flex-direction:row!important}.flex-column{flex-direction:column!important}.flex-row-reverse{flex-direction:row-reverse!important}.flex-column-reverse{flex-direction:column-reverse!important}.flex-wrap{flex-wrap:wrap!important}.flex-nowrap{flex-wrap:nowrap!important}.flex-wrap-reverse{flex-wrap:wrap-reverse!important}.justify-content-start{justify-content:flex-start!important}.justify-content-end{justify-content:flex-end!important}.justify-content-center{justify-content:center!important}.justify-content-between{justify-content:space-between!important}.justify-content-around{justify-content:space-around!important}.align-items-start{align-items:flex-start!important}.align-items-end{align-items:flex-end!important}.align-items-center{align-items:center!important}.align-items-baseline{align-items:baseline!important}.align-items-stretch{align-items:stretch!important}.align-content-start{align-content:flex-start!important}.align-content-end{align-content:flex-end!important}.align-content-center{align-content:center!important}.align-content-between{align-content:space-between!important}.align-content-around{align-content:space-around!important}.align-content-stretch{align-content:stretch!important}.align-self-auto{-ms-grid-row-align:auto!important;align-self:auto!important}.align-self-start{align-self:flex-start!important}.align-self-end{align-self:flex-end!important}.align-self-center{-ms-grid-row-align:center!important;align-self:center!important}.align-self-baseline{align-self:baseline!important}.align-self-stretch{-ms-grid-row-align:stretch!important;align-self:stretch!important}@media (min-width:576px){.text-xs-left{text-align:left!important}.text-xs-right{text-align:right!important}.text-xs-center{text-align:center!important}.flex-xs-first{order:-1}.flex-xs-last{order:1}.flex-xs-unordered{order:0}.flex-xs-row{flex-direction:row!important}.flex-xs-column{flex-direction:column!important}.flex-xs-row-reverse{flex-direction:row-reverse!important}.flex-xs-column-reverse{flex-direction:column-reverse!important}.flex-xs-wrap{flex-wrap:wrap!important}.flex-xs-nowrap{flex-wrap:nowrap!important}.flex-xs-wrap-reverse{flex-wrap:wrap-reverse!important}.justify-content-xs-start{justify-content:flex-start!important}.justify-content-xs-end{justify-content:flex-end!important}.justify-content-xs-center{justify-content:center!important}.justify-content-xs-between{justify-content:space-between!important}.justify-content-xs-around{justify-content:space-around!important}.align-items-xs-start{align-items:flex-start!important}.align-items-xs-end{align-items:flex-end!important}.align-items-xs-center{align-items:center!important}.align-items-xs-baseline{align-items:baseline!important}.align-items-xs-stretch{align-items:stretch!important}.align-content-xs-start{align-content:flex-start!important}.align-content-xs-end{align-content:flex-end!important}.align-content-xs-center{align-content:center!important}.align-content-xs-between{align-content:space-between!important}.align-content-xs-around{align-content:space-around!important}.align-content-xs-stretch{align-content:stretch!important}.align-self-xs-auto{-ms-grid-row-align:auto!important;align-self:auto!important}.align-self-xs-start{align-self:flex-start!important}.align-self-xs-end{align-self:flex-end!important}.align-self-xs-center{-ms-grid-row-align:center!important;align-self:center!important}.align-self-xs-baseline{align-self:baseline!important}.align-self-xs-stretch{-ms-grid-row-align:stretch!important;align-self:stretch!important}}@media (min-width:768px){.text-sm-left{text-align:left!important}.text-sm-right{text-align:right!important}.text-sm-center{text-align:center!important}.flex-sm-first{order:-1}.flex-sm-last{order:1}.flex-sm-unordered{order:0}.flex-sm-row{flex-direction:row!important}.flex-sm-column{flex-direction:column!important}.flex-sm-row-reverse{flex-direction:row-reverse!important}.flex-sm-column-reverse{flex-direction:column-reverse!important}.flex-sm-wrap{flex-wrap:wrap!important}.flex-sm-nowrap{flex-wrap:nowrap!important}.flex-sm-wrap-reverse{flex-wrap:wrap-reverse!important}.justify-content-sm-start{justify-content:flex-start!important}.justify-content-sm-end{justify-content:flex-end!important}.justify-content-sm-center{justify-content:center!important}.justify-content-sm-between{justify-content:space-between!important}.justify-content-sm-around{justify-content:space-around!important}.align-items-sm-start{align-items:flex-start!important}.align-items-sm-end{align-items:flex-end!important}.align-items-sm-center{align-items:center!important}.align-items-sm-baseline{align-items:baseline!important}.align-items-sm-stretch{align-items:stretch!important}.align-content-sm-start{align-content:flex-start!important}.align-content-sm-end{align-content:flex-end!important}.align-content-sm-center{align-content:center!important}.align-content-sm-between{align-content:space-between!important}.align-content-sm-around{align-content:space-around!important}.align-content-sm-stretch{align-content:stretch!important}.align-self-sm-auto{-ms-grid-row-align:auto!important;align-self:auto!important}.align-self-sm-start{align-self:flex-start!important}.align-self-sm-end{align-self:flex-end!important}.align-self-sm-center{-ms-grid-row-align:center!important;align-self:center!important}.align-self-sm-baseline{align-self:baseline!important}.align-self-sm-stretch{-ms-grid-row-align:stretch!important;align-self:stretch!important}}@media (min-width:1080px){.text-md-left{text-align:left!important}.text-md-right{text-align:right!important}.text-md-center{text-align:center!important}.flex-md-first{order:-1}.flex-md-last{order:1}.flex-md-unordered{order:0}.flex-md-row{flex-direction:row!important}.flex-md-column{flex-direction:column!important}.flex-md-row-reverse{flex-direction:row-reverse!important}.flex-md-column-reverse{flex-direction:column-reverse!important}.flex-md-wrap{flex-wrap:wrap!important}.flex-md-nowrap{flex-wrap:nowrap!important}.flex-md-wrap-reverse{flex-wrap:wrap-reverse!important}.justify-content-md-start{justify-content:flex-start!important}.justify-content-md-end{justify-content:flex-end!important}.justify-content-md-center{justify-content:center!important}.justify-content-md-between{justify-content:space-between!important}.justify-content-md-around{justify-content:space-around!important}.align-items-md-start{align-items:flex-start!important}.align-items-md-end{align-items:flex-end!important}.align-items-md-center{align-items:center!important}.align-items-md-baseline{align-items:baseline!important}.align-items-md-stretch{align-items:stretch!important}.align-content-md-start{align-content:flex-start!important}.align-content-md-end{align-content:flex-end!important}.align-content-md-center{align-content:center!important}.align-content-md-between{align-content:space-between!important}.align-content-md-around{align-content:space-around!important}.align-content-md-stretch{align-content:stretch!important}.align-self-md-auto{-ms-grid-row-align:auto!important;align-self:auto!important}.align-self-md-start{align-self:flex-start!important}.align-self-md-end{align-self:flex-end!important}.align-self-md-center{-ms-grid-row-align:center!important;align-self:center!important}.align-self-md-baseline{align-self:baseline!important}.align-self-md-stretch{-ms-grid-row-align:stretch!important;align-self:stretch!important}}@media (min-width:1320px){.text-lg-left{text-align:left!important}.text-lg-right{text-align:right!important}.text-lg-center{text-align:center!important}.flex-lg-first{order:-1}.flex-lg-last{order:1}.flex-lg-unordered{order:0}.flex-lg-row{flex-direction:row!important}.flex-lg-column{flex-direction:column!important}.flex-lg-row-reverse{flex-direction:row-reverse!important}.flex-lg-column-reverse{flex-direction:column-reverse!important}.flex-lg-wrap{flex-wrap:wrap!important}.flex-lg-nowrap{flex-wrap:nowrap!important}.flex-lg-wrap-reverse{flex-wrap:wrap-reverse!important}.justify-content-lg-start{justify-content:flex-start!important}.justify-content-lg-end{justify-content:flex-end!important}.justify-content-lg-center{justify-content:center!important}.justify-content-lg-between{justify-content:space-between!important}.justify-content-lg-around{justify-content:space-around!important}.align-items-lg-start{align-items:flex-start!important}.align-items-lg-end{align-items:flex-end!important}.align-items-lg-center{align-items:center!important}.align-items-lg-baseline{align-items:baseline!important}.align-items-lg-stretch{align-items:stretch!important}.align-content-lg-start{align-content:flex-start!important}.align-content-lg-end{align-content:flex-end!important}.align-content-lg-center{align-content:center!important}.align-content-lg-between{align-content:space-between!important}.align-content-lg-around{align-content:space-around!important}.align-content-lg-stretch{align-content:stretch!important}.align-self-lg-auto{-ms-grid-row-align:auto!important;align-self:auto!important}.align-self-lg-start{align-self:flex-start!important}.align-self-lg-end{align-self:flex-end!important}.align-self-lg-center{-ms-grid-row-align:center!important;align-self:center!important}.align-self-lg-baseline{align-self:baseline!important}.align-self-lg-stretch{-ms-grid-row-align:stretch!important;align-self:stretch!important}}@media (min-width:1560px){.text-xlg-left{text-align:left!important}.text-xlg-right{text-align:right!important}.text-xlg-center{text-align:center!important}.flex-xlg-first{order:-1}.flex-xlg-last{order:1}.flex-xlg-unordered{order:0}.flex-xlg-row{flex-direction:row!important}.flex-xlg-column{flex-direction:column!important}.flex-xlg-row-reverse{flex-direction:row-reverse!important}.flex-xlg-column-reverse{flex-direction:column-reverse!important}.flex-xlg-wrap{flex-wrap:wrap!important}.flex-xlg-nowrap{flex-wrap:nowrap!important}.flex-xlg-wrap-reverse{flex-wrap:wrap-reverse!important}.justify-content-xlg-start{justify-content:flex-start!important}.justify-content-xlg-end{justify-content:flex-end!important}.justify-content-xlg-center{justify-content:center!important}.justify-content-xlg-between{justify-content:space-between!important}.justify-content-xlg-around{justify-content:space-around!important}.align-items-xlg-start{align-items:flex-start!important}.align-items-xlg-end{align-items:flex-end!important}.align-items-xlg-center{align-items:center!important}.align-items-xlg-baseline{align-items:baseline!important}.align-items-xlg-stretch{align-items:stretch!important}.align-content-xlg-start{align-content:flex-start!important}.align-content-xlg-end{align-content:flex-end!important}.align-content-xlg-center{align-content:center!important}.align-content-xlg-between{align-content:space-between!important}.align-content-xlg-around{align-content:space-around!important}.align-content-xlg-stretch{align-content:stretch!important}.align-self-xlg-auto{-ms-grid-row-align:auto!important;align-self:auto!important}.align-self-xlg-start{align-self:flex-start!important}.align-self-xlg-end{align-self:flex-end!important}.align-self-xlg-center{-ms-grid-row-align:center!important;align-self:center!important}.align-self-xlg-baseline{align-self:baseline!important}.align-self-xlg-stretch{-ms-grid-row-align:stretch!important;align-self:stretch!important}}:host{display:block;max-height:196px;overflow-x:hidden;overflow-y:auto;border-top:3px solid #3fa9f5;cursor:default}.checkbox-container{margin:20px 0;padding:0 12px;white-space:nowrap;text-align:start}.filterSearchBox{border:1px solid #ccc;border-radius:4px;transition:.2s}.search-input{border:none;height:40px;padding-right:10px;padding-left:10px}.search-container{padding:0 12px;margin:20px 0}.search-input-icon{color:#3fa9f5;font-size:2em}"]
            }] }
];
/** @nocollapse */
CmxCheckboxFiltersComponent.ctorParameters = () => [
    { type: WatcherService },
    { type: CmxTableComponent, decorators: [{ type: Host }] }
];
CmxCheckboxFiltersComponent.propDecorators = {
    filters: [{ type: Input }],
    showAllOption: [{ type: Input }],
    allOptionName: [{ type: Input }],
    searchPlaceholder: [{ type: Input }],
    enableSearch: [{ type: Input }],
    checkboxes: [{ type: ViewChildren, args: [forwardRef((/**
                 * @return {?}
                 */
                () => CmxCheckboxComponent)),] }]
};
if (false) {
    /** @type {?} */
    CmxCheckboxFiltersComponent.prototype.showAllOption;
    /** @type {?} */
    CmxCheckboxFiltersComponent.prototype.allOptionName;
    /** @type {?} */
    CmxCheckboxFiltersComponent.prototype.searchPlaceholder;
    /** @type {?} */
    CmxCheckboxFiltersComponent.prototype.enableSearch;
    /** @type {?} */
    CmxCheckboxFiltersComponent.prototype.checkboxes;
    /** @type {?} */
    CmxCheckboxFiltersComponent.prototype.searchTerm;
    /** @type {?} */
    CmxCheckboxFiltersComponent.prototype.allFilter;
    /** @type {?} */
    CmxCheckboxFiltersComponent.prototype._filters;
    /** @type {?} */
    CmxCheckboxFiltersComponent.prototype.isRtl;
    /**
     * @type {?}
     * @private
     */
    CmxCheckboxFiltersComponent.prototype.activeFilters;
    /**
     * @type {?}
     * @private
     */
    CmxCheckboxFiltersComponent.prototype.checkboxSubscriptions;
    /**
     * @type {?}
     * @private
     */
    CmxCheckboxFiltersComponent.prototype.watcher;
    /**
     * @type {?}
     * @private
     */
    CmxCheckboxFiltersComponent.prototype.parent;
}
//# sourceMappingURL=data:application/json;base64,