describe('Month moves', function () {
    it('starts the application', function () {
        cy.clearCookies();
        cy.clearLocalStorage();
        cy.window().then((win) => {
            win.sessionStorage.clear();
        });
        cy.visit('http://localhost:8000/datepicker-tags-input/');
    });
    it('should navigate to previous month', function () {
        cy.get('.cmx-icon-straight-arrow-left').should('have.class', 'cmx-icon-straight-arrow-left');
        cy.get('.cmx-icon-straight-arrow-left').click({ force: true });
    });
    it('should navigate to next month', function () {
        cy.get('.cmx-icon-straight-arrow-right').should('have.class', 'cmx-icon-straight-arrow-right');
        cy.get('.cmx-icon-straight-arrow-right').click({ force: true });
    });
    it('should display button tags correctly', function(){
        cy.get('.cmx-cancel-button')
            .contains('cancelx')
            .should('have.class', 'cmx-button')
            .should('have.class', 'cmx-button--link');
        cy.get('.cmx-apply-button')
            .contains('applyx')
            .should('have.class', 'cmx-button')
            .should('have.class', 'cmx-ripple');
    });
    it('should display current month tag correctly', function(){
        cy.get('.cmx-datepicker__current-period > :nth-child(1)')
            .contains(/.*x/)
            .should('have.class', 'cmx-button')
            .should('have.class', 'cmx-button--link');
    });
    it('should display dayname tags correctly', function(){
        const DAYS = ['sux', 'mox', 'tex', 'wex', 'thx', 'frx', 'sax'];
        DAYS.forEach((day, i) => cy.get(`thead > .cmx-datepicker__days-grid-row > :nth-child(${i+1})`).contains(day));
    });
    it('should display monthname tags correctly', function(){
        cy.get('.cmx-datepicker__current-period > :nth-child(1)').click({force:true});
        const MONTHS = [
            ['jax', 'fex', 'max',], 
            ['apx', 'max', 'jux'], 
            ['jux', 'aux', 'sex'], 
            ['ocx', 'nox', 'dex']];
        MONTHS.forEach((monthsRow, i) => {
            monthsRow.forEach((month, j) => cy.get(`:nth-child(${i+1}) > :nth-child(${j+1}) > .cmx-datepicker__month`).contains(month))
        });
    });
});