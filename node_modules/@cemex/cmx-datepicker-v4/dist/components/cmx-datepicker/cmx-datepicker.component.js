import { Component, Input, Output, EventEmitter, HostBinding, Optional, Inject } from "@angular/core";
import { DateNamesService } from "./../../services/date-names.service";
import { DatepickerTags } from "./../../models/datepicker.classes";
import { Day } from "./../../models/day.class";
import { DatepickerWeekDays } from "../../models/datepicker-week-days.enum";
var CmxDatepickerComponent = /** @class */ (function () {
    function CmxDatepickerComponent(weekFirstDayProviderValue, tagsProviderValue, dateNames, isRTL) {
        this.weekFirstDayProviderValue = weekFirstDayProviderValue;
        this.tagsProviderValue = tagsProviderValue;
        this.dateNames = dateNames;
        this.dirAttr = "auto";
        this.singleDateSelection = false;
        this.select = new EventEmitter();
        this.cancel = new EventEmitter();
        this.dayClicked = new EventEmitter();
        this.action = "calendarView";
        this.weekdays = [];
        this.range = { min: undefined, max: undefined };
        this.numberOfClicks = 0;
        this.displayedDate = {};
        this.disableDone = true;
        this.yearsRange = [];
        this.weeks = [];
        this._labels = [];
        this.datesWithLabel = []; // optimization
        this.MIN_DATE = new Date(1990, 0, 1);
        this.MAX_DATE = new Date(2050, 11, 31);
        this._rtl = false;
        if (isRTL != undefined) {
            this.rtl = isRTL;
        }
        this.setToday();
    }
    Object.defineProperty(CmxDatepickerComponent.prototype, "labels", {
        get: function () {
            return this._labels;
        },
        set: function (labels) {
            var _this = this;
            if (labels && labels.length) {
                this._labels = labels;
                // flat optimization
                this.datesWithLabel = [];
                labels.forEach(function (label) {
                    label.dates.forEach(function (labelDate) {
                        _this.datesWithLabel.push({
                            color: label.cssColor,
                            date: labelDate,
                        });
                    });
                });
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CmxDatepickerComponent.prototype, "tags", {
        get: function () {
            return this._tags;
        },
        set: function ($value) {
            if ($value != undefined && $value instanceof DatepickerTags) {
                this._tags = $value;
                this.dateNames.months = $value.months;
                this.dateNames.monthsShort = $value.monthsShort;
                this.dateNames.daysShort = $value.daysShort;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CmxDatepickerComponent.prototype, "max", {
        get: function () {
            return this._max;
        },
        set: function ($value) {
            this._max = $value !== undefined ? $value : this.MAX_DATE;
            if (this.currentDate && this.range) {
                this.redrawCalendar();
            }
            this.updatePermissionsForMonthMoveButtons();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CmxDatepickerComponent.prototype, "min", {
        get: function () {
            return this._min;
        },
        set: function ($value) {
            this._min = $value !== undefined ? $value : this.MIN_DATE;
            if (this.currentDate && this.range) {
                this.redrawCalendar();
            }
            this.updatePermissionsForMonthMoveButtons();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CmxDatepickerComponent.prototype, "forbiddenWeekDays", {
        get: function () {
            return this._forbiddenWeekDays;
        },
        set: function ($value) {
            if ($value != undefined) {
                this._forbiddenWeekDays = $value;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CmxDatepickerComponent.prototype, "disabledDates", {
        get: function () {
            return this._disabledDates;
        },
        set: function ($value) {
            if ($value !== undefined) {
                this._disabledDates = $value;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CmxDatepickerComponent.prototype, "datepickerId", {
        get: function () {
            return this._datepickerId;
        },
        set: function (value) {
            if (value !== undefined) {
                this._datepickerId = value;
                this.componentID = this._datepickerId;
            }
            else {
                this.componentID = "";
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CmxDatepickerComponent.prototype, "startWeekWith", {
        get: function () {
            return this._startWeekWith;
        },
        set: function (value) {
            if (value !== undefined && value !== null) {
                this._startWeekWith = value;
                this.weekdays = this.dateNames.getWeekdays(value);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CmxDatepickerComponent.prototype, "value", {
        get: function () {
            return this._value;
        },
        set: function (dateValue) {
            if (dateValue) {
                this._value = dateValue;
                if (this._value.min && this._value.max) {
                    // a range was given
                    try {
                        var min = void 0;
                        var max = void 0;
                        min = this._value.min;
                        max = this._value.max;
                        this.currentDate = min;
                        this.calculateDays();
                        this.selectDate(this.findDay(min));
                        var aux = {
                            date: max,
                            disabled: false,
                            number: max.getDate(),
                            range: false,
                            selected: false,
                        };
                        this.selectDate(aux);
                    }
                    catch (exception) {
                        console.error("No valid date was given", exception);
                    }
                }
                else {
                    // single date
                    try {
                        var param = void 0;
                        param = this._value;
                        this.currentDate = param;
                        this.calculateDays();
                        this.selectDate(this.findDay(param));
                    }
                    catch (exception) {
                        console.error("No valid date was given", exception);
                    }
                }
            }
            else {
                this._value = undefined;
                this.reset();
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CmxDatepickerComponent.prototype, "rtl", {
        get: function () {
            return this._rtl;
        },
        set: function (value) {
            this._rtl = value;
            this.dirAttr = value ? "rtl" : "ltr";
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CmxDatepickerComponent.prototype, "currentDate", {
        get: function () {
            return this.displayedDate.date;
        },
        set: function (date) {
            if (!this.displayedDate) {
                this.displayedDate = {};
            }
            if (!date) {
                date = this.displayedDate.date || this.min || new Date();
            }
            this.displayedDate.date = date;
            this.displayedDate.monthName = this.dateNames.getMonthName(date.getMonth());
            this.displayedDate.fullYear = date.getFullYear();
            this.updatePermissionsForMonthMoveButtons();
        },
        enumerable: true,
        configurable: true
    });
    CmxDatepickerComponent.prototype.ngOnInit = function () {
        if (this.tagsProviderValue != undefined && this.tags == undefined) {
            try {
                var newTags = new DatepickerTags(this.tagsProviderValue.cancel, this.tagsProviderValue.apply);
                this.tags = newTags;
            }
            catch ($exception) {
                console.warn("DatepickerTags provider requires 'cancel' and 'apply' members");
            }
        }
        if (this.startWeekWith !== undefined) {
            this.weekdays = this.dateNames.getWeekdays(this.startWeekWith);
        }
        else if (this.weekFirstDayProviderValue !== undefined) {
            this.weekdays = this.dateNames.getWeekdays(this.weekFirstDayProviderValue);
        }
        if (this._min === undefined) {
            this.min = this.MIN_DATE;
        }
        if (this._max === undefined) {
            this.max = this.MAX_DATE;
        }
        if (this._value === undefined) {
            this.reset();
        }
    };
    CmxDatepickerComponent.prototype.reset = function () {
        this.currentDate = new Date();
        this.calculateDays();
        this.numberOfClicks = 0;
    };
    CmxDatepickerComponent.prototype.AfterViewInit = function () {
        this.calculateDays();
    };
    CmxDatepickerComponent.prototype.userSelectedSomething = function () {
        var answer = false;
        if (this.range.min && this.range.max) {
            answer = true;
        }
        else if (this.range.min) {
            answer = true;
        }
        return answer;
    };
    CmxDatepickerComponent.prototype.cancelSelection = function () {
        this.cancel.emit(undefined);
        this.reset();
    };
    CmxDatepickerComponent.prototype.applyClicked = function () {
        this.select.emit(this.setSelection());
        this.reset();
    };
    CmxDatepickerComponent.prototype.moveMonth = function (step) {
        var newCurrentDate = new Date(this.currentDate.valueOf());
        var newMonth = newCurrentDate.getMonth() + step;
        newCurrentDate.setMonth(newCurrentDate.getMonth() + step);
        /**
         * Check if month was set correctly.
         * If previous currentDate"s month has more days than new it"s necessary to set the last day of new month.
         */
        if (newCurrentDate.getMonth() !== newMonth) {
            newCurrentDate = new Date(this.currentDate.valueOf());
            newCurrentDate.setMonth(newCurrentDate.getMonth() + step + 1, 0);
        }
        this.currentDate = newCurrentDate;
        this.redrawCalendar();
    };
    CmxDatepickerComponent.prototype.monthToggle = function () {
        this.action = this.action === "monthView" ? "calendarView" : "monthView";
    };
    CmxDatepickerComponent.prototype.yearToggle = function () {
        this.action = this.action === "yearView" ? "calendarView" : "yearView";
    };
    CmxDatepickerComponent.prototype.updateCurrentMonth = function (monthEvent) {
        var newCurrentDate = new Date(this.currentDate.valueOf());
        newCurrentDate.setMonth(monthEvent, 1);
        this.currentDate = newCurrentDate;
        this.redrawCalendar();
        this.action = "calendarView";
    };
    CmxDatepickerComponent.prototype.updateCurrentYear = function (yearEvent) {
        var newCurrentDate = new Date(this.currentDate.valueOf());
        newCurrentDate.setFullYear(yearEvent);
        this.currentDate = newCurrentDate;
        this.redrawCalendar();
        this.action = "calendarView";
    };
    CmxDatepickerComponent.prototype.updateActionView = function (actionViewEvent) {
        this.action = actionViewEvent;
    };
    CmxDatepickerComponent.prototype.selectDate = function (day) {
        if (day && day.disabled === false) {
            this.numberOfClicks += 1;
            var date = new Date(day.date.getFullYear(), day.date.getMonth(), day.number);
            var endOfDayDate = new Date(date.getFullYear(), date.getMonth(), date.getDate(), 23, 59, 59);
            if (this.numberOfClicks === 1) {
                this.range.min = date;
                this.range.max = endOfDayDate;
                if (this.singleDateSelection) {
                    this.numberOfClicks = 0;
                }
            }
            else if (this.numberOfClicks === 2) {
                var dateTimestamp = date.getTime();
                var minDateTimestamp = this.range.min.getTime();
                if (dateTimestamp >= minDateTimestamp) {
                    this.range.max = endOfDayDate;
                }
                else {
                    this.range.max = this.range.min;
                    this.range.min = date;
                }
                this.numberOfClicks = 0;
            }
            this.dayClicked.emit(this.setSelection());
            this.styleDaysRangeSelection(this.range);
        }
    };
    CmxDatepickerComponent.prototype.getDateLabel = function (date) {
        var isSameDay = function (aDate, otherDate) {
            return (aDate.getFullYear() === otherDate.getFullYear() &&
                aDate.getMonth() === otherDate.getMonth() &&
                aDate.getDate() === otherDate.getDate());
        };
        return this.datesWithLabel.find(function (label) { return isSameDay(label.date, date); });
    };
    CmxDatepickerComponent.prototype.redrawCalendar = function () {
        this.setToday();
        this.calculateDays();
        this.styleDaysRangeSelection(this.range);
    };
    CmxDatepickerComponent.prototype.findDay = function (date) {
        var dayFound;
        this.weeks.forEach(function (week) {
            week.forEach(function (day) {
                if (day && day.date && day.number) {
                    if (day.date.getDate() === date.getDate() &&
                        day.date.getMonth() === date.getMonth() &&
                        day.date.getFullYear() === date.getFullYear()) {
                        dayFound = day;
                    }
                }
            });
        });
        return dayFound;
    };
    CmxDatepickerComponent.prototype.getFirstDay = function (month, year) {
        var dayOfWeek = new Date(year, month, 1).getDay();
        return dayOfWeek;
    };
    /**
     * @description Formats a date into a number for easier comparisons.
     * @param date A javascript date object
     * @return A number representing the date
     */
    CmxDatepickerComponent.prototype.getFormattedDate = function (date) {
        if (!date) {
            return;
        }
        var month = "" + (date.getMonth() + 1);
        var day = "" + date.getDate();
        var year = "" + date.getFullYear();
        if (month.length < 2) {
            month = "0" + month;
        }
        if (day.length < 2) {
            day = "0" + day;
        }
        return Number([year, month, day].join(""));
    };
    /**
     * @desscription Calcutates the number of days in a month and
     * creates an array to represent the distribution of the dates between the weeks.
     */
    CmxDatepickerComponent.prototype.calculateDays = function () {
        var _this = this;
        var currentMonth = this.currentDate.getMonth();
        var currentYear = this.currentDate.getFullYear();
        var minFormattedDate = this.getFormattedDate(this.min);
        var maxFormattedDate = this.getFormattedDate(this.max);
        var totalDays = new Date(currentYear, currentMonth + 1, 0).getDate(); // get the number of days in the month
        var dayCounter = 1;
        var daysInMonth = [];
        var firstDayOfWeekIndex; // get the day value of the first day of the week
        var _loop_1 = function () {
            var auxDate = new Date(currentYear, currentMonth, dayCounter);
            if (dayCounter === 1) {
                firstDayOfWeekIndex = auxDate.getDay();
            }
            var newDay = new Day(auxDate, dayCounter);
            // check if date should be disabled
            var formattedNewDayDate = this_1.getFormattedDate(newDay.date);
            if ((minFormattedDate !== null && formattedNewDayDate < minFormattedDate) ||
                (maxFormattedDate !== null && formattedNewDayDate > maxFormattedDate)) {
                newDay.disabled = true;
            }
            else if (this_1.forbiddenWeekDays !== undefined && this_1.forbiddenWeekDays.indexOf(newDay.date.getDay()) > -1) {
                newDay.disabled = true;
            }
            else if (this_1.disabledDates !== undefined) {
                this_1.disabledDates.forEach(function (disabledDate) {
                    var disabledFormattedDate = _this.getFormattedDate(disabledDate);
                    if (formattedNewDayDate === disabledFormattedDate) {
                        newDay.disabled = true;
                    }
                });
            }
            daysInMonth.push(newDay);
            dayCounter++;
        };
        var this_1 = this;
        while (dayCounter <= totalDays) {
            _loop_1();
        }
        var datepickerStartDay;
        if (this.startWeekWith !== undefined) {
            datepickerStartDay = this.startWeekWith;
        }
        else if (this.weekFirstDayProviderValue !== undefined) {
            datepickerStartDay = this.weekFirstDayProviderValue;
        }
        if (firstDayOfWeekIndex >= datepickerStartDay) {
            var indexOffset = firstDayOfWeekIndex - datepickerStartDay;
            var j = 0;
            while (j < indexOffset) {
                daysInMonth.unshift(undefined);
                j++;
            }
        }
        else {
            var indexOffset = 6 - (datepickerStartDay - 1) + firstDayOfWeekIndex;
            var j = 0;
            while (j < indexOffset) {
                daysInMonth.unshift(undefined);
                j++;
            }
        }
        // divide by weeks
        var weeks = [];
        var i = 0;
        while (i < daysInMonth.length) {
            var week = daysInMonth.slice(i, i + 7);
            weeks.push(week);
            i = i + 7;
        }
        // blank spaces in last week
        var lastWeekIndex = weeks.length - 1;
        var dayIndex = weeks[lastWeekIndex].length;
        while (dayIndex < 7) {
            weeks[lastWeekIndex].push(undefined);
            dayIndex++;
        }
        this.weeks = weeks;
    };
    CmxDatepickerComponent.prototype.setSelection = function () {
        if (this.range.min && this.range.max) {
            var isTodayFlag = false;
            var isRangeFlag = false;
            if (this.today.getDate() === this.range.min.getDate() &&
                this.today.getMonth() === this.range.min.getMonth() &&
                this.today.getFullYear() === this.range.min.getFullYear()) {
                isTodayFlag = true;
            }
            if (this.range.max.getDate() !== this.range.min.getDate() ||
                this.range.max.getMonth() !== this.range.min.getMonth() ||
                this.range.max.getFullYear() !== this.range.min.getFullYear()) {
                isRangeFlag = true;
            }
            return {
                isRange: isRangeFlag,
                isToday: isTodayFlag,
                value: this.range,
            };
        }
        else {
            return undefined;
        }
    };
    CmxDatepickerComponent.prototype.styleDaysRangeSelection = function (range) {
        if (range.min !== undefined && range.max !== undefined) {
            this.weeks.forEach(function (week) {
                week.forEach(function (day) {
                    if (day && day.number !== undefined) {
                        // it is not a blank space
                        if (day.number === range.min.getDate() &&
                            day.date.getMonth() === range.min.getMonth() &&
                            day.date.getFullYear() === range.min.getFullYear()) {
                            day.selected = true;
                            day.range = false;
                        }
                        else if (day.number === range.max.getDate() &&
                            day.date.getMonth() === range.max.getMonth() &&
                            day.date.getFullYear() === range.max.getFullYear()) {
                            day.selected = true;
                            day.range = false;
                        }
                        else if (day.date.getTime() > range.min.getTime() && day.date.getTime() < range.max.getTime()) {
                            day.selected = false;
                            day.range = true;
                        }
                        else {
                            day.selected = false;
                            day.range = false;
                        }
                    }
                });
            });
        }
    };
    CmxDatepickerComponent.prototype.updatePermissionsForMonthMoveButtons = function () {
        if (this.currentDate) {
            var date = this.currentDate;
            var firstSecondInCurrentMonth = new Date(date.getFullYear(), date.getMonth(), 1, 0, 0, 0);
            var lastSecondInCurrentMonth = new Date(date.getFullYear(), date.getMonth() + 1, 1, 0, 0, -1);
            this.displayedDate.canMoveToPreviousMonth = !this.min || this.min < firstSecondInCurrentMonth;
            this.displayedDate.canMoveToNextMonth = !this.max || this.max > lastSecondInCurrentMonth;
        }
    };
    CmxDatepickerComponent.prototype.setToday = function () {
        this.today = new Date();
        this.today.setHours(0, 0, 0, 0);
    };
    CmxDatepickerComponent.decorators = [
        { type: Component, args: [{
                    selector: "cmx-datepicker",
                    styles: ["\n    @import url(\"https://www.cemexgo.com/cdn/cmx-dls-icons.css\");\n\n    html {\n      font-family: sans-serif;\n      line-height: 1.15;\n      -ms-text-size-adjust: 100%;\n      -webkit-text-size-adjust: 100%;\n    }\n\n    body {\n      margin: 0;\n    }\n\n    footer,header {\n      display: block;\n    }\n\n    hr {\n      box-sizing: content-box;\n      height: 0;\n      overflow: visible;\n    }\n\n    a {\n      background-color: transparent;\n      -webkit-text-decoration-skip: objects;\n    }\n\n    a:active,a:hover {\n      outline-width: 0;\n    }\n\n    button,input,select {\n      font-family: sans-serif;\n      font-size: 100%;\n      line-height: 1.15;\n      margin: 0;\n    }\n\n    button,input {\n      overflow: visible;\n    }\n\n    button,select {\n      text-transform: none;\n    }\n\n    button,html [type=\"button\"],[type=\"reset\"],[type=\"submit\"] {\n      -webkit-appearance: button;\n    }\n\n    button::-moz-focus-inner,[type=\"button\"]::-moz-focus-inner,[type=\"reset\"]::-moz-focus-inner,[type=\"submit\"]::-moz-focus-inner {\n      border-style: none;\n      padding: 0;\n    }\n\n    button:-moz-focusring,[type=\"button\"]:-moz-focusring,[type=\"reset\"]:-moz-focusring,[type=\"submit\"]:-moz-focusring {\n      outline: 1px dotted ButtonText;\n    }\n\n    [type=\"checkbox\"],[type=\"radio\"] {\n      box-sizing: border-box;\n      padding: 0;\n    }\n\n    [type=\"number\"]::-webkit-inner-spin-button,[type=\"number\"]::-webkit-outer-spin-button {\n      height: auto;\n    }\n\n    [type=\"search\"] {\n      -webkit-appearance: textfield;\n      outline-offset: -2px;\n    }\n\n    [type=\"search\"]::-webkit-search-cancel-button,[type=\"search\"]::-webkit-search-decoration {\n      -webkit-appearance: none;\n    }\n\n    ::-webkit-file-upload-button {\n      -webkit-appearance: button;\n      font: inherit;\n    }\n\n    template {\n      display: none;\n    }\n\n    [hidden] {\n      display: none;\n    }\n\n    html {\n      box-sizing: border-box;\n    }\n\n    *,*::before,*::after {\n      box-sizing: inherit;\n    }\n\n    html {\n      -ms-overflow-style: scrollbar;\n      -webkit-tap-highlight-color: rgba(0,0,0,0);\n    }\n\n    body {\n      font-family: -apple-system,system-ui,BlinkMacSystemFont,\"Segoe UI\",Roboto,\"Helvetica Neue\",Arial,sans-serif;\n      font-size: 1rem;\n      font-weight: normal;\n      line-height: 1.5;\n      color: #292b2c;\n      background-color: #fff;\n    }\n\n    [tabindex=\"-1\"]:focus {\n      outline: none !important;\n    }\n\n    dd {\n      margin-bottom: 0;\n      margin-left: 0;\n    }\n\n    a {\n      color: #139DF2;\n      text-decoration: none;\n    }\n\n    a:focus,a:hover {\n      color: #277EAF;\n      text-decoration: underline;\n    }\n\n    a:not([href]):not([tabindex]) {\n      color: inherit;\n      text-decoration: none;\n    }\n\n    a:not([href]):not([tabindex]):focus,a:not([href]):not([tabindex]):hover {\n      color: inherit;\n      text-decoration: none;\n    }\n\n    a:not([href]):not([tabindex]):focus {\n      outline: 0;\n    }\n\n    [role=\"button\"] {\n      cursor: pointer;\n    }\n\n    a,button,[role=\"button\"],input,label,select {\n      touch-action: manipulation;\n    }\n\n    table {\n      border-collapse: collapse;\n      background-color: rgba(0,0,0,0);\n    }\n\n    th {\n      text-align: left;\n    }\n\n    label {\n      display: inline-block;\n      margin-bottom: .5rem;\n    }\n\n    button:focus {\n      outline: 1px dotted;\n      outline: 5px auto -webkit-focus-ring-color;\n    }\n\n    input,button,select {\n      line-height: inherit;\n    }\n\n    input[type=\"radio\"]:disabled,input[type=\"checkbox\"]:disabled {\n      cursor: not-allowed;\n    }\n\n    input[type=\"date\"],input[type=\"time\"],input[type=\"datetime-local\"],input[type=\"month\"] {\n      -webkit-appearance: listbox;\n    }\n\n    input[type=\"search\"] {\n      -webkit-appearance: none;\n    }\n\n    output {\n      display: inline-block;\n    }\n\n    [hidden] {\n      display: none !important;\n    }\n\n    .cmx-datepicker {\n      width: 320px;\n      min-height: 240px;\n      background: #fff;\n      border-radius: 2px;\n      font-weight: 700;\n      border-top: 3px solid #3FA9F5;\n      box-shadow: 0 5px 20px rgba(0,0,0,0.14);\n      padding: 8px;\n    }\n\n    .cmx-datepicker__header,.cmx-datepicker__body {\n      width: 100%;\n      text-align: center;\n    }\n\n    .cmx-datepicker__days-grid,.cmx-datepicker__months-grid,.cmx-datepicker__years-grid {\n      width: 100%;\n    }\n\n    .cmx-datepicker__days-grid-row,.cmx-datepicker__months-grid-row,.cmx-datepicker__years-grid-row {\n      display: flex;\n      padding: 4px 0;\n      height: 26px;\n      box-sizing: content-box;\n      width: 100%;\n    }\n\n    .cmx-datepicker__days-grid-cell,.cmx-datepicker__months-grid-cell,.cmx-datepicker__years-grid-cell {\n      display: block;\n      flex: 1 1 auto;\n      min-width: 36px;\n      width: 36px;\n      height: 26px;\n      font-size: 0.75rem;\n      padding: 0px;\n      text-align: center;\n      color: #001B3A;\n      text-transform: none;\n    }\n\n    .cmx-datepicker__days-grid .cmx-active-start,.cmx-datepicker__months-grid .cmx-active-start,.cmx-datepicker__years-grid .cmx-active-start {\n      background: rgba(63,169,245,0.2);\n    }\n\n    .cmx-datepicker__days-grid .cmx-active-start.first,.cmx-datepicker__months-grid .cmx-active-start.first,.cmx-datepicker__years-grid .cmx-active-start.first {\n      background: linear-gradient(to right, rgba(255,255,255,0) 0%, rgba(41,137,216,0) 50%, rgba(63,169,245,0.2) 51%, rgba(63,169,245,0.2) 100%);\n    }\n\n    .cmx-datepicker__days-grid .cmx-active-start.last,.cmx-datepicker__months-grid .cmx-active-start.last,.cmx-datepicker__years-grid .cmx-active-start.last {\n      background: linear-gradient(to left, rgba(255,255,255,0) 0%, rgba(41,137,216,0) 50%, rgba(63,169,245,0.2) 51%, rgba(63,169,245,0.2) 100%);\n    }\n\n    .cmx-datepicker__days-grid .cmx-active-end,.cmx-datepicker__months-grid .cmx-active-end,.cmx-datepicker__years-grid .cmx-active-end {\n      background: rgba(63,169,245,0.2);\n    }\n\n    .cmx-datepicker__days-grid .cmx-active-end.first,.cmx-datepicker__months-grid .cmx-active-end.first,.cmx-datepicker__years-grid .cmx-active-end.first {\n      background: linear-gradient(to right, rgba(255,255,255,0) 0%, rgba(41,137,216,0) 50%, rgba(63,169,245,0.2) 51%, rgba(63,169,245,0.2) 100%);\n    }\n\n    .cmx-datepicker__days-grid .cmx-active-end.last,.cmx-datepicker__months-grid .cmx-active-end.last,.cmx-datepicker__years-grid .cmx-active-end.last {\n      background: linear-gradient(to left, rgba(255,255,255,0) 0%, rgba(41,137,216,0) 50%, rgba(63,169,245,0.2) 51%, rgba(63,169,245,0.2) 100%);\n    }\n\n    .cmx-datepicker__days-grid .cmx-in-range,.cmx-datepicker__months-grid .cmx-in-range,.cmx-datepicker__years-grid .cmx-in-range {\n      background: rgba(63,169,245,0.2);\n    }\n\n    .cmx-datepicker__days-grid .cmx-end-range .cmx-datepicker__day,.cmx-datepicker__months-grid .cmx-end-range .cmx-datepicker__day,.cmx-datepicker__years-grid .cmx-end-range .cmx-datepicker__day,.cmx-datepicker__days-grid .cmx-end-range .cmx-datepicker__month,.cmx-datepicker__months-grid .cmx-end-range .cmx-datepicker__month,.cmx-datepicker__years-grid .cmx-end-range .cmx-datepicker__month,.cmx-datepicker__days-grid .cmx-end-range .cmx-datepicker__year,.cmx-datepicker__months-grid .cmx-end-range .cmx-datepicker__year,.cmx-datepicker__years-grid .cmx-end-range .cmx-datepicker__year {\n      border-radius: 50%;\n    }\n\n    .cmx-datepicker__days-grid .cmx-end-range.last,.cmx-datepicker__months-grid .cmx-end-range.last,.cmx-datepicker__years-grid .cmx-end-range.last {\n      background: linear-gradient(to left, rgba(255,255,255,0) 0%, rgba(41,137,216,0) 50%, rgba(63,169,245,0.2) 50.01%, rgba(63,169,245,0.2) 100%);\n    }\n\n    .cmx-datepicker__days-grid .cmx-end-range.last .cmx-datepicker__day,.cmx-datepicker__months-grid .cmx-end-range.last .cmx-datepicker__day,.cmx-datepicker__years-grid .cmx-end-range.last .cmx-datepicker__day,.cmx-datepicker__days-grid .cmx-end-range.last .cmx-datepicker__month,.cmx-datepicker__months-grid .cmx-end-range.last .cmx-datepicker__month,.cmx-datepicker__years-grid .cmx-end-range.last .cmx-datepicker__month,.cmx-datepicker__days-grid .cmx-end-range.last .cmx-datepicker__year,.cmx-datepicker__months-grid .cmx-end-range.last .cmx-datepicker__year,.cmx-datepicker__years-grid .cmx-end-range.last .cmx-datepicker__year {\n      background: linear-gradient(to right, rgba(63,169,245,0.2) 0%, rgba(63,169,245,0.2) 50%, rgba(63,169,245,0) 50.01%, rgba(63,169,245,0) 100%);\n    }\n\n    .cmx-datepicker__days-grid .cmx-end-range.first,.cmx-datepicker__months-grid .cmx-end-range.first,.cmx-datepicker__years-grid .cmx-end-range.first {\n      background: linear-gradient(to right, rgba(255,255,255,0) 0%, rgba(41,137,216,0) 50%, rgba(63,169,245,0.2) 50.01%, rgba(63,169,245,0.2) 100%);\n    }\n\n    .cmx-datepicker__days-grid .cmx-end-range.first .cmx-datepicker__day,.cmx-datepicker__months-grid .cmx-end-range.first .cmx-datepicker__day,.cmx-datepicker__years-grid .cmx-end-range.first .cmx-datepicker__day,.cmx-datepicker__days-grid .cmx-end-range.first .cmx-datepicker__month,.cmx-datepicker__months-grid .cmx-end-range.first .cmx-datepicker__month,.cmx-datepicker__years-grid .cmx-end-range.first .cmx-datepicker__month,.cmx-datepicker__days-grid .cmx-end-range.first .cmx-datepicker__year,.cmx-datepicker__months-grid .cmx-end-range.first .cmx-datepicker__year,.cmx-datepicker__years-grid .cmx-end-range.first .cmx-datepicker__year {\n      background: linear-gradient(to left, rgba(63,169,245,0.2) 0%, rgba(63,169,245,0.2) 50%, rgba(63,169,245,0) 50.01%, rgba(63,169,245,0) 100%);\n    }\n\n    .cmx-datepicker__day,.cmx-datepicker__month,.cmx-datepicker__year {\n      color: #001b3a;\n      display: inline-block;\n      width: 26px;\n      height: 26px;\n      line-height: 26px;\n      background: none;\n      padding: 0;\n      border: none;\n      font-family: 'Roboto', sans-serif;\n      cursor: pointer;\n      box-sizing: border-box;\n      font-weight: 700;\n    }\n\n    .cmx-datepicker__day--label {\n      height: 2px;\n      width: 14px;\n      background: #3fa9f5;\n      margin: auto;\n      position: relative;\n      bottom: 7px;\n    }\n\n    .cmx-datepicker__day.today,.today.cmx-datepicker__month,.today.cmx-datepicker__year {\n      border: solid 1px #81d4fa;\n      border-radius: 100%;\n    }\n\n    .cmx-datepicker__day:hover,.cmx-datepicker__month:hover,.cmx-datepicker__year:hover {\n      color: #3FA9F5;\n    }\n\n    .cmx-datepicker__day:focus,.cmx-datepicker__month:focus,.cmx-datepicker__year:focus {\n      outline: 0;\n    }\n\n    .cmx-datepicker__day.active,.active.cmx-datepicker__month,.active.cmx-datepicker__year {\n      outline: 0;\n      color: #fff;\n      background: #3FA9F5;\n      border: 1px solid #3FA9F5;\n      border-radius: 100%;\n    }\n\n    .cmx-datepicker__day:disabled,.cmx-datepicker__month:disabled,.cmx-datepicker__year:disabled,.cmx-datepicker__day.disabled,.disabled.cmx-datepicker__month,.disabled.cmx-datepicker__year,.cmx-datepicker__day[disabled='disabled'],.cmx-datepicker__month[disabled='disabled'],.cmx-datepicker__year[disabled='disabled'] {\n      color: #D6D6D6;\n      cursor: default;\n    }\n\n    .cmx-datepicker__day:disabled:hover,.cmx-datepicker__month:disabled:hover,.cmx-datepicker__year:disabled:hover,.cmx-datepicker__day.disabled:hover,.disabled.cmx-datepicker__month:hover,.disabled.cmx-datepicker__year:hover,.cmx-datepicker__day[disabled='disabled']:hover,.cmx-datepicker__month[disabled='disabled']:hover,.cmx-datepicker__year[disabled='disabled']:hover {\n      color: #D6D6D6;\n    }\n\n    .cmx-datepicker__header {\n      padding-bottom: 6px;\n      display: flex;\n      align-items: center;\n      font-size: 0.875rem;\n      color: #001B3A;\n      line-height: 0.875rem;\n    }\n\n    .cmx-datepicker__header>* {\n      flex: 1 1 auto;\n    }\n\n    .cmx-datepicker__header>*:first-child,.cmx-datepicker__header>*:last-child {\n      width: 12%;\n      flex: 0 0 auto;\n    }\n\n    .cmx-datepicker__header>*:first-child {\n      text-align: right;\n      margin: 0 0.5rem 0 0;\n    }\n\n    .cmx-datepicker__header>*:last-child {\n      text-align: left;\n      margin: 0 0 0 0.5rem;\n    }\n\n    .cmx-datepicker__body {\n      text-transform: uppercase;\n    }\n\n    .cmx-datepicker__labels {\n      padding: 16px 12px;\n    }\n\n    .cmx-datepicker__labels--container {\n      width: 100%;\n      height: 40px;\n      border-radius: 4px;\n      background-color: #f5f5f5;\n      display: flex;\n      align-items: center;\n      justify-content: space-around;\n    }\n\n    .cmx-datepicker__labels__item {\n      color: #666666;\n      font-family: Roboto;\n      font-size: 10px;\n      font-weight: 500;\n      line-height: 11px;\n    }\n\n    .cmx-datepicker__labels__color-block {\n      height: 2px;\n      width: 16px;\n      background: #3FA9F5;\n      display: inline-block;\n      vertical-align: middle;\n      position: relative;\n      right: 8px;\n      top: 1px;\n    }\n\n    .cmx-datepicker__footer {\n      text-align: right;\n      margin-bottom: 10px;\n      margin-right: 10px;\n    }\n\n    .cmx-datepicker__cta {\n      display: flex;\n      justify-content: flex-end;\n      align-items: center;\n    }\n\n    .cmx-datepicker__cta .cmx-button {\n      margin-right: 1.25rem;\n    }\n\n    .cmx-datepicker__cta .cmx-button:last-child {\n      margin-right: 0;\n    }\n\n    [dir='rtl'] .cmx-datepicker__days-grid .cmx-active-start.first,[dir='rtl'] .cmx-datepicker__months-grid .cmx-active-start.first,[dir='rtl'] .cmx-datepicker__years-grid .cmx-active-start.first {\n      background: linear-gradient(to left, rgba(255,255,255,0) 0%, rgba(41,137,216,0) 50%, rgba(63,169,245,0.2) 51%, rgba(63,169,245,0.2) 100%);\n    }\n\n    [dir='rtl'] .cmx-datepicker__days-grid .cmx-active-start.last,[dir='rtl'] .cmx-datepicker__months-grid .cmx-active-start.last,[dir='rtl'] .cmx-datepicker__years-grid .cmx-active-start.last {\n      background: linear-gradient(to right, rgba(255,255,255,0) 0%, rgba(41,137,216,0) 50%, rgba(63,169,245,0.2) 51%, rgba(63,169,245,0.2) 100%);\n    }\n\n    [dir='rtl'] .cmx-datepicker__days-grid .cmx-active-end.first,[dir='rtl'] .cmx-datepicker__months-grid .cmx-active-end.first,[dir='rtl'] .cmx-datepicker__years-grid .cmx-active-end.first {\n      background: linear-gradient(to left, rgba(255,255,255,0) 0%, rgba(41,137,216,0) 50%, rgba(63,169,245,0.2) 51%, rgba(63,169,245,0.2) 100%);\n    }\n\n    [dir='rtl'] .cmx-datepicker__days-grid .cmx-active-end.last,[dir='rtl'] .cmx-datepicker__months-grid .cmx-active-end.last,[dir='rtl'] .cmx-datepicker__years-grid .cmx-active-end.last {\n      background: linear-gradient(to right, rgba(255,255,255,0) 0%, rgba(41,137,216,0) 50%, rgba(63,169,245,0.2) 51%, rgba(63,169,245,0.2) 100%);\n    }\n\n    [dir='rtl'] .cmx-datepicker__days-grid .cmx-end-range.last,[dir='rtl'] .cmx-datepicker__months-grid .cmx-end-range.last,[dir='rtl'] .cmx-datepicker__years-grid .cmx-end-range.last {\n      background: linear-gradient(to right, rgba(255,255,255,0) 0%, rgba(41,137,216,0) 50%, rgba(63,169,245,0.2) 50.01%, rgba(63,169,245,0.2) 100%);\n    }\n\n    [dir='rtl'] .cmx-datepicker__days-grid .cmx-end-range.last .cmx-datepicker__day,[dir='rtl'] .cmx-datepicker__months-grid .cmx-end-range.last .cmx-datepicker__day,[dir='rtl'] .cmx-datepicker__years-grid .cmx-end-range.last .cmx-datepicker__day,[dir='rtl'] .cmx-datepicker__days-grid .cmx-end-range.last .cmx-datepicker__month,[dir='rtl'] .cmx-datepicker__months-grid .cmx-end-range.last .cmx-datepicker__month,[dir='rtl'] .cmx-datepicker__years-grid .cmx-end-range.last .cmx-datepicker__month,[dir='rtl'] .cmx-datepicker__days-grid .cmx-end-range.last .cmx-datepicker__year,[dir='rtl'] .cmx-datepicker__months-grid .cmx-end-range.last .cmx-datepicker__year,[dir='rtl'] .cmx-datepicker__years-grid .cmx-end-range.last .cmx-datepicker__year {\n      background: linear-gradient(to left, rgba(255,255,255,0) 0%, rgba(41,137,216,0) 50%, rgba(63,169,245,0.2) 50.01%, rgba(63,169,245,0.2) 100%);\n    }\n\n    [dir='rtl'] .cmx-datepicker__days-grid .cmx-end-range.first,[dir='rtl'] .cmx-datepicker__months-grid .cmx-end-range.first,[dir='rtl'] .cmx-datepicker__years-grid .cmx-end-range.first {\n      background: linear-gradient(to left, rgba(255,255,255,0) 0%, rgba(41,137,216,0) 50%, rgba(63,169,245,0.2) 50.01%, rgba(63,169,245,0.2) 100%);\n    }\n\n    [dir='rtl'] .cmx-datepicker__days-grid .cmx-end-range.first .cmx-datepicker__day,[dir='rtl'] .cmx-datepicker__months-grid .cmx-end-range.first .cmx-datepicker__day,[dir='rtl'] .cmx-datepicker__years-grid .cmx-end-range.first .cmx-datepicker__day,[dir='rtl'] .cmx-datepicker__days-grid .cmx-end-range.first .cmx-datepicker__month,[dir='rtl'] .cmx-datepicker__months-grid .cmx-end-range.first .cmx-datepicker__month,[dir='rtl'] .cmx-datepicker__years-grid .cmx-end-range.first .cmx-datepicker__month,[dir='rtl'] .cmx-datepicker__days-grid .cmx-end-range.first .cmx-datepicker__year,[dir='rtl'] .cmx-datepicker__months-grid .cmx-end-range.first .cmx-datepicker__year,[dir='rtl'] .cmx-datepicker__years-grid .cmx-end-range.first .cmx-datepicker__year {\n      background: linear-gradient(to right, rgba(255,255,255,0) 0%, rgba(41,137,216,0) 50%, rgba(63,169,245,0.2) 50.01%, rgba(63,169,245,0.2) 100%);\n    }\n\n    [dir='rtl'] .cmx-datepicker__header>*:first-child {\n      text-align: left;\n      margin: 0 0 0 0.5rem;\n    }\n\n    [dir='rtl'] .cmx-datepicker__header>*:last-child {\n      text-align: right;\n      margin: 0 0.5rem 0 0;\n    }\n\n    [dir='rtl'] .cmx-datepicker__footer {\n      text-align: left;\n      margin-left: 10px;\n      margin-right: 0;\n    }\n\n    [dir='rtl'] .cmx-datepicker__cta .cmx-button {\n      margin-left: 1.25rem;\n      margin-right: 0;\n    }\n\n    [dir='rtl'] .cmx-datepicker__cta .cmx-button:last-child {\n      margin-left: 0;\n    }\n\n    .cmx-datepicker__months-grid-cell,.cmx-datepicker__years-grid-cell {\n      white-space: nowrap;\n    }\n\n    .cmx-datepicker__month,.cmx-datepicker__year {\n      text-transform: uppercase;\n    }\n\n    .cmx-datepicker__month.cmx-active-date,.cmx-datepicker__year.cmx-active-date {\n      width: 100%;\n      color: #fff;\n      background: #3FA9F5;\n      border: 1px solid #3FA9F5;\n      border-radius: 2px;\n    }\n\n    .cmx-datepicker__current-period button {\n      padding: 0 0.1rem;\n    }\n\n    .cmx-datepicker .cmx-datepicker__days-grid-cell.cmx-active-start.first.cmx-active-end.last,.cmx-datepicker .cmx-active-start.first.cmx-active-end.last.cmx-datepicker__months-grid-cell,.cmx-datepicker .cmx-active-start.first.cmx-active-end.last.cmx-datepicker__years-grid-cell {\n      background: rgba(0,0,0,0);\n    }\n  "],
                    template: "\n    <ng-container [ngSwitch]=\"action\">\n        <ng-container *ngSwitchCase=\"'monthView'\">\n            <month-selector\n                [currentDate]=\"currentDate\" [min]=\"min\" [max]=\"max\" (selectedMonth)=\"updateCurrentMonth($event)\" (selectedYear)=\"updateCurrentYear($event)\" (actionView)=\"updateActionView($event)\">\n            </month-selector>\n        </ng-container>\n        <ng-container *ngSwitchCase=\"'yearView'\">\n            <year-selector\n                [currentDate]=\"currentDate\" [min]=\"min\" [max]=\"max\" (selectedYear)=\"updateCurrentYear($event)\" (actionView)=\"updateActionView($event)\">\n            </year-selector>\n        </ng-container>\n        <ng-container *ngSwitchCase=\"'calendarView'\">\n            <div class=\"cmx-datepicker\" [dir]=\"rtl ? 'rtl': 'ltr'\">\n                <div class=\"cmx-datepicker__header\">\n                    <button cmx-link-icon srText=\"Previous Month\" [disabled]=\"!displayedDate.canMoveToPreviousMonth\" (click)=\"moveMonth(-1)\">\n                        <span class=\"cmx-icon-straight-arrow-left\" aria-hidden=\"true\"></span>\n                    </button>\n                    <div class=\"cmx-datepicker__current-period\">\n                        <button cmx-link (click)=\"monthToggle()\">\n                            {{ displayedDate.monthName }}\n                        </button>\n                        <button cmx-link (click)=\"yearToggle()\">\n                            {{ displayedDate.fullYear }}\n                        </button>\n                    </div>\n                    <button cmx-link-icon srText=\"Next Month\" [disabled]=\"!displayedDate.canMoveToNextMonth\" (click)=\"moveMonth(1)\">\n                        <span class=\"cmx-icon-straight-arrow-right\" aria-hidden=\"true\"></span>\n                    </button>\n                </div>\n                <!-- end .datepicker-header -->\n                <div class=\"cmx-datepicker__body\">\n                    <table class=\"cmx-datepicker__days-grid\">\n                        <thead>\n                            <tr class=\"cmx-datepicker__days-grid-row\">\n                                <ng-container *ngFor=\"let day of weekdays\">\n                                    <td class=\"cmx-datepicker__days-grid-cell\">\n                                        {{ day }}\n                                    </td>\n                                </ng-container>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <ng-container *ngFor=\"let week of weeks\">\n                                <tr class=\"cmx-datepicker__days-grid-row\">\n                                    <ng-container *ngFor=\"let day of week\">\n                                        <ng-container *ngIf=\"day !== undefined; else ghostCell\">\n                                            <td class=\"cmx-datepicker__days-grid-cell\"\n                                            [class.cmx-in-range]=\"day.range\"\n                                            [class.cmx-active-start]=\"day.selected === true && range.min && day.number === range.min.getDate()\n                                            && day.date.getMonth() === range.min.getMonth() && numberOfClicks === 0 && range.min.getTime() !== range.max.getTime() && singleDateSelection === false\"\n                                            [class.first]=\"day.selected === true && range.min && day.number === range.min.getDate()\n                                            && day.date.getMonth() === range.min.getMonth() && numberOfClicks === 0 && range.min.getTime() !== range.max.getTime() && singleDateSelection === false\"\n                                            [class.cmx-active-end]=\"day.selected === true && range.max && day.number === range.max.getDate()\n                                            && day.date.getMonth() === range.max.getMonth() && numberOfClicks === 0 && range.min.getTime() !== range.max.getTime() && singleDateSelection === false\"\n                                            [class.last]=\"day.selected === true && range.max && day.number === range.max.getDate()\n                                            && day.date.getMonth() === range.max.getMonth() && numberOfClicks === 0 && range.min.getTime() !== range.max.getTime() && singleDateSelection === false\">\n                                                <button class=\"cmx-datepicker__day\"\n                                                (click)=\"selectDate(day)\" [class.disabled]=\"day.disabled\" [class.active]=\"day.selected\"\n                                                [class.today]=\"day.date.getMonth() === today.getMonth() && day.date.getDate() === today.getDate() && day.date.getFullYear() === today.getFullYear()\">\n                                                    {{ day.number }}\n                                                    <div *ngIf=\"getDateLabel(day.date)\" class=\"cmx-datepicker__day--label\" [ngStyle]=\"{'background': getDateLabel(day.date).color}\"></div>\n                                                </button>\n                                            </td>\n                                        </ng-container>\n                                        <ng-template #ghostCell>\n                                            <td class=\"cmx-datepicker__days-grid-cell\"></td>\n                                        </ng-template>\n                                    </ng-container>\n                                </tr>\n                            </ng-container>\n                        </tbody>\n                    </table>\n                </div>\n                <div *ngIf=\"labels && labels.length\" class=\"cmx-datepicker__labels\">\n                  <div class=\"cmx-datepicker__labels--container\">\n                    <div *ngFor=\"let label of labels\">\n                        <span class=\"cmx-datepicker__labels__color-block\" [ngStyle]=\"{'background': label.cssColor}\"></span>\n                        <span class=\"cmx-datepicker__labels__item\">{{ label.name }}</span>\n                    </div>\n                  </div>\n                </div>\n                <!-- end .cmx-datepicker__body -->\n                <div class=\"cmx-datepicker__footer\">\n                    <div class=\"cmx-datepicker__cta\">\n                        <button cmx-link class=\"cmx-cancel-button\" data-tid=\"datepicker-cancel-button\" (click)=\"cancelSelection()\">\n                            {{ tags.cancel }}\n                        </button>\n                        <button cmx-button class=\"cmx-apply-button\" data-tid=\"datepicker-apply-button\" [disabled]=\"!userSelectedSomething()\" (click)=\"applyClicked()\">\n                            {{ tags.apply }}\n                        </button>\n                    </div>\n                    <!-- end cmx-datepicker__cta -->\n                </div>\n                <!-- end .cmx-datepicker__footer -->\n            </div>\n        </ng-container>\n    </ng-container>\n  ",
                },] },
    ];
    /** @nocollapse */
    CmxDatepickerComponent.ctorParameters = function () { return [
        { type: DatepickerWeekDays, decorators: [{ type: Optional }, { type: Inject, args: ["CMX_DATEPICKER_WEEK_FIRST_DAY",] },] },
        { type: DatepickerTags, decorators: [{ type: Optional }, { type: Inject, args: ["CMX_DATEPICKER_TAGS",] },] },
        { type: DateNamesService, },
        { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: ["RTL",] },] },
    ]; };
    CmxDatepickerComponent.propDecorators = {
        'dirAttr': [{ type: HostBinding, args: ["attr.dir",] },],
        'labels': [{ type: Input },],
        'tags': [{ type: Input },],
        'max': [{ type: Input },],
        'min': [{ type: Input },],
        'forbiddenWeekDays': [{ type: Input },],
        'disabledDates': [{ type: Input },],
        'singleDateSelection': [{ type: Input },],
        'datepickerId': [{ type: Input },],
        'startWeekWith': [{ type: Input },],
        'value': [{ type: Input },],
        'rtl': [{ type: Input },],
        'select': [{ type: Output },],
        'cancel': [{ type: Output },],
        'dayClicked': [{ type: Output },],
        'componentID': [{ type: HostBinding, args: ["id",] },],
    };
    return CmxDatepickerComponent;
}());
export { CmxDatepickerComponent };
//# sourceMappingURL=cmx-datepicker.component.js.map