{"version":3,"file":"cemex-cmx-flugee-v7.js.map","sources":["ng://@cemex/cmx-flugee-v7/lib/services/flugee.service.ts","ng://@cemex/cmx-flugee-v7/lib/flugee.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable()\nexport class CmxFlugeeService {\n\n  languages: any = {\n    'ar': 'rtl',\n    'de': 'ltr',\n    'en': 'ltr',\n    'es': 'ltr',\n    'fr': 'ltr',\n    'he': 'rtl',\n    'pl': 'ltr',\n  };\n\n  /**\n   * A hot observable that supplies any changes to the script direction.\n   * Using the \"replace-Observable-with-$\" convention.\n   * type {}\n   */\n  public direction$: BehaviorSubject<string> = new BehaviorSubject('');\n  public language = 'en';\n  constructor(\n\n  ) {\n    this.getDirectionFor(this.language);\n  }\n\n  /**\n   * Get the direction for a given script based on language-code, and store the choice\n   * of language as a side-effect.\n   * param {string} languageCode an ISO 639-1 standard language-code\n   */\n  getDirectionFor(languageCode: string) {\n    try {\n      this.language = languageCode;\n      // We shouldn't need the national variation of the language to get its script.\n      let baseLanguage = languageCode.split(/[-_]/)[0];\n      if (!this.languages[baseLanguage]) {\n        // The language isn't in the list.\n        console.warn(`Language '${languageCode}' is not in the list.  Defaulting to 'ltr'`);\n        // It's a language with a ltr script and used internationally.\n        baseLanguage = 'en';\n      }\n      this.direction$.next(this.languages[baseLanguage]);\n    } catch (e) {\n      /*\n       * In case of error, bet on the fact that most languages are written left-to-right.\n       * (The most widely used RTL scripts are Arabic script, Hebrew script, and the\n       * written form of some African languages like Fula).\n       */\n      console.warn(e);\n      this.direction$.next('ltr');\n    }\n  }\n\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n// SERVICES\nimport { CmxFlugeeService } from './services/flugee.service';\n\n@NgModule({\n  imports: [ CommonModule ],\n  providers: [ CmxFlugeeService ],\n})\nexport class CmxFlugeeModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: CmxFlugeeModule,\n      providers: [\n        CmxFlugeeService,\n      ],\n    };\n  }\n}\n"],"names":[],"mappings":";;;;;;;;AAAA;IAuBE;QAjBA,cAAS,GAAQ;YACf,IAAI,EAAE,KAAK;YACX,IAAI,EAAE,KAAK;YACX,IAAI,EAAE,KAAK;YACX,IAAI,EAAE,KAAK;YACX,IAAI,EAAE,KAAK;YACX,IAAI,EAAE,KAAK;YACX,IAAI,EAAE,KAAK;SACZ,CAAC;;;;;;QAOK,eAAU,GAA4B,IAAI,eAAe,CAAC,EAAE,CAAC,CAAC;QAC9D,aAAQ,GAAG,IAAI,CAAC;QAIrB,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KACrC;;;;;;;;;;;;;IAOD,0CAAe;;;;;;;IAAf,UAAgB,YAAoB;QAClC,IAAI;YACF,IAAI,CAAC,QAAQ,GAAG,YAAY,CAAC;;;gBAEzB,YAAY,GAAG,YAAY,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;YAChD,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,EAAE;;gBAEjC,OAAO,CAAC,IAAI,CAAC,eAAa,YAAY,+CAA4C,CAAC,CAAC;;gBAEpF,YAAY,GAAG,IAAI,CAAC;aACrB;YACD,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC,CAAC;SACpD;QAAC,OAAO,CAAC,EAAE;;;;;;YAMV,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YAChB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SAC7B;KACF;;gBApDF,UAAU;;;;IAsDX,uBAAC;CAtDD;;;;;;ACHA;IAMA;KAaC;;;;IARQ,uBAAO;;;IAAd;QACE,OAAO;YACL,QAAQ,EAAE,eAAe;YACzB,SAAS,EAAE;gBACT,gBAAgB;aACjB;SACF,CAAC;KACH;;gBAZF,QAAQ,SAAC;oBACR,OAAO,EAAE,CAAE,YAAY,CAAE;oBACzB,SAAS,EAAE,CAAE,gBAAgB,CAAE;iBAChC;;IAUD,sBAAC;CAbD;;;;;;;;;;;;;;"}
