function startApp() {
  cy.clearCookies()
  cy.clearLocalStorage()
  cy.window().then((win) => {
    win.sessionStorage.clear()
  })
  cy.visit('http://localhost:8000//')
}

context('Text Input', function () {
  before(function () {
    startApp()
  })

  it('should change the text input label', function () {

    cy.get('#configuration__form-field-title').clear()

    cy.get('#configuration__form-field-title').type('Example')

    cy.get('#formFieldId > label ').should('contain', 'Example')
  })

  it('should change the textarea label', function () {

    cy.get('#configuration__form-field-textarea-title').clear()

    cy.get('#configuration__form-field-textarea-title').type('Text area example title')

    cy.get('#cmxformFieldTextAreaTitle > label ').should('contain', 'Text area example title')
  })

  // TODO:
  // it('should show error on invalid input', function () {

  // })
})

context('Number Input', function () {
  before(function () {
    startApp()
  })

  it('should increase the number by one unit', function () {
    cy.get('#configuration__number-input').clear()

    cy.get('#configuration__number-input').type('11')

    cy.get('#cmxNumberInput1 > .cmx-number-field-wrapper > .cmx-plus-btn > .cmx-number-field-btn__btn ').click()

    cy.get('#cmxNumberInput1 input').should('have.value', '12.00')

    cy.get('#cmxNumberInput1 > .cmx-number-field-wrapper > .cmx-plus-btn > .cmx-number-field-btn__btn ').click()

    cy.get('#cmxNumberInput1 input').should('have.value', '13.00')
  })

  it('should decrease the number by one unit', function () {
    cy.get('#configuration__number-input').clear()

    cy.get('#configuration__number-input').type('11')

    cy.get('#cmxNumberInput1 > .cmx-number-field-wrapper > .cmx-minus-btn > .cmx-number-field-btn__btn ').click()

    cy.get('#cmxNumberInput1 input').should('have.value', '10.00')

    cy.get('#cmxNumberInput1 > .cmx-number-field-wrapper > .cmx-minus-btn > .cmx-number-field-btn__btn ').click()

    cy.get('#cmxNumberInput1 input').should('have.value', '9.00')
  })

  it('should increase the number by the specified steps', function () {
    cy.get('#configuration__number-input-step').clear()
    cy.get('#configuration__number-input-step').type('2')

    cy.get('#configuration__number-input-2').clear()
    cy.get('#configuration__number-input-2').type('5')

    cy.get('#cmxNumberInput2 > .cmx-number-field-wrapper > .cmx-plus-btn > .cmx-number-field-btn__btn ').click()

    cy.get('#cmxNumberInput2 input').should('have.value', '7.00')

    cy.get('#cmxNumberInput2 > .cmx-number-field-wrapper > .cmx-plus-btn > .cmx-number-field-btn__btn ').click()

    cy.get('#cmxNumberInput2 input').should('have.value', '9.00')
  })

  it('should display suffix', function () {
    cy.get('#number-input-suffix input').should('have.value', '9.00 mm')
  })
  
  it('should hide controls', function () {
    cy.get('#number-input-hidden-controls button').should('not.exist');
  })

  it('should display placeholder', function () {
    cy.get('#number-input-placeholder input').then(elem => {
      expect(elem[0].placeholder).to.equal('Placeholder');
    })
  })

  it('should decrease the number by the specified steps', function () {
    cy.get('#configuration__number-input-step').clear()
    cy.get('#configuration__number-input-step').type('2')

    cy.get('#configuration__number-input-2').clear()
    cy.get('#configuration__number-input-2').type('5')

    cy.get('#cmxNumberInput2 > .cmx-number-field-wrapper > .cmx-minus-btn > .cmx-number-field-btn__btn ').click()

    cy.get('#cmxNumberInput2 input').should('have.value', '3.00')

    cy.get('#cmxNumberInput2 > .cmx-number-field-wrapper > .cmx-minus-btn > .cmx-number-field-btn__btn ').click()

    cy.get('#cmxNumberInput2 input').should('have.value', '1.00')
  })

  it('should stop at minimun value', function () {
    cy.get('#configuration__number-input-step').clear()
    cy.get('#configuration__number-input-step').type('1')

    cy.get('#configuration__number-input-2').clear()
    cy.get('#configuration__number-input-2').type('2')

    cy.get('#cmxNumberInput2 > .cmx-number-field-wrapper > .cmx-minus-btn > .cmx-number-field-btn__btn ').click()

    cy.get('#cmxNumberInput2 input').should('have.value', '1.00')

    cy.get('#cmxNumberInput2 > .cmx-number-field-wrapper > .cmx-minus-btn > .cmx-number-field-btn__btn ').click()

    cy.get('#cmxNumberInput2 input').should('have.value', '0.00')

    cy.get('#cmxNumberInput2 > .cmx-number-field-wrapper > .cmx-minus-btn > .cmx-number-field-btn__btn ').click()

    cy.get('#cmxNumberInput2 input').should('have.value', '0.00')

    cy.get('#configuration__number-input-step').clear()
    cy.get('#configuration__number-input-step').type('5')

    cy.get('#cmxNumberInput2 > .cmx-number-field-wrapper > .cmx-minus-btn > .cmx-number-field-btn__btn ').click()

    cy.get('#cmxNumberInput2 input').should('have.value', '0.00')
  })

  it('validate custom number input interactions', function () {
    cy.get('#numberInputSeperator > div input').should('have.value', '100,000.00')
    cy.get('#configuration__number-input-double-amount').click({ force: true })
    cy.get('#numberInputSeperator > div input').should('have.value', '200,000.00')
    cy.get('#numberInputSeperator > div span.cmx-number-field-btn.cmx-plus-btn.ripple > button').click({ force: true })
    cy.get('#numberInputSeperator > div input').should('have.value', '200,001.00')
    cy.get('#numberInputSeperator > div span.cmx-number-field-btn.cmx-plus-btn.ripple > button').click({ force: true })
    cy.get('#numberInputSeperator > div input').should('have.value', '200,002.00')
    cy.get('#numberInputSeperator > div span.cmx-number-field-btn.cmx-minus-btn.ripple > button').click({ force: true })
    cy.get('#numberInputSeperator > div input').should('have.value', '200,001.00')
  })

  it('should stop the user from entering invalid input', function(){
    cy.get('#numberInputSeperatorWith0 input').should('have.value', '1,44')
    cy.get('#numberInputSeperatorWith0 input').type('0')
    cy.get('#numberInputSeperatorWith0 input').should('have.value', '0')
    cy.get('#numberInputSeperatorWith0 input').type('0.00')
    cy.get('#numberInputSeperatorWith0 input').should('have.value', '0')
    cy.get('#numberInputSeperatorWith0 input').type('1,44')
    cy.get('#numberInputSeperatorWith0 input').should('have.value', '1,44')
    cy.get('#numberInputSeperatorWith0 input').type('a')
    cy.get('#numberInputSeperatorWith0 input').should('have.value', '1,44')
  })
})

context('Datepicker input', function () {
  before(function () {
    startApp()
  })

  it('Should be toggleable', function () {
    cy.get('#cmxDatepickerInput1').click()

    cy.get('#cmxDatepickerInput1 .datepicker-positioner .cmx-datepicker').should('be.visible')

    cy.get('#cmxDatepickerInput1 .cmx-cancel-button').click()

    cy.get('#cmxDatepickerInput1 .datepicker-positioner .cmx-datepicker').should('not.be.visible')
  })

  it('Should click outside to close the calendar', function () {
    cy.get('#cmxDatepickerInput1').click()

    cy.get('#cmxDatepickerInput1 .datepicker-positioner .cmx-datepicker').should('be.visible')

    cy.get('#cmxDatepickerInput1 .datepicker-mask').should('be.visible')

    cy.get('#cmxDatepickerInput1 .datepicker-mask').click()

    cy.get('#cmxDatepickerInput1 .datepicker-positioner .cmx-datepicker').should('not.be.visible')

    // TODO: Get position, send a click outside of its position
  })

  it('Should apply the selected date', function () {
    cy.get('#configuration__datepicker-value').clear()
    cy.get('#configuration__datepicker-value').type('04/01/2010')
    cy.get('#configuration__datepicker-set-value').click()

    cy.get('#date-picker-input1').click()

    cy.get('#date-picker-input1 .datepicker-positioner .cmx-datepicker').should('be.visible')

    cy.get('#date-picker-input1 .cmx-datepicker__header button').first().click()
    cy.get('#date-picker-input1 .cmx-datepicker__day').contains('6').click()

    cy.get('#date-picker-input1 .cmx-apply-button').click()

    cy.get('#date-picker-input1 input').should('have.attr', 'placeholder', 'Mar 6, 2010')

    cy.get('#date-picker-input1').click()

    cy.get('.cmx-datepicker__day.active').contains('6')

    cy.get('#date-picker-input1 .cmx-apply-button').click()
  })

  it('Should not modify the selected date if the action is cancelled', function () {
    cy.get('#configuration__datepicker-value').clear()
    cy.get('#configuration__datepicker-value').type('01/01/2010')
    cy.get('#configuration__datepicker-set-value').click()

    cy.get('#date-picker-input1 input').should('have.attr', 'placeholder', 'Jan 1, 2010')

    cy.get('#date-picker-input1').click()

    cy.get('#date-picker-input1 .datepicker-positioner .cmx-datepicker').should('be.visible')

    cy.get('#date-picker-input1 .cmx-datepicker__header button').first().click()
    cy.get('#date-picker-input1 .cmx-datepicker__day').contains('6').click()

    cy.get('#date-picker-input1 .cmx-cancel-button').click()

    cy.get('#date-picker-input1 input').should('have.attr', 'placeholder', 'Jan 1, 2010')

    cy.get('#date-picker-input1').click()

    cy.get('.cmx-datepicker__day.active').contains('1')

    cy.get('#date-picker-input1 .cmx-apply-button').click()
  })

  it('Should change Apply and Cancel button tags', function () {
    cy.get('#cmxDatepickerInput1').click()
    cy.get('#cmxDatepickerInput1 .cmx-apply-button').should('contain', 'Apply')
    cy.get('#cmxDatepickerInput1 .cmx-cancel-button').should('contain', 'Cancel')
    cy.get('#cmxDatepickerInput1 .cmx-cancel-button').click()

    cy.get('#configuration__tag-ok').clear()
    cy.get('#configuration__tag-ok').type('Good')
    cy.get('#configuration__tag-cancel').clear()
    cy.get('#configuration__tag-cancel').type('Bad')

    cy.get('#cmxDatepickerInput1').click()
    cy.get('#cmxDatepickerInput1 .cmx-apply-button').should('contain', 'Good')
    cy.get('#cmxDatepickerInput1 .cmx-cancel-button').should('contain', 'Bad')
    cy.get('#cmxDatepickerInput1 .cmx-cancel-button').click()

    cy.get('#configuration__tag-ok').clear()
    cy.get('#configuration__tag-cancel').clear()
  })

  it('Should RTL calendar be aligned to the left', function () {
    // DCM020CX1117-23
    cy.get('#cmxDatePickerInput2').click().then(val => {
      expect(Cypress.$('.datepicker-positioner')[0].getBoundingClientRect().left).equals(0)
    })

    cy.get('#cmxDatePickerInput2 .cmx-cancel-button').click()
  })

  it('Should have a translated date for placeholder', function () {
    cy.get('#cmxDatePickerInput3 > input').should('have.attr', 'placeholder', 'max 4 2017')

    cy.get('#cmxDatePickerInput3').click()

    cy.get('#cmxDatePickerInput3 .cmx-datepicker__current-period button').first().click()

    cy.get('#cmxDatePickerInput3 cmx-datepicker > month-selector table tr > td > button ').first().contains('jax')
    cy.get('#cmxDatePickerInput3 cmx-datepicker > month-selector table tr > td > button ').first().should('have.class', 'cmx-datepicker__month')
    cy.get('#cmxDatePickerInput3 cmx-datepicker > month-selector table tr > td > button ').first().click()

    cy.get('#cmxDatePickerInput3 cmx-datepicker table > thead > tr > td:nth-child(1) ').contains('mox')
    cy.get('#cmxDatePickerInput3 cmx-datepicker table > thead > tr > td:nth-child(1) ').should('have.class', 'cmx-datepicker__days-grid-cell')
    cy.get('#cmxDatePickerInput3 cmx-datepicker table > thead > tr > td:nth-child(1) ').click()

    cy.get('#cmxDatePickerInput3 .cmx-cancel-button').click()
  })

  it('Should change the datepicker language', function () {
    cy.get('#cmxButton').contains('Change translation').click()

    cy.get('#cmxDatePickerInput3 > input ').should('have.attr', 'placeholder', 'max2 4 17')
  })

  it('Should have black background when viewport is mobile', function () {
    cy.viewport(375, 812)
    cy.get('#cmxDatePickerInput3 .datepicker-input__toggler').click()
    cy.get('.datepicker-mask').should('have.css', 'background-color', 'rgb(0, 0, 0)')
    cy.get('.datepicker-positioner > cmx-datepicker [data-tid=datepicker-cancel-button]').click({force: true})
    cy.viewport(1000, 660)
  })

  it('Should have a configurable starting day', function() {
    cy.get('#configuration__datepicker-start-week').clear()
    cy.get('#configuration__datepicker-start-week').type(1)
    cy.get('#configuration__datepicker-set-start-week').click()

    cy.get('#date-picker-input1').click()
    cy.get('#date-picker-input1 .cmx-datepicker__days-grid > thead > .cmx-datepicker__days-grid-row > .cmx-datepicker__days-grid-cell').first().should('contain', 'Mon')
    cy.get('#date-picker-input1 .cmx-cancel-button').click({force: true})
  })

  it('Should have configurable disabled days', function() {
    cy.get('#cmxDatepickerInput5 > .datepicker-input__toggler').click()
    cy.get('#undefined > div > div.cmx-datepicker__body > table > tbody > tr:nth-child(2) > td:nth-child(2) > button').should('have.class', 'disabled')
    cy.get('#undefined > div > div.cmx-datepicker__body > table > tbody > tr:nth-child(2) > td:nth-child(4) > button').should('have.class', 'disabled')
  })
})

context('Select Input', function () {
  before(function () {
    startApp()
  })

  it('Should change the textarea label', function () {
    cy.get('#configuration__form-field-select-title').clear()

    cy.get('#configuration__form-field-select-title').type('Select example Title')

    cy.get('#cmxformFieldSelectTitle > label ').contains('Select example Title')
  })

  it('Should dropdown options on click', function () {
    cy.get('#cmxFormFieldSelect1').click()

    cy.get('#cmxFormFieldSelect1 .cmx-select-dd').should('be.visible')

    cy.get('#cmxFormFieldSelect1').click()

    cy.get('#cmxFormFieldSelect1 .cmx-select-dd').should('not.be.visible')
  })

  it('Should close options on outside click', function () {
    cy.get('#cmxFormFieldSelect1').click()

    cy.get('#cmxFormFieldSelect1 .cmx-select-dd').should('be.visible')

    // TODO: Get position, send a click outside of its position
    cy.get('#cmxFormFieldSelect1 .cmx-select-dd__mask').click()

    cy.get('#cmxFormFieldSelect1 .cmx-select-dd').should('not.be.visible')
  })

  it('Should disable/enable control', function () {
    cy.get('#disabledSelect').should('have.attr', 'ng-reflect-is-disabled', 'true')
    cy.get('#disabledSelect').should('have.css', 'cursor', 'not-allowed')
    cy.get('#disabledSelect').click()
    cy.get('#disabledSelect').should('have.length', 1)

    cy.get('#cmx-slide-toggle').click()
    cy.get('#disabledSelect').should('not.have.attr', 'ng-reflect-is-disabled', 'true')
    cy.get('#disabledSelect').should('not.have.css', 'cursor', 'not-allowed')
    cy.get('#disabledSelect').click()
    cy.get('#disabledSelect .cmx-select-dd').should('be.visible')
    cy.get('#disabledSelect').click()
    cy.get('#disabledSelect .cmx-select-dd').should('not.be.visible')
  })

  it('Should select a value', function () {
    // TODO: How do I test that I selected the option in a native control???
    // cy.get('#cmxSelect').select('3')

    cy.get('#toggableOptionsSelect').click()
    cy.get('#toggableOptionsSelect cmx-option').contains('three').click()
    cy.get('#toggableOptionsSelect .cmx-select-dd__placeholder').should('contain', 'three')

    cy.get('#toggableOptionsSelect').click()
    cy.get('#toggableOptionsSelect cmx-option').contains('two').click()
    cy.get('#toggableOptionsSelect .cmx-select-dd__placeholder').should('contain', 'two')
  })

  it('Should search values', function () {
    cy.get('#cmxFormFieldSelect2').click()

    cy.get('#cmxFormFieldSelect2 .cmx-select-dd__filter input').type('one')

    cy.get('#cmxFormFieldSelect2 .cmx-select-dd__options .select-option').should('contain', 'one')

    cy.get('#cmxFormFieldSelect2 .cmx-select-dd__options .select-option').contains('one').click()

    cy.get('#cmxFormFieldSelect2 .cmx-select-dd__placeholder').should('contain', 'one')
  })

  // TODO: Deprecated behaviour
  // it('Should allow multiselect', function () {
  //   cy.get('#cmxFormFieldSelect1').click()
  //   cy.get('#cmxFormFieldSelect1 .cmx-select-dd__options .select-option').contains('one').click()

  //   cy.get('#cmxFormFieldSelect1').click()
  //   cy.get('#cmxFormFieldSelect1 .cmx-select-dd__options .select-option').contains('two').click()

  //   cy.get('#cmxFormFieldSelect1 > .cmx-select-dd__placeholder').then((value) => {
  //     expect(value[0].innerText).to.be.equal('one , two')
  //   })

  //   cy.get('#cmxFormFieldSelect1').click()
  //   cy.get('#cmxFormFieldSelect1 .cmx-select-dd__options .select-option').contains('two').click()

  //   cy.get('#cmxFormFieldSelect1 > .cmx-select-dd__placeholder').then((value) => {
  //     expect(value[0].innerText).to.be.equal('one')
  //   })
  // })

  it('Should select/deselect all with checkboxes', function () {
    cy.get('#multi').click()

    cy.get('#multi .cmx-select-dd__options cmx-option .select-option').contains('All').click()

    cy.get('#multi .cmx-select-dd__placeholder').then(value => {
      expect(value[0].innerText).to.be.equal('one , two , three , four , five')
    })

    cy.get('#multi .cmx-select-dd__options cmx-option cmx-checkbox').each(checkbox => {
      cy.wrap(checkbox).should('have.attr', 'ng-reflect-checked', 'true')
    })

    cy.get('#multi .cmx-select-dd__options cmx-option .select-option').contains('All').click()

    cy.get('#multi .cmx-select-dd__placeholder').then(value => {
      expect(value[0].innerText).to.be.equal('Options')
    })

    cy.get('#multi .cmx-select-dd__options cmx-option cmx-checkbox').each(checkbox => {
      cy.wrap(checkbox).should('have.attr', 'ng-reflect-checked', 'false')
    })

    cy.get('#multi').click()
  })

  it('Should allow multiselect with checkboxes', function () {
    cy.get('#multi').click()
    cy.get('#multi .cmx-select-dd__options cmx-option .select-option').contains('All').click()

    cy.get('#multi .cmx-select-dd__options cmx-option .select-option').contains('one').click()

    cy.get('#multi .cmx-select-dd__placeholder').then(value => {
      expect(value[0].innerText).to.be.equal('two , three , four , five')
    })

    cy.get('#multi .cmx-select-dd__options cmx-option .select-option').contains('three').click()

    cy.get('#multi .cmx-select-dd__placeholder').then(value => {
      expect(value[0].innerText).to.be.equal('two , four , five')
    })

    cy.get('#multi').click()
  })

  it('Should be forced to be on top', function () {
    cy.get('#forceTop').click()
    cy.get('#forceTop > .cmx-select-dd').should('have.css', 'top', '-265px')
    cy.get('#forceTop > .cmx-select-dd__placeholder').click()
  })

  it('Value should not be an array', function(){
    expect(cy.get('#noMulti')).not.to.be.instanceOf(Array)
  })

  it('Should reset placehoder after options changes', function () {
    cy.get('#toggableOptionsSelect > div').contains('two')
    cy.get('#configuration__toggle-options').click()
    cy.get('#toggableOptionsSelect > div').contains('Options')
  })

  it('Should reset placehoder after options changes', function () {
    cy.get('#toggableOptionsSelect > div').contains('Options')
    cy.get('#configuration__toggle-options').click()
    cy.get('#toggableOptionsSelect > div').contains('two')
  })

  it('color of selected option should be applied', function () {
    cy.get('#noMulti > div').click()
    cy.get('#noMulti > div.cmx-select-dd > div.cmx-select-dd__options > cmx-option:nth-child(2) > div').click()
    cy.get('#noMulti > div').click()
    cy.get('#noMulti > div.cmx-select-dd > div.cmx-select-dd__options > cmx-option:nth-child(2) > div').should('have.css', 'color', 'rgb(63, 169, 245)')
  })
})

context('Timepicker Input', function () {
  before(function () {
    startApp()
  })
  it('should open time picker and increase and decrease the minutes by 5', function(){
    cy.get('#minuteincrease > time-input > .timepicker__toggler').click({force: true})
    cy.get(':nth-child(3) > .arrowUp').click({force: true})
    cy.get(':nth-child(3) > .timeinput').should('have.value', '05')
    cy.get(':nth-child(3) > .arrowDown').click({force: true})
    cy.get(':nth-child(3) > .timeinput').should('have.value', '00')
    cy.get('#minuteincrease > time-input > .timepicker__toggler').click({force: true})
  })
  it('should have placeholder with the time value', function(){
    cy.get('#minuteincrease > time-input > input').should('have.attr', 'placeholder', '01:00 PM')
  })

})