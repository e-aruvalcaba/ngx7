import { ElementRef, EventEmitter, OnInit, Renderer } from "@angular/core";
import { ControlValueAccessor } from "@angular/forms";
import { DatepickerInputTags } from "./../../models";
import { DateFormatService } from "./../../services";
export declare const CMX_DATEPICKERINPUT_VALUE_ACCESSOR: any;
export declare class DatepickerInputComponent implements OnInit, ControlValueAccessor {
    isRTL: boolean;
    tagsProviderValue: DatepickerInputTags;
    private renderer;
    private elementRef;
    private formatter;
    title: string;
    placeholder: string;
    max: Date;
    min: Date;
    singleDateSelection: boolean;
    rtl: boolean;
    value: any;
    disabled: boolean;
    tags: DatepickerInputTags;
    startWeekWith: number;
    forbiddenWeekDays: number[];
    disabledDates: Date[];
    select: EventEmitter<any>;
    dayClicked: EventEmitter<any>;
    cancel: EventEmitter<any>;
    datepickerTextValue: string;
    showDatepicker: boolean;
    private datepickerPositioner;
    private datepickerComponent;
    private resetFlag;
    private _value;
    private _disabled;
    private datepickerValue;
    private _rtl;
    private _tags;
    private _startWeekWith;
    private _selectedValue;
    private _forbiddenWeekDays;
    private _disabledDates;
    constructor(isRTL: boolean, tagsProviderValue: DatepickerInputTags, renderer: Renderer, elementRef: ElementRef, formatter: DateFormatService);
    onKeydownEscape(): any;
    onKeydownEnter(): any;
    ngOnInit(): void;
    propagateChange: (value: any) => void;
    propagateTouch: () => any;
    writeValue($value: Date): void;
    registerOnChange($fn: any): void;
    registerOnTouched($fn: any): void;
    setDisabledState($isDisabled: boolean): void;
    resetDatepicker(): void;
    keypressCatcher($event: Event): boolean;
    toggle(): void;
    stopTouchScroll(event: any): void;
    disableToggle($event: Event): void;
    cancelSelection(): void;
    setSelection($event: any): void;
    notifyDayWasClicked($event: any): void;
    private initializePlaceholder;
    private isInsideViewport;
    /**
     * @description Formats the datepickerÂ´s value to a readable string
     */
    private setPlaceholder;
}
