import { Component, forwardRef, Input, Output, EventEmitter, Renderer, ElementRef, ViewChild, ContentChildren, HostListener, } from "@angular/core";
import { NG_VALUE_ACCESSOR } from "@angular/forms";
import { CmxOptionComponent } from "./../cmx-option";
export var CMX_SELECT_VALUE_ACCESSOR = {
    multi: true,
    provide: NG_VALUE_ACCESSOR,
    useExisting: forwardRef(function () { return CmxSelectComponent; }),
};
var FOOTER;
(function (FOOTER) {
    FOOTER[FOOTER["HEIGHT"] = 24] = "HEIGHT";
    FOOTER[FOOTER["MOBILE_BREAKPOINT"] = 577] = "MOBILE_BREAKPOINT";
})(FOOTER || (FOOTER = {}));
var CmxSelectComponent = /** @class */ (function () {
    function CmxSelectComponent(renderer, elRef) {
        this.renderer = renderer;
        this.elRef = elRef;
        this.valueChange = new EventEmitter();
        this.showOptions = false;
        this.viewportHeight = 0;
        this.searchValue = "";
        this._rtl = false;
        this.resultsCount = 0;
        this.selectedValues = new Array();
        this.childHeight = 48;
        this.selectedOptions = new Array();
        this._disabled = false;
        this._search = false;
        this.optionsSubscriptions = [];
        this.propagateChange = function (value) {
            //
        };
        this.propagateTouch = function () {
            //
        };
    }
    Object.defineProperty(CmxSelectComponent.prototype, "value", {
        get: function () {
            return this._value;
        },
        set: function ($value) {
            if ($value !== "") {
                this._value = $value;
                this.valueChange.emit(this._value);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CmxSelectComponent.prototype, "disabled", {
        get: function () {
            return this._disabled;
        },
        set: function ($value) {
            if ($value != undefined) {
                this._disabled = $value;
            }
            if ($value) {
                this.renderer.setElementStyle(this.elRef.nativeElement, "backgroundColor", "#D6D6D6");
                this.renderer.setElementStyle(this.elRef.nativeElement, "cursor", "not-allowed");
            }
            else {
                this.renderer.setElementStyle(this.elRef.nativeElement, "backgroundColor", "#FFFFFF");
                this.renderer.setElementStyle(this.elRef.nativeElement, "cursor", "pointer");
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CmxSelectComponent.prototype, "placeholder", {
        get: function () {
            return this._placeholder;
        },
        set: function ($value) {
            if ($value != undefined) {
                this._placeholder = $value;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CmxSelectComponent.prototype, "texts", {
        get: function () {
            return this._texts;
        },
        set: function ($value) {
            if ($value != undefined) {
                this._texts = $value;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CmxSelectComponent.prototype, "search", {
        get: function () {
            return this._search;
        },
        set: function ($value) {
            if ($value != undefined) {
                this._search = $value;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CmxSelectComponent.prototype, "searchPlaceholder", {
        get: function () {
            return this._searchPlaceholder;
        },
        set: function ($value) {
            if ($value != undefined) {
                this._searchPlaceholder = $value;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CmxSelectComponent.prototype, "rtl", {
        get: function () {
            return this._rtl;
        },
        set: function ($value) {
            if ($value != undefined) {
                this._rtl = $value;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CmxSelectComponent.prototype, "forceTop", {
        get: function () {
            return this._forceTop;
        },
        set: function ($value) {
            this._forceTop = $value;
        },
        enumerable: true,
        configurable: true
    });
    CmxSelectComponent.prototype.onHover = function () {
        if (this.disabled) {
            this.renderer.setElementStyle(this.elRef.nativeElement, "border", "1px solid #B0B0B0");
        }
    };
    CmxSelectComponent.prototype.ngAfterContentInit = function () {
        var _this = this;
        if (this.placeholder) {
            this.originalPlaceholder = this.placeholder;
        }
        this.firstProcessOptions();
        this.optionsChangesSubscription = this.optionsQueryList.changes
            .subscribe(function () {
            _this.processOptions();
            _this.UpdateValues(undefined, function ($val) {
                if ($val !== undefined) {
                    _this._value = $val;
                    _this.updatePlaceHolder();
                    _this.propagateTouch();
                    _this.valueChange.emit(_this._value);
                }
            }, _this.value);
        });
        this.writeValue(this._value);
        var counter = 0;
        this.optionsQueryList.forEach(function (item) {
            item.selectedid = counter;
            counter++;
        });
        if (this.optionsQueryList) {
            this._isMultipleSelect = this.isMultipelSelect();
        }
        this.UpdateValues(undefined, function ($val) {
            if ($val !== undefined) {
                _this._value = $val;
                _this.propagateChange($val);
                _this.propagateTouch();
                _this.updatePlaceHolder();
                _this.valueChange.emit($val);
            }
        }, this.value);
    };
    CmxSelectComponent.prototype.ngOnDestroy = function () {
        this.optionsChangesSubscription.unsubscribe();
        this.dropSubscriptions();
    };
    /**
     * @description Registers the control's value.
     * @param {any} $value Value given to the cmx-select.
     */
    CmxSelectComponent.prototype.writeValue = function ($value) {
        if ($value != undefined && $value !== "") {
            this.value = $value;
            this.valueChange.emit(this._value);
        }
    };
    /**
     * @description Registers a callback function to be invoked when the control's value changes from user input.
     * @param {any} $fn Function that the change event will execute.
     */
    CmxSelectComponent.prototype.registerOnChange = function ($fn) {
        this.propagateChange = $fn;
    };
    /**
     * @description Registers a callback function to be invoked when the control is blurred by the user.
     * @param {any} $fn Function that the touched event will execute.
     */
    CmxSelectComponent.prototype.registerOnTouched = function ($fn) {
        this.propagateTouch = $fn;
    };
    /**
     * @description Registers the disabled state to the form control.
     * @param {boolean} $isDisabled Value that determines if the control will be disabled.
     */
    CmxSelectComponent.prototype.setDisabledState = function ($isDisabled) {
        this.disabled = $isDisabled;
    };
    CmxSelectComponent.prototype.toggleOptions = function () {
        var _this = this;
        if (!this.disabled && this.optionsQueryList && this.optionsQueryList.length > 0) {
            this.showOptions = !this.showOptions;
            var bodyElement = document.getElementsByTagName("BODY")[0];
            if (this.showOptions) {
                setTimeout(function () { _this.isInsideViewport(); }, 10);
            }
            else {
                this.renderer.setElementStyle(bodyElement, "overflow", undefined);
                this.searchValue = "";
                this.optionsQueryList.map(function (option) { return option.hide = false; });
            }
        }
        this.setResultsCount();
    };
    /**
     * @description Sets the selected option
     * @param {string} $event Value given to the control.
     */
    CmxSelectComponent.prototype.filterSelectOptions = function ($event) {
        var _this = this;
        this.searchValue = $event;
        if (this.optionsQueryList.length > 0 && this.searchValue.length > 0) {
            this.optionsQueryList.forEach(function (option) {
                return option.hide = !(option.getViewValue() !== undefined &&
                    option.getViewValue().toLowerCase().includes(_this.searchValue.toLowerCase()));
            });
        }
        else {
            this.optionsQueryList.forEach(function (option) { return option.hide = false; });
        }
        this.setResultsCount();
    };
    CmxSelectComponent.prototype.open = function (event) {
        var id = event.target.getAttribute("selectedid");
        if (event.target.className.indexOf("select-option") !== -1) {
            this.setselectedItem(id);
        }
    };
    CmxSelectComponent.prototype.close = function ($event) {
        $event.stopPropagation();
        this.showOptions = false;
        this.searchValue = "";
        this.optionsQueryList.forEach(function (option) { return option.hide = false; });
        var bodyElement = document.getElementsByTagName("BODY")[0];
        this.renderer.setElementStyle(bodyElement, "overflow", undefined);
        this.setResultsCount();
    };
    CmxSelectComponent.prototype.UpdateValues = function ($SelectedOption, callback, val) {
        var _this = this;
        if (this.optionsQueryList) {
            this._isMultipleSelect = this.isMultipelSelect();
            if ($SelectedOption) {
                var optionIndex = void 0;
                if (!$SelectedOption.isSelectAll) {
                    optionIndex = this.selectedValues.findIndex(function (x) { return x === $SelectedOption.value; });
                    if ($SelectedOption.selected && optionIndex < 0) {
                        this.selectedValues.push($SelectedOption.value);
                    }
                    else if (!$SelectedOption.selected && optionIndex > -1) {
                        this.selectedValues.splice(optionIndex, 1);
                    }
                }
                this._value = this.selectedValues;
                this.propagateChange(this._value);
                this.propagateTouch();
                this.valueChange.emit(this._value);
            }
            else {
                var index_1;
                // selecting options from values
                if (val && (val instanceof Array)) {
                    val.forEach(function (element) {
                        index_1 = _this.optionsQueryList.toArray().findIndex(function (x) { return x.value === element; });
                        if (index_1 > -1) {
                            _this.optionsQueryList.toArray()[index_1].select(undefined, true);
                        }
                    });
                }
                else {
                    if (val) {
                        index_1 = this.optionsQueryList.toArray().findIndex(function (x) { return x.value === val; });
                        if (index_1 > -1) {
                            this.optionsQueryList.toArray()[index_1].select(undefined, true);
                        }
                    }
                }
                var selectedValuesAux_1 = new Array();
                var optionIndex_1;
                this.optionsQueryList.forEach(function ($option) {
                    if (!$option.isSelectAll) {
                        optionIndex_1 = selectedValuesAux_1.findIndex(function (x) { return x === $option.value; });
                        if ($option.selected && optionIndex_1 < 0) {
                            selectedValuesAux_1.push($option.value);
                        }
                        else if (!$option.selected && optionIndex_1 > -1) {
                            selectedValuesAux_1.splice(optionIndex_1, 1);
                        }
                    }
                });
                this.selectedValues = selectedValuesAux_1;
                this.updatePlaceHolder();
                var valParam = void 0;
                if (this._isMultipleSelect) {
                    valParam = this.selectedValues;
                }
                else {
                    valParam = this.selectedValues[0];
                }
                if (callback) {
                    callback(valParam);
                }
            }
        }
    };
    /**
     * @description Sets the selected option based on a value.
     * If no option can be found with the designated value, the select trigger is cleared.
     * @param {any} $value Value given to the control.
     */
    CmxSelectComponent.prototype.setSelectionByValue = function ($value) {
        var _this = this;
        if (this.optionsQueryList.length > 0) {
            this.selectOption($value, this.optionsQueryList.toArray());
        }
        else {
            var optionsListSubscription_1 = this.optionsQueryList.changes.subscribe(function ($opts) {
                var $optionsArray = $opts.toArray();
                _this.selectOption($value, $optionsArray);
                optionsListSubscription_1.unsubscribe();
            });
        }
    };
    CmxSelectComponent.prototype.selectOption = function ($value, $optionsArray, emitEvent) {
        if (emitEvent === void 0) { emitEvent = true; }
        var optionIndex = $optionsArray.findIndex(function ($option) { return $option.value === $value; });
        if (optionIndex > -1) {
            $optionsArray[optionIndex].select(emitEvent);
            this.selectedOption = $optionsArray[optionIndex];
            this.placeholder = this.selectedOption.getViewValue();
        }
        else {
            this.clearSelection();
        }
    };
    CmxSelectComponent.prototype.listenToOptions = function () {
        var _this = this;
        this.optionsQueryList.forEach(function ($option) {
            var $sub = $option.optionSelected.subscribe(function ($event) {
                if ($event.isUserInput && _this.value !== $option) {
                    _this.onSelect($option);
                }
            });
            _this.optionsSubscriptions.push($sub);
        });
    };
    CmxSelectComponent.prototype.firstListenToOptions = function () {
        var _this = this;
        this.optionsQueryList.forEach(function ($option) {
            var $sub = $option.optionSelected.subscribe(function ($event) {
                if ($event.isUserInput && _this.value !== $option) {
                    _this.onSelect($option);
                }
            });
            _this.optionsSubscriptions.push($sub);
        });
    };
    /**
     * @description When a new option is selected, deselects the others and closes the panel.
     * @param {CmxOptionComponent} $option Reference of a CmxOptionComponent object.
     */
    CmxSelectComponent.prototype.onSelect = function ($option) {
        var _this = this;
        this.selectedOption = $option;
        if (!$option.multipleSelect) {
            if (this.showOptions) {
                this.toggleOptions();
            }
            this.deselectOptions($option);
        }
        if ($option.isSelectAll && $option.selected) {
            this.selectAllOptions();
        }
        else if ($option.isSelectAll && !$option.selected) {
            this.deselectOptions();
        }
        this.UpdateValues(undefined, function ($valParam) {
            _this.selectedOption = $option;
            _this._value = $valParam;
            _this.propagateChange($valParam);
            _this.propagateTouch();
            _this.valueChange.emit($valParam);
        });
    };
    /**
     * @description Clears the select trigger and deselects every option in the list.
     */
    CmxSelectComponent.prototype.clearSelection = function () {
        this._value = undefined;
        this.selectedOption = undefined;
        this.placeholder = this.originalPlaceholder;
        this.deselectOptions();
    };
    /**
     * @description Deselect each option that doesn't match the current selection
     */
    CmxSelectComponent.prototype.deselectOptions = function (option) {
        var _this = this;
        if (option) {
            this.optionsQueryList.forEach(function ($option) {
                if (option.value !== $option.value && _this.selectedOption !== $option) {
                    $option.deselect();
                }
            });
        }
        else {
            this.optionsQueryList.forEach(function ($option) {
                $option.deselect();
            });
        }
        this.updatePlaceHolder();
    };
    /**
     * @description Select all options
     */
    CmxSelectComponent.prototype.selectAllOptions = function () {
        this.placeholder = "";
        this.optionsQueryList.forEach(function ($option) {
            $option.selected = true;
        });
        this.updatePlaceHolder();
    };
    CmxSelectComponent.prototype.processOptions = function () {
        if (this.optionsQueryList.length > 0 && this.optionsQueryList.length < 4) {
            this.viewportHeight = (this.childHeight * this.optionsQueryList.length);
        }
        else if (this.optionsQueryList.length >= 4) {
            this.viewportHeight = (this.childHeight * 4);
        }
        this.dropSubscriptions();
        this.listenToOptions();
    };
    CmxSelectComponent.prototype.firstProcessOptions = function () {
        if (this.optionsQueryList.length > 0 && this.optionsQueryList.length < 4) {
            this.viewportHeight = (this.childHeight * this.optionsQueryList.length);
        }
        else if (this.optionsQueryList.length >= 4) {
            this.viewportHeight = (this.childHeight * 4);
        }
        this.dropSubscriptions();
        this.firstListenToOptions();
    };
    CmxSelectComponent.prototype.updatePlaceHolder = function () {
        var _this = this;
        this.selectedOptions = new Array();
        var optionIndex;
        this.optionsQueryList.forEach(function ($option) {
            if (!$option.isSelectAll) {
                optionIndex = _this.selectedOptions.findIndex(function (x) { return x === $option.getViewValue(); });
                if ($option.selected && optionIndex < 0) {
                    _this.selectedOptions.push($option.getViewValue());
                }
                else if (!$option.selected && optionIndex > -1) {
                    _this.selectedOptions.slice(optionIndex, 1);
                }
            }
        });
        if (this.selectedOptions.length > 0) {
            this.placeholder = this.selectedOptions.join();
        }
        else {
            this.placeholder = this.originalPlaceholder;
        }
    };
    CmxSelectComponent.prototype.dropSubscriptions = function () {
        this.optionsSubscriptions.forEach(function ($sub) {
            $sub.unsubscribe();
        });
        this.optionsSubscriptions = [];
    };
    CmxSelectComponent.prototype.setResultsCount = function () {
        this.resultsCount = (this.optionsQueryList.filter(function (option) { return option.hide === false; })).length;
    };
    CmxSelectComponent.prototype.isInsideViewport = function () {
        // clearing
        this.renderer.setElementStyle(this.itemsPositioner.nativeElement, "left", undefined);
        this.renderer.setElementStyle(this.itemsPositioner.nativeElement, "top", undefined);
        this.renderer.setElementStyle(this.itemsPositioner.nativeElement, "position", "absolute");
        // calculations
        var rect = this.itemsPositioner.nativeElement.getBoundingClientRect();
        var screenHeight = window.innerHeight;
        var screenWidth = window.innerWidth;
        var footerSpace = screenWidth >= FOOTER.MOBILE_BREAKPOINT ? FOOTER.HEIGHT : 0;
        if (this._forceTop) {
            var pxValue = Math.abs((rect.height - rect.bottom) + rect.bottom + 45);
            this.renderer.setElementStyle(this.itemsPositioner.nativeElement, "top", (-1 * pxValue) + "px");
            this.renderer.setElementStyle(this.itemsPositioner.nativeElement, "position", "relative");
            return;
        }
        if (rect.right > screenWidth) {
            // move to the left
            var pxValue = Math.abs(rect.right - screenWidth);
            this.renderer.setElementStyle(this.itemsPositioner.nativeElement, "left", (-1 * pxValue) + "px");
            this.renderer.setElementStyle(this.itemsPositioner.nativeElement, "position", "relative");
        }
        if (rect.bottom > screenHeight - footerSpace) {
            // move to the top
            var pxValue = Math.abs(rect.bottom - screenHeight);
            this.renderer.setElementStyle(this.itemsPositioner.nativeElement, "top", (-1 * (pxValue + footerSpace)) + "px");
            this.renderer.setElementStyle(this.itemsPositioner.nativeElement, "position", "relative");
        }
    };
    CmxSelectComponent.prototype.setselectedItem = function (id) {
        if (this._selectedItem !== undefined && this._selectedItem.selectedid !== Number(id)) {
            this._selectedItem.selected = false;
        }
        this._selectedItem = this.optionsQueryList.find(function (item) { return item.selectedid === Number(id); });
    };
    CmxSelectComponent.prototype.isMultipelSelect = function () {
        if (this.optionsQueryList) {
            var arrAux = this.optionsQueryList.filter(function (item) {
                return item.multipleSelect === true;
            });
            return arrAux.length > 0 ? true : false;
        }
        else {
            return false;
        }
    };
    CmxSelectComponent.decorators = [
        { type: Component, args: [{
                    providers: [
                        CMX_SELECT_VALUE_ACCESSOR,
                    ],
                    selector: "cmx-select",
                    styles: ["\n      @import url(\"https://www.cemexgo.com/cdn/cmx-dls-icons.css\");\n\n      html {\n        font-family: sans-serif;\n        line-height: 1.15;\n        -ms-text-size-adjust: 100%;\n        -webkit-text-size-adjust: 100%;\n      }\n\n      body {\n        margin: 0;\n      }\n\n      footer {\n        display: block;\n      }\n\n      h1 {\n        font-size: 2em;\n        margin: 0.67em 0;\n      }\n\n      a {\n        background-color: transparent;\n        -webkit-text-decoration-skip: objects;\n      }\n\n      a:active,a:hover {\n        outline-width: 0;\n      }\n\n      b {\n        font-weight: inherit;\n      }\n\n      b {\n        font-weight: bolder;\n      }\n\n      sub {\n        font-size: 75%;\n        line-height: 0;\n        position: relative;\n        vertical-align: baseline;\n      }\n\n      sub {\n        bottom: -0.25em;\n      }\n\n      button,input,select,textarea {\n        font-family: sans-serif;\n        font-size: 100%;\n        line-height: 1.15;\n        margin: 0;\n      }\n\n      button,input {\n        overflow: visible;\n      }\n\n      button,select {\n        text-transform: none;\n      }\n\n      button,html [type=\"button\"],[type=\"reset\"],[type=\"submit\"] {\n        -webkit-appearance: button;\n      }\n\n      button::-moz-focus-inner,[type=\"button\"]::-moz-focus-inner,[type=\"reset\"]::-moz-focus-inner,[type=\"submit\"]::-moz-focus-inner {\n        border-style: none;\n        padding: 0;\n      }\n\n      button:-moz-focusring,[type=\"button\"]:-moz-focusring,[type=\"reset\"]:-moz-focusring,[type=\"submit\"]:-moz-focusring {\n        outline: 1px dotted ButtonText;\n      }\n\n      textarea {\n        overflow: auto;\n      }\n\n      [type=\"checkbox\"],[type=\"radio\"] {\n        box-sizing: border-box;\n        padding: 0;\n      }\n\n      [type=\"number\"]::-webkit-inner-spin-button,[type=\"number\"]::-webkit-outer-spin-button {\n        height: auto;\n      }\n\n      [type=\"search\"] {\n        -webkit-appearance: textfield;\n        outline-offset: -2px;\n      }\n\n      [type=\"search\"]::-webkit-search-cancel-button,[type=\"search\"]::-webkit-search-decoration {\n        -webkit-appearance: none;\n      }\n\n      ::-webkit-file-upload-button {\n        -webkit-appearance: button;\n        font: inherit;\n      }\n\n      details {\n        display: block;\n      }\n\n      [hidden] {\n        display: none;\n      }\n\n      html {\n        box-sizing: border-box;\n      }\n\n      *,*::before,*::after {\n        box-sizing: inherit;\n      }\n\n      html {\n        -ms-overflow-style: scrollbar;\n        -webkit-tap-highlight-color: rgba(0,0,0,0);\n      }\n\n      body {\n        font-family: -apple-system,system-ui,BlinkMacSystemFont,\"Segoe UI\",Roboto,\"Helvetica Neue\",Arial,sans-serif;\n        font-size: 1rem;\n        font-weight: normal;\n        line-height: 1.5;\n        color: #292b2c;\n        background-color: #fff;\n      }\n\n      [tabindex=\"-1\"]:focus {\n        outline: none !important;\n      }\n\n      h1,h2,h3,h4,h5,h6 {\n        margin-top: 0;\n        margin-bottom: 0;\n      }\n\n      p {\n        margin-top: 0;\n        margin-bottom: 0;\n      }\n\n      dd {\n        margin-bottom: 0;\n        margin-left: 0;\n      }\n\n      a {\n        color: #139DF2;\n        text-decoration: none;\n      }\n\n      a:focus,a:hover {\n        color: #277EAF;\n        text-decoration: underline;\n      }\n\n      a:not([href]):not([tabindex]) {\n        color: inherit;\n        text-decoration: none;\n      }\n\n      a:not([href]):not([tabindex]):focus,a:not([href]):not([tabindex]):hover {\n        color: inherit;\n        text-decoration: none;\n      }\n\n      a:not([href]):not([tabindex]):focus {\n        outline: 0;\n      }\n\n      [role=\"button\"] {\n        cursor: pointer;\n      }\n\n      a,button,[role=\"button\"],input,label,select,textarea {\n        touch-action: manipulation;\n      }\n\n      label {\n        display: inline-block;\n        margin-bottom: .5rem;\n      }\n\n      button:focus {\n        outline: 1px dotted;\n        outline: 5px auto -webkit-focus-ring-color;\n      }\n\n      input,button,select,textarea {\n        line-height: inherit;\n      }\n\n      input[type=\"radio\"]:disabled,input[type=\"checkbox\"]:disabled {\n        cursor: not-allowed;\n      }\n\n      input[type=\"date\"],input[type=\"time\"],input[type=\"datetime-local\"],input[type=\"month\"] {\n        -webkit-appearance: listbox;\n      }\n\n      textarea {\n        resize: vertical;\n      }\n\n      input[type=\"search\"] {\n        -webkit-appearance: none;\n      }\n\n      output {\n        display: inline-block;\n      }\n\n      [hidden] {\n        display: none !important;\n      }\n\n      @font-face {\n        font-family: \"Roboto\";\n        font-family: \"Roboto-Thin\";\n        font-weight: 100;\n      }\n\n      @font-face {\n        font-family: \"Roboto\";\n        src: url(\"https://www.cemexgo.com/cdn/fonts/Roboto-Light.ttf\");\n        font-weight: 300;\n      }\n\n      @font-face {\n        font-family: \"Roboto\";\n        src: url(\"https://www.cemexgo.com/cdn/fonts/Roboto-Regular.ttf\");\n        font-weight: 400;\n      }\n\n      @font-face {\n        font-family: \"Roboto\";\n        src: url(\"https://www.cemexgo.com/cdn/fonts/Roboto-Italic.ttf\");\n        font-weight: 400;\n        font-style: italic;\n      }\n\n      @font-face {\n        font-family: \"Roboto\";\n        src: url(\"https://www.cemexgo.com/cdn/fonts/Roboto-Medium.ttf\");\n        font-weight: 500;\n      }\n\n      @font-face {\n        font-family: \"Roboto\";\n        src: url(\"https://www.cemexgo.com/cdn/fonts/Roboto-Bold.ttf\");\n        font-weight: 700;\n      }\n\n      @font-face {\n        font-family: \"Roboto\";\n        src: url(\"https://www.cemexgo.com/cdn/fonts/Roboto-Black.ttf\");\n        font-weight: 800;\n      }\n\n      h1 {\n        font-family: \"Roboto\",sans-serif;\n        font-size: 1.875rem;\n        line-height: 1.875rem;\n        font-weight: 700;\n        color: #001B3A;\n      }\n\n      h2 {\n        font-family: \"Roboto\",sans-serif;\n        font-size: 1.5rem;\n        line-height: 1.5rem;\n        font-weight: 500;\n        color: #001B3A;\n      }\n\n      h3 {\n        font-family: \"Roboto\",sans-serif;\n        font-size: 1.125rem;\n        line-height: 1.125rem;\n        font-weight: 400;\n        color: #001B3A;\n      }\n\n      h4 {\n        font-family: \"Roboto\",sans-serif;\n        font-size: 1rem;\n        line-height: 1rem;\n        font-weight: 400;\n        color: #001B3A;\n      }\n\n      h5 {\n        font-family: \"Roboto\",sans-serif;\n        font-size: .875rem;\n        line-height: 1rem;\n        font-weight: 500;\n        color: #001B3A;\n        text-transform: uppercase;\n      }\n\n      h6 {\n        font-family: \"Roboto\",sans-serif;\n        font-size: .75rem;\n        line-height: 1rem;\n        font-weight: 500;\n        color: #001B3A;\n      }\n\n      a {\n        text-decoration: none;\n        color: #3FA9F5;\n      }\n\n      a:hover {\n        text-decoration: underline;\n        color: #3FA9F5;\n      }\n\n      a:active {\n        text-decoration: underline;\n        color: #003876;\n      }\n\n      a.disabled {\n        text-decoration: none;\n        color: #666;\n        cursor: not-allowed;\n      }\n\n      .input-placeholder {\n        font-family: \"Roboto\",sans-serif;\n        font-size: .875rem;\n        line-height: 1rem;\n        color: #666;\n      }\n\n      .input-text {\n        font-family: \"Roboto\",sans-serif;\n        font-size: .875rem;\n        line-height: 1rem;\n        color: #333;\n      }\n\n      .text-left {\n        text-align: left !important;\n      }\n\n      .text-right {\n        text-align: right !important;\n      }\n\n      .text-center {\n        text-align: center !important;\n      }\n\n      .align-content-end {\n        align-content: flex-end !important;\n      }\n\n      .align-content-center {\n        align-content: center !important;\n      }\n\n      @font-face {\n        font-family: \"Roboto\";\n        font-family: \"Roboto-Thin\";\n        font-weight: 100;\n      }\n\n      @font-face {\n        font-family: \"Roboto\";\n        src: url(\"https://www.cemexgo.com/cdn/fonts/Roboto-Light.ttf\");\n        font-weight: 300;\n      }\n\n      @font-face {\n        font-family: \"Roboto\";\n        src: url(\"https://www.cemexgo.com/cdn/fonts/Roboto-Regular.ttf\");\n        font-weight: 400;\n      }\n\n      @font-face {\n        font-family: \"Roboto\";\n        src: url(\"https://www.cemexgo.com/cdn/fonts/Roboto-Italic.ttf\");\n        font-weight: 400;\n        font-style: italic;\n      }\n\n      @font-face {\n        font-family: \"Roboto\";\n        src: url(\"https://www.cemexgo.com/cdn/fonts/Roboto-Medium.ttf\");\n        font-weight: 500;\n      }\n\n      @font-face {\n        font-family: \"Roboto\";\n        src: url(\"https://www.cemexgo.com/cdn/fonts/Roboto-Bold.ttf\");\n        font-weight: 700;\n      }\n\n      @font-face {\n        font-family: \"Roboto\";\n        src: url(\"https://www.cemexgo.com/cdn/fonts/Roboto-Black.ttf\");\n        font-weight: 800;\n      }\n\n      h1 {\n        font-family: \"Roboto\",sans-serif;\n        font-size: 1.875rem;\n        line-height: 1.875rem;\n        font-weight: 700;\n        color: #001B3A;\n      }\n\n      h2 {\n        font-family: \"Roboto\",sans-serif;\n        font-size: 1.5rem;\n        line-height: 1.5rem;\n        font-weight: 500;\n        color: #001B3A;\n      }\n\n      h3 {\n        font-family: \"Roboto\",sans-serif;\n        font-size: 1.125rem;\n        line-height: 1.125rem;\n        font-weight: 400;\n        color: #001B3A;\n      }\n\n      h4 {\n        font-family: \"Roboto\",sans-serif;\n        font-size: 1rem;\n        line-height: 1rem;\n        font-weight: 400;\n        color: #001B3A;\n      }\n\n      h5 {\n        font-family: \"Roboto\",sans-serif;\n        font-size: .875rem;\n        line-height: 1rem;\n        font-weight: 500;\n        color: #001B3A;\n        text-transform: uppercase;\n      }\n\n      h6 {\n        font-family: \"Roboto\",sans-serif;\n        font-size: .75rem;\n        line-height: 1rem;\n        font-weight: 500;\n        color: #001B3A;\n      }\n\n      a {\n        text-decoration: none;\n        color: #3FA9F5;\n      }\n\n      a:hover {\n        text-decoration: underline;\n        color: #3FA9F5;\n      }\n\n      a:active {\n        text-decoration: underline;\n        color: #003876;\n      }\n\n      a.disabled {\n        text-decoration: none;\n        color: #666;\n        cursor: not-allowed;\n      }\n\n      .input-placeholder {\n        font-family: \"Roboto\",sans-serif;\n        font-size: .875rem;\n        line-height: 1rem;\n        color: #666;\n      }\n\n      .input-text {\n        font-family: \"Roboto\",sans-serif;\n        font-size: .875rem;\n        line-height: 1rem;\n        color: #333;\n      }\n\n      .text-left {\n        text-align: left !important;\n      }\n\n      .text-right {\n        text-align: right !important;\n      }\n\n      .text-center {\n        text-align: center !important;\n      }\n\n      .align-content-end {\n        align-content: flex-end !important;\n      }\n\n      .align-content-center {\n        align-content: center !important;\n      }\n\n      .cmx-select-dd {\n        width: auto;\n        position: relative;\n        border-top: 3px solid #3FA9F5;\n        background-color: #fff;\n        border-radius: 3px;\n        box-shadow: 0 8px 13px rgba(0,0,0,0.3);\n        min-height: 160px;\n        max-height: 220px;\n        display: flex;\n        flex-direction: column;\n      }\n\n      .cmx-select-dd__filter {\n        background-color: #fff;\n        border-bottom: 1px solid #D6D6D6;\n        margin: 0 1rem;\n        display: flex;\n        align-items: center;\n        flex: 0 0 auto;\n      }\n\n      .cmx-select-dd__filter-icon {\n        color: #3FA9F5;\n        padding-top: 2px;\n      }\n\n      .cmx-select-dd__filter-input {\n        border: 0;\n        width: 100%;\n        display: inline-block;\n        height: 3rem;\n        line-height: 3rem;\n        font-size: .875rem;\n      }\n\n      .cmx-select-dd__filter-input:focus {\n        outline: 0 none;\n      }\n\n      .cmx-select-dd__options {\n        overflow-y: auto;\n        overflow-x: hidden;\n        margin-top: 1.25rem;\n      }\n\n      .cmx-select-dd__option,:host::ng-deep .cmx-select-dd__option {\n        padding: 0.625rem 2rem;\n        cursor: pointer;\n      }\n\n      .cmx-select-dd__option:hover,:host::ng-deep .cmx-select-dd__option:hover {\n        background-color: #F4F6F9;\n      }\n\n      :host::ng-deep .cmx-select-dd__option {\n        display: block;\n      }\n\n      :host::ng-deep .cmx-select-dd__option .select-option.active {\n        color: #3FA9F5;\n      }\n\n      :host::ng-deep .cmx-select-dd__option .select-option.active::before {\n        font-family: 'dls-icons' !important;\n        content: \"\\E93C\";\n        font-family: dls-icons !important;\n        width: 24px;\n        height: 24px;\n        display: -webkit-inline-box;\n        display: -ms-inline-flexbox;\n        display: inline-flex;\n        -webkit-box-align: center;\n        -ms-flex-align: center;\n        align-items: center;\n        -webkit-box-pack: center;\n        -ms-flex-pack: center;\n        justify-content: center;\n      }\n\n      :host::ng-deep .cmx-select-dd__option .select-option .cmx-checkbox label {\n        padding-bottom: 0;\n      }\n\n      :host::ng-deepcmx-checkbox {\n        display: inline-block;\n      }\n\n      .cmx-select-dd {\n        z-index: 11;\n        position: absolute;\n        margin-left: -1px;\n      }\n\n      .cmx-select-dd__placeholder {\n        width: 100%;\n        height: 100%;\n        line-height: 200%;\n        padding: 7px;\n        overflow: hidden;\n      }\n\n      .cmx-select-dd__filter {\n        z-index: 12;\n      }\n\n      .cmx-select-dd__filter-input {\n        border: 0 !important;\n      }\n\n      .cmx-select-dd__options {\n        z-index: 11;\n      }\n\n      .cmx-select-dd__mask {\n        z-index: 10;\n        opacity: 0;\n        background: none;\n        position: fixed;\n        width: 100vw;\n        height: 100vh;\n        top: 0;\n        left: 0;\n        display: block;\n        cursor: default;\n      }\n    "],
                    template: "\n      <div class=\"cmx-select-dd__placeholder\" (click)=\"toggleOptions()\">\n          {{ placeholder }}\n      </div>\n      <div #itemsPositioner class=\"cmx-select-dd\" [ngStyle]=\"{'width.px': this.elRef.nativeElement.offsetWidth}\" *ngIf=\"showOptions\">\n          <div class=\"cmx-select-dd__filter\" *ngIf=\"search\">\n              <span class=\"cmx-select-dd__filter-icon cmx-icon-magnifier-glass\" aria-hidden=\"true\"></span>\n              <input class=\"cmx-select-dd__filter-input\" type=\"search\" [placeholder]=\"searchPlaceholder\" [ngModel]=\"searchValue\" (ngModelChange)=\"filterSelectOptions($event)\"/>\n          </div>\n          <div class=\"cmx-select-dd__options\">\n              <ng-content select=\"cmx-option\"></ng-content>\n          </div>\n          <div *ngIf=\"resultsCount === 0 && texts && texts.searchEmptyResult\">\n              {{ texts.searchEmptyResult }}\n          </div>\n      </div>\n      <div #itemsMask class=\"cmx-select-dd__mask\" (click)=\"close($event)\" *ngIf=\"showOptions\"></div>\n    ",
                },] },
    ];
    /** @nocollapse */
    CmxSelectComponent.ctorParameters = function () { return [
        { type: Renderer, },
        { type: ElementRef, },
    ]; };
    CmxSelectComponent.propDecorators = {
        'value': [{ type: Input },],
        'disabled': [{ type: Input },],
        'placeholder': [{ type: Input },],
        'texts': [{ type: Input },],
        'search': [{ type: Input },],
        'searchPlaceholder': [{ type: Input },],
        'rtl': [{ type: Input },],
        'forceTop': [{ type: Input },],
        'valueChange': [{ type: Output },],
        'optionsQueryList': [{ type: ContentChildren, args: [CmxOptionComponent,] },],
        'itemsPositioner': [{ type: ViewChild, args: ["itemsPositioner",] },],
        'onHover': [{ type: HostListener, args: ["mouseover",] },],
        'open': [{ type: HostListener, args: ["click", ["$event"],] },],
    };
    return CmxSelectComponent;
}());
export { CmxSelectComponent };
//# sourceMappingURL=cmx-select.component.js.map