export declare enum DateTimeActions {
    ConvertToLocal = 0,
    NoConvertToLocal = 1
}
export declare class FormatterService {
    /**
     * @description Transforms a valid string to a date object
     * @param {string} $date The date as string
     * @returns {Date} A javascript date object
     */
    getDateObject($date: string): Date;
    formatDateTimeMoment(date: any, languageISO: any, format: any, action?: DateTimeActions): any;
    formatNumberTS(number: any, languageISO: any, decimalNumbers: any): string | 0;
    utcToLocal(date: any): any;
    localToUtc(date: any, format?: any): any;
    timeToMinutes(time: any): number;
    /**
     * @description Formats a number as a currency depending on a country
     * @param  {number} $value Value to format
     * @param  {number} $numberDecimals The number of decimals to use
     * @param  {string} $thousandSeparator The character to use when separating numbers
     * @param  {string} $decimalSeparator The character to use when separating the decimal and integer part
     * @returns {string} The number as a currency
     */
    formatNumber($value: number, $numberDecimals: number, $thousandSeparator?: string, $decimalSeparator?: string): string;
    round(value: number, decimals: number): number;
    roundToDown(value: number): number;
    removeFirstZeros(value: string): string;
    pad(text: string, wildcard: string, length: number): string;
    formatMeasureUnit(measureUnit: any): any;
}
