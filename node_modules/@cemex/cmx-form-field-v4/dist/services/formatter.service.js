import { Injectable } from "@angular/core";
var FormatterService = /** @class */ (function () {
    function FormatterService() {
    }
    /**
     * @description Transforms a valid string to a date object
     * @param {string} $date The date as string
     * @returns {Date} A javascript date object
     */
    FormatterService.prototype.getDateObject = function ($date) {
        return new Date();
    };
    FormatterService.prototype.formatDateTimeMoment = function (date, languageISO, format, action) {
        return {};
    };
    // tslint:disable-next-line:variable-name
    FormatterService.prototype.formatNumberTS = function (number, languageISO, decimalNumbers) {
        return 0;
    };
    FormatterService.prototype.utcToLocal = function (date) {
        return {};
    };
    FormatterService.prototype.localToUtc = function (date, format) {
        return {};
    };
    FormatterService.prototype.timeToMinutes = function (time) {
        return 0;
    };
    /**
     * @description Formats a number as a currency depending on a country
     * @param  {number} $value Value to format
     * @param  {number} $numberDecimals The number of decimals to use
     * @param  {string} $thousandSeparator The character to use when separating numbers
     * @param  {string} $decimalSeparator The character to use when separating the decimal and integer part
     * @returns {string} The number as a currency
     */
    FormatterService.prototype.formatNumber = function ($value, $numberDecimals, $thousandSeparator, $decimalSeparator) {
        return "";
    };
    FormatterService.prototype.round = function (value, decimals) {
        return 0;
    };
    FormatterService.prototype.roundToDown = function (value) {
        return 0;
    };
    FormatterService.prototype.removeFirstZeros = function (value) {
        return "";
    };
    FormatterService.prototype.pad = function (text, wildcard, length) {
        return "";
    };
    FormatterService.prototype.formatMeasureUnit = function (measureUnit) {
        return {};
    };
    FormatterService.decorators = [
        { type: Injectable },
    ];
    /** @nocollapse */
    FormatterService.ctorParameters = function () { return []; };
    return FormatterService;
}());
export { FormatterService };
//# sourceMappingURL=formatter.service.js.map