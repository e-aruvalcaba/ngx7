{"version":3,"sources":["ng://@cemex/cmx-alert-v7/lib/models/alert.ts","ng://@cemex/cmx-alert-v7/lib/services/alert-ref.ts","ng://@cemex/cmx-alert-v7/lib/services/alert.service.ts","ng://@cemex/cmx-alert-v7/lib/components/alert.component.ts","ng://@cemex/cmx-alert-v7/lib/alert.module.ts"],"names":["Alert","Success","Error","Info","Warning","AlertRef","prototype","onAction","this","_onAction","next","onActionClicked","asObservable","onClose","_onClose","onCloseClicked","alertMessage","actionMessage","duration","alertType","Subject","AlertService","openSuccess","AlertType","open","openError","openWarning","openInfo","alertRef","alerts","push","alerts$","_setTimeout","alert","_this","window","setTimeout","removeAlert","filter","x","Injectable","BehaviorSubject","AlertComponent","onLinkClick","getCssClass","alert--success","alert--error","alert--warning","alert--info","alertService","ngOnInit","flugeeService","direction$","subscribe","data","dirState","Component","args","selector","template","CmxFlugeeService","AlertModule","forRoot","ngModule","providers","NgModule","imports","CommonModule","declarations","exports"],"mappings":"2cAAA,SAAAA,KAAA,OAQIC,QAAA,EACAC,MAAA,EACAC,KAAA,EACAC,QAAA,qFCPJ,IAAAC,GAWIA,EAAAC,UAAAC,SAAA,WACEC,KAAKC,UAAUC,QAGjBL,EAAAC,UAAAK,gBAAA,WACE,OAAOH,KAAKC,UAAUG,gBAGxBP,EAAAC,UAAAO,QAAA,WACEL,KAAKM,SAASJ,QAGhBL,EAAAC,UAAAS,eAAA,WACE,OAAOP,KAAKM,SAASF,gBAE3BP,GAtBI,SAAAA,EAAmBW,EACAC,EACAC,EACAC,GAHAX,KAAAQ,aAAAA,EACAR,KAAAS,cAAAA,EACAT,KAAAU,SAAAA,EACAV,KAAAW,UAAAA,EANbX,KAAAC,UAAY,IAAIW,EAAAA,QAChBZ,KAAAM,SAAW,IAAIM,EAAAA,QCNzB,IAAAC,GAaEA,EAAAf,UAAAgB,YAAA,SAAYN,EAAsBC,EAAuBC,EAAyBC,GAChF,YADuD,IAAAD,IAAAA,EAAA,UAAyB,IAAAC,IAAAA,EAAuBI,EAAUtB,SAC1GO,KAAKgB,KAAKR,EAAcC,EAAeC,EAAUC,IAG1DE,EAAAf,UAAAmB,UAAA,SAAUT,EAAsBC,EAAuBC,EAAyBC,GAC9E,YADqD,IAAAD,IAAAA,EAAA,UAAyB,IAAAC,IAAAA,EAAuBI,EAAUrB,OACxGM,KAAKgB,KAAKR,EAAcC,EAAeC,EAAUC,IAG1DE,EAAAf,UAAAoB,YAAA,SAAYV,EAAsBC,EAAuBC,EAAyBC,GAChF,YADuD,IAAAD,IAAAA,EAAA,UAAyB,IAAAC,IAAAA,EAAuBI,EAAUnB,SAC1GI,KAAKgB,KAAKR,EAAcC,EAAeC,EAAUC,IAG1DE,EAAAf,UAAAqB,SAAA,SAASX,EAAsBC,EAAuBC,EAAyBC,GAC7E,YADoD,IAAAD,IAAAA,EAAA,UAAyB,IAAAC,IAAAA,EAAuBI,EAAUpB,MACvGK,KAAKgB,KAAKR,EAAcC,EAAeC,EAAUC,IAGlDE,EAAAf,UAAAkB,KAAR,SAAaR,EAAsBC,EAAuBC,EAAkBC,OACpES,EAAW,IAAIvB,EAASW,EAAcC,EAAeC,EAAUC,GAQrE,OAPAX,KAAKqB,OAAOC,KAAKF,GACjBpB,KAAKuB,QAAQrB,KAAKF,KAAKqB,QAEC,EAApBD,EAASV,UACXV,KAAKwB,YAAYJ,GAGZA,GAGDP,EAAAf,UAAA0B,YAAR,SAAoBC,GAApB,IAAAC,EAAA1B,KACE2B,OAAOC,WAAU,WACfF,EAAKG,YAAYJ,IAChBA,EAAMf,WAGXG,EAAAf,UAAA+B,YAAA,SAAYJ,GACVzB,KAAKqB,OAASrB,KAAKqB,OAAOS,OAAM,SAACC,GAAK,OAAAA,IAAMN,IAC5CzB,KAAKuB,QAAQrB,KAAKF,KAAKqB,6BA5C1BW,EAAAA,mDA8CDnB,GAzCE,SAAAA,IAHAb,KAAAuB,QAAuC,IAAIU,EAAAA,gBAAgB,IAC3DjC,KAAAqB,OAAqB,GCRvB,IAAAa,GAsBEA,EAAApC,UAAAqC,YAAA,SAAYV,GACVA,EAAM1B,YAGRmC,EAAApC,UAAAsC,YAAA,SAAYX,GACV,MAAO,CACLY,iBAAkBtB,EAAUtB,UAAYgC,EAAMd,UAC9C2B,eAAgBvB,EAAUrB,QAAU+B,EAAMd,UAC1C4B,iBAAkBxB,EAAUnB,UAAY6B,EAAMd,UAC9C6B,cAAezB,EAAUpB,OAAS8B,EAAMd,YAI5CuB,EAAApC,UAAAO,QAAA,SAAQoB,GACNzB,KAAKyC,aAAaZ,YAAYJ,GAC9BA,EAAMpB,WAGR6B,EAAApC,UAAA4C,SAAA,WAAA,IAAAhB,EAAA1B,KACEA,KAAK2C,cAAcC,WAAWC,UAAS,SAACC,GACtCpB,EAAKqB,SAAWD,yBAlCrBE,EAAAA,UAASC,KAAA,CAAC,CAETC,SAAU,YACVC,SAAA,sqCAVOtC,SAKAuC,EAAAA,oBAuCTlB,GA3BE,SAAAA,EAAoBO,EAAoCE,GAApC3C,KAAAyC,aAAAA,EAAoCzC,KAAA2C,cAAAA,EACtD3C,KAAKuB,QAAUkB,EAAalB,QCnBhC,IAAA8B,GAkBWA,EAAAC,QAAP,WACI,MAAO,CACHC,SAAUF,EACVG,UAAW,CACP3C,yBAff4C,EAAAA,SAAQR,KAAA,CAAC,CACNS,QAAS,CAAEC,EAAAA,cACXC,aAAc,CACV1B,GAEJ2B,QAAS,CACL3B,OAaRmB,GAnBA,SAAAA","sourcesContent":["export class Alert {\n    alertMessage: string;\n    actionMessage: string;\n    duration: number;\n    type: AlertType;\n}\n\nexport enum AlertType {\n    Success,\n    Error,\n    Info,\n    Warning\n}\n","import { AlertType } from '../models/alert';\nimport { Subject } from 'rxjs';\nimport { Observable } from 'rxjs';\n\nexport class AlertRef {\n  private _onAction = new Subject<void>();\n  private _onClose = new Subject<void>();\n\n    constructor(public alertMessage: string,\n                public actionMessage: string,\n                public duration: number,\n                public alertType: AlertType\n                ) {\n    }\n\n    onAction() {\n      this._onAction.next();\n    }\n\n    onActionClicked() {\n      return this._onAction.asObservable();\n    }\n\n    onClose() {\n      this._onClose.next();\n    }\n\n    onCloseClicked() {\n      return this._onClose.asObservable();\n    }\n}\n","import { EventEmitter, Injectable } from '@angular/core';\nimport { AlertType } from '../models/alert';\nimport { AlertRef } from './alert-ref';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable()\nexport class AlertService {\n  alerts$: BehaviorSubject<AlertRef[]> = new BehaviorSubject([]);\n  alerts: AlertRef[] = [];\n\n  constructor() {\n  }\n\n  openSuccess(alertMessage: string, actionMessage: string, duration: number = 5000, alertType: AlertType = AlertType.Success) {\n    return this.open(alertMessage, actionMessage, duration, alertType);\n  }\n\n  openError(alertMessage: string, actionMessage: string, duration: number = 5000, alertType: AlertType = AlertType.Error) {\n    return this.open(alertMessage, actionMessage, duration, alertType);\n  }\n\n  openWarning(alertMessage: string, actionMessage: string, duration: number = 5000, alertType: AlertType = AlertType.Warning) {\n    return this.open(alertMessage, actionMessage, duration, alertType);\n  }\n\n  openInfo(alertMessage: string, actionMessage: string, duration: number = 5000, alertType: AlertType = AlertType.Info) {\n    return this.open(alertMessage, actionMessage, duration, alertType);\n  }\n\n  private open(alertMessage: string, actionMessage: string, duration: number, alertType: AlertType): AlertRef {\n    const alertRef = new AlertRef(alertMessage, actionMessage, duration, alertType);\n    this.alerts.push(alertRef);\n    this.alerts$.next(this.alerts);\n\n    if (alertRef.duration > 0) {\n      this._setTimeout(alertRef);\n    }\n\n    return alertRef;\n  }\n\n  private _setTimeout(alert: AlertRef) {\n    window.setTimeout(() => {\n      this.removeAlert(alert);\n    }, alert.duration);\n  }\n\n  removeAlert(alert: AlertRef) {\n    this.alerts = this.alerts.filter(x => x !== alert);\n    this.alerts$.next(this.alerts);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { AlertService } from '../services/alert.service';\nimport { AlertType } from '../models/alert';\nimport { AlertRef } from '../services/alert-ref';\nimport { BehaviorSubject } from 'rxjs';\n\nimport { CmxFlugeeService } from '@cemex/cmx-flugee-v7';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'cmx-alert',\n  templateUrl: 'alert.component.html',\n  styleUrls: ['alert.component.scss'],\n})\nexport class AlertComponent implements OnInit {\n  alerts$: BehaviorSubject<AlertRef[]>;\n  dirState: string;\n\n  constructor(private alertService: AlertService, private flugeeService: CmxFlugeeService) {\n    this.alerts$ = alertService.alerts$;\n  }\n\n  onLinkClick(alert: AlertRef) {\n    alert.onAction();\n  }\n\n  getCssClass(alert: AlertRef) {\n    return {\n      'alert--success': AlertType.Success === alert.alertType,\n      'alert--error': AlertType.Error === alert.alertType,\n      'alert--warning': AlertType.Warning === alert.alertType,\n      'alert--info': AlertType.Info === alert.alertType,\n    };\n  }\n\n  onClose(alert: AlertRef) {\n    this.alertService.removeAlert(alert);\n    alert.onClose();\n  }\n\n  ngOnInit() {\n    this.flugeeService.direction$.subscribe(data => {\n      this.dirState = data;\n    });\n  }\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AlertComponent } from './components/alert.component';\n\n// SERVICES\nimport { AlertService } from './services/alert.service';\n\n@NgModule({\n    imports: [ CommonModule ],\n    declarations: [\n        AlertComponent,\n    ],\n    exports: [\n        AlertComponent,\n    ]\n})\nexport class AlertModule {\n\n    static forRoot(): ModuleWithProviders {\n        return {\n            ngModule: AlertModule,\n            providers: [\n                AlertService\n            ]\n        };\n    }\n}\n"]}