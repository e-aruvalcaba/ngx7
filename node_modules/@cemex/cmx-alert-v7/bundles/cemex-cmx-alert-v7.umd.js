(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/common'), require('@angular/core'), require('rxjs'), require('@cemex/cmx-flugee-v7')) :
    typeof define === 'function' && define.amd ? define('@cemex/cmx-alert-v7', ['exports', '@angular/common', '@angular/core', 'rxjs', '@cemex/cmx-flugee-v7'], factory) :
    (factory((global.cemex = global.cemex || {}, global.cemex['cmx-alert-v7'] = {}),global.ng.common,global.ng.core,global.rxjs,global.cmxFlugeeV7));
}(this, (function (exports,common,core,rxjs,cmxFlugeeV7) { 'use strict';

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var Alert = /** @class */ (function () {
        function Alert() {
        }
        return Alert;
    }());
    /** @enum {number} */
    var AlertType = {
        Success: 0,
        Error: 1,
        Info: 2,
        Warning: 3,
    };
    AlertType[AlertType.Success] = 'Success';
    AlertType[AlertType.Error] = 'Error';
    AlertType[AlertType.Info] = 'Info';
    AlertType[AlertType.Warning] = 'Warning';

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var AlertRef = /** @class */ (function () {
        function AlertRef(alertMessage, actionMessage, duration, alertType) {
            this.alertMessage = alertMessage;
            this.actionMessage = actionMessage;
            this.duration = duration;
            this.alertType = alertType;
            this._onAction = new rxjs.Subject();
            this._onClose = new rxjs.Subject();
        }
        /**
         * @return {?}
         */
        AlertRef.prototype.onAction = /**
         * @return {?}
         */
            function () {
                this._onAction.next();
            };
        /**
         * @return {?}
         */
        AlertRef.prototype.onActionClicked = /**
         * @return {?}
         */
            function () {
                return this._onAction.asObservable();
            };
        /**
         * @return {?}
         */
        AlertRef.prototype.onClose = /**
         * @return {?}
         */
            function () {
                this._onClose.next();
            };
        /**
         * @return {?}
         */
        AlertRef.prototype.onCloseClicked = /**
         * @return {?}
         */
            function () {
                return this._onClose.asObservable();
            };
        return AlertRef;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var AlertService = /** @class */ (function () {
        function AlertService() {
            this.alerts$ = new rxjs.BehaviorSubject([]);
            this.alerts = [];
        }
        /**
         * @param {?} alertMessage
         * @param {?} actionMessage
         * @param {?=} duration
         * @param {?=} alertType
         * @return {?}
         */
        AlertService.prototype.openSuccess = /**
         * @param {?} alertMessage
         * @param {?} actionMessage
         * @param {?=} duration
         * @param {?=} alertType
         * @return {?}
         */
            function (alertMessage, actionMessage, duration, alertType) {
                if (duration === void 0) {
                    duration = 5000;
                }
                if (alertType === void 0) {
                    alertType = AlertType.Success;
                }
                return this.open(alertMessage, actionMessage, duration, alertType);
            };
        /**
         * @param {?} alertMessage
         * @param {?} actionMessage
         * @param {?=} duration
         * @param {?=} alertType
         * @return {?}
         */
        AlertService.prototype.openError = /**
         * @param {?} alertMessage
         * @param {?} actionMessage
         * @param {?=} duration
         * @param {?=} alertType
         * @return {?}
         */
            function (alertMessage, actionMessage, duration, alertType) {
                if (duration === void 0) {
                    duration = 5000;
                }
                if (alertType === void 0) {
                    alertType = AlertType.Error;
                }
                return this.open(alertMessage, actionMessage, duration, alertType);
            };
        /**
         * @param {?} alertMessage
         * @param {?} actionMessage
         * @param {?=} duration
         * @param {?=} alertType
         * @return {?}
         */
        AlertService.prototype.openWarning = /**
         * @param {?} alertMessage
         * @param {?} actionMessage
         * @param {?=} duration
         * @param {?=} alertType
         * @return {?}
         */
            function (alertMessage, actionMessage, duration, alertType) {
                if (duration === void 0) {
                    duration = 5000;
                }
                if (alertType === void 0) {
                    alertType = AlertType.Warning;
                }
                return this.open(alertMessage, actionMessage, duration, alertType);
            };
        /**
         * @param {?} alertMessage
         * @param {?} actionMessage
         * @param {?=} duration
         * @param {?=} alertType
         * @return {?}
         */
        AlertService.prototype.openInfo = /**
         * @param {?} alertMessage
         * @param {?} actionMessage
         * @param {?=} duration
         * @param {?=} alertType
         * @return {?}
         */
            function (alertMessage, actionMessage, duration, alertType) {
                if (duration === void 0) {
                    duration = 5000;
                }
                if (alertType === void 0) {
                    alertType = AlertType.Info;
                }
                return this.open(alertMessage, actionMessage, duration, alertType);
            };
        /**
         * @private
         * @param {?} alertMessage
         * @param {?} actionMessage
         * @param {?} duration
         * @param {?} alertType
         * @return {?}
         */
        AlertService.prototype.open = /**
         * @private
         * @param {?} alertMessage
         * @param {?} actionMessage
         * @param {?} duration
         * @param {?} alertType
         * @return {?}
         */
            function (alertMessage, actionMessage, duration, alertType) {
                /** @type {?} */
                var alertRef = new AlertRef(alertMessage, actionMessage, duration, alertType);
                this.alerts.push(alertRef);
                this.alerts$.next(this.alerts);
                if (alertRef.duration > 0) {
                    this._setTimeout(alertRef);
                }
                return alertRef;
            };
        /**
         * @private
         * @param {?} alert
         * @return {?}
         */
        AlertService.prototype._setTimeout = /**
         * @private
         * @param {?} alert
         * @return {?}
         */
            function (alert) {
                var _this = this;
                window.setTimeout(( /**
                 * @return {?}
                 */function () {
                    _this.removeAlert(alert);
                }), alert.duration);
            };
        /**
         * @param {?} alert
         * @return {?}
         */
        AlertService.prototype.removeAlert = /**
         * @param {?} alert
         * @return {?}
         */
            function (alert) {
                this.alerts = this.alerts.filter(( /**
                 * @param {?} x
                 * @return {?}
                 */function (x) { return x !== alert; }));
                this.alerts$.next(this.alerts);
            };
        AlertService.decorators = [
            { type: core.Injectable }
        ];
        /** @nocollapse */
        AlertService.ctorParameters = function () { return []; };
        return AlertService;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var AlertComponent = /** @class */ (function () {
        function AlertComponent(alertService, flugeeService) {
            this.alertService = alertService;
            this.flugeeService = flugeeService;
            this.alerts$ = alertService.alerts$;
        }
        /**
         * @param {?} alert
         * @return {?}
         */
        AlertComponent.prototype.onLinkClick = /**
         * @param {?} alert
         * @return {?}
         */
            function (alert) {
                alert.onAction();
            };
        /**
         * @param {?} alert
         * @return {?}
         */
        AlertComponent.prototype.getCssClass = /**
         * @param {?} alert
         * @return {?}
         */
            function (alert) {
                return {
                    'alert--success': AlertType.Success === alert.alertType,
                    'alert--error': AlertType.Error === alert.alertType,
                    'alert--warning': AlertType.Warning === alert.alertType,
                    'alert--info': AlertType.Info === alert.alertType,
                };
            };
        /**
         * @param {?} alert
         * @return {?}
         */
        AlertComponent.prototype.onClose = /**
         * @param {?} alert
         * @return {?}
         */
            function (alert) {
                this.alertService.removeAlert(alert);
                alert.onClose();
            };
        /**
         * @return {?}
         */
        AlertComponent.prototype.ngOnInit = /**
         * @return {?}
         */
            function () {
                var _this = this;
                this.flugeeService.direction$.subscribe(( /**
                 * @param {?} data
                 * @return {?}
                 */function (data) {
                    _this.dirState = data;
                }));
            };
        AlertComponent.decorators = [
            { type: core.Component, args: [{
                        // tslint:disable-next-line:component-selector
                        selector: 'cmx-alert',
                        template: "<div *ngFor=\"let alert of alerts$ | async\" class=\"alert\" [ngClass]=\"getCssClass(alert)\" dir={{dirState}}>\n  <div class=\"alert__text\">{{alert.alertMessage}} <span class=\"alert__link\" (click)=\"onLinkClick(alert)\">{{alert.actionMessage}}</span></div>\n  <div class=\"alert__close\" (click)=\"onClose(alert)\"><i class=\"alert__icon cmx-icon-close\"></i></div>\n</div>",
                        styles: ["@import url(https://www.cemexgo.com/cdn/cmx-dls-icons.css);@import url(https://www.cemexgo.com/cdn/cmx-fonts.css);.alert{width:100%;min-height:32px;color:#fff;font-size:.875rem;font-weight:700;line-height:1rem;position:relative;margin-bottom:10px;font-family:Roboto-Medium,sans-serif}.alert--error{background:#ee3d42}.alert--success{background:#7ac943}.alert--warning{background:#fbb03b}.alert--info{background:#3fa9f5}.alert__text{padding:8px 16px;font-size:.875rem;line-height:1rem;width:calc(100% - 70px);color:#fff}.alert__link{font-size:.875rem;font-weight:700;color:#fff;line-height:1rem;text-decoration:underline;cursor:pointer}.alert__close{position:absolute;right:10px;top:10px;cursor:pointer}.alert__icon{color:#fff}.alert--rtl,.alert[dir=rtl]{padding:8px 35px}"]
                    }] }
        ];
        /** @nocollapse */
        AlertComponent.ctorParameters = function () {
            return [
                { type: AlertService },
                { type: cmxFlugeeV7.CmxFlugeeService }
            ];
        };
        return AlertComponent;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var AlertModule = /** @class */ (function () {
        function AlertModule() {
        }
        /**
         * @return {?}
         */
        AlertModule.forRoot = /**
         * @return {?}
         */
            function () {
                return {
                    ngModule: AlertModule,
                    providers: [
                        AlertService
                    ]
                };
            };
        AlertModule.decorators = [
            { type: core.NgModule, args: [{
                        imports: [common.CommonModule],
                        declarations: [
                            AlertComponent,
                        ],
                        exports: [
                            AlertComponent,
                        ]
                    },] }
        ];
        return AlertModule;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */

    exports.AlertModule = AlertModule;
    exports.AlertService = AlertService;
    exports.Alert = Alert;
    exports.AlertType = AlertType;
    exports.ɵa = AlertComponent;

    Object.defineProperty(exports, '__esModule', { value: true });

})));

//# sourceMappingURL=cemex-cmx-alert-v7.umd.js.map