{"version":3,"sources":["ng://@cemex/cmx-dialog-v7/lib/services/cmx-dialog.service.ts","ng://@cemex/cmx-dialog-v7/lib/components/cmx-dialog/cmx-dialog.component.ts","ng://@cemex/cmx-dialog-v7/lib/components/cmx-dialog-body/cmx-dialog-body.component.ts","ng://@cemex/cmx-dialog-v7/lib/components/cmx-dialog-confirmation/cmx-dialog-confirmation.component.ts","node_modules/tslib/tslib.es6.js","ng://@cemex/cmx-dialog-v7/lib/components/cmx-dialog-footer/cmx-dialog-footer.component.ts","ng://@cemex/cmx-dialog-v7/lib/components/cmx-dialog-header/cmx-dialog-header.component.ts","ng://@cemex/cmx-dialog-v7/lib/services/cmx-dialog-generator.service.ts","ng://@cemex/cmx-dialog-v7/lib/cmx-dialog.module.ts"],"names":["CmxDialogService","this","cmxDialogs","Array","prototype","addDialog","cmxDialog","hideLastDialog","push","removeDialog","showLastDialog","splice","length","closeAllDialogs","i","close","show","hide","Injectable","args","providedIn","DataDismissDialogDirective","dialog","onClick","$event","Directive","selector","CmxDialogComponent","decorators","type","Host","HostListener","_renderer","_cmxDialogService","isRTL","dirAttr","width","minWidth","maxWidth","height","minHeight","maxHeight","backgroundColor","enableClose","enableHeader","enableFooter","showDialog","afterOpenedSubject","Subject","afterOpened$","asObservable","afterClosedSubject","afterClosed$","undefined","rtl","Object","defineProperty","_rtl","$value","open","next","afterOpened","enableBackgroundScroll","afterClosed","returnFalse","value","setStyle","document","getElementsByTagName","Component","template","Renderer2","Optional","Inject","HostBinding","Input","CmxDialogBodyComponent","Success","Warning","Error","CmxDialogConfirmationComponent","confirmationType","ConfirmationType","_okLabel","subscriptions","ngOnInit","_this","subscribe","result","message","messageDetail","ngOnDestroy","_b","__values","o","m","Symbol","iterator","call","done","tslib_1.__values","_c","unsubscribe","openAsSuccess","openAsWarning","openAsError","ok_click","ViewChild","CmxDialogFooterComponent","widthStyle","CmxDialogHeaderComponent","CmxDialogGeneratorService","dialogDelay","defaultSuccessMessage","defaultWarningMessage","defaultErrorMessage","defaultErrorMessageDetail","createConfirmationDialog","viewContainerRef","componentFactoryResolver","options","componentFactory","resolveComponentFactory","component","createComponent","setDialogSubscriptions","openConfirmationDialog","createCustomDialog","componentTemplate","setDialogComponent","setDialogComponentTimer","console","log","setTimeout","dialogHeader","nativeElement","innerHTML","dialogFooter","dialogBody","CmxDialogModule","NgModule","imports","CommonModule","FormsModule","ReactiveFormsModule","CmxButtonModule","exports","declarations"],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\n\nimport { CmxDialogComponent } from './../components/cmx-dialog/cmx-dialog.component';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class CmxDialogService {\n\n    private cmxDialogs: CmxDialogComponent[];\n\n    constructor() {\n        this.cmxDialogs = new Array<CmxDialogComponent>();\n    }\n\n    public addDialog(cmxDialog: CmxDialogComponent): void {\n        this.hideLastDialog();\n        this.cmxDialogs.push(cmxDialog);\n    }\n\n    public removeDialog(cmxDialog: CmxDialogComponent, showLastDialog: boolean): void {\n        this.cmxDialogs.splice(this.cmxDialogs.length - 1, 1);\n        if (showLastDialog) {\n            this.showLastDialog();\n        }\n    }\n\n    public closeAllDialogs(): void {\n        for (let i: number = this.cmxDialogs.length - 1; i >= 0; i--) {\n            this.cmxDialogs[i].close(false);\n        }\n    }\n\n    private showLastDialog(): void {\n        if (this.cmxDialogs.length > 0) {\n            this.cmxDialogs[this.cmxDialogs.length - 1].show();\n        }\n    }\n\n    private hideLastDialog(): void {\n        if (this.cmxDialogs.length > 0) {\n            this.cmxDialogs[this.cmxDialogs.length - 1].hide();\n        }\n    }\n}\n","import {\n    Component,\n    Input,\n    HostBinding,\n    Directive,\n    HostListener,\n    Host,\n    Optional,\n    Inject,\n    Renderer2,\n} from '@angular/core';\n\nimport {\n    Subject,\n    Observable,\n} from 'rxjs';\n\nimport { CmxDialogService } from './../../services/cmx-dialog.service';\n\n@Directive({\n    // tslint:disable-next-line\n    selector: '[data-dismiss-dialog]',\n})\nexport class DataDismissDialogDirective {\n\n    constructor(\n        @Host() private dialog: CmxDialogComponent,\n    ) { }\n\n    @HostListener('click', ['$event']) public onClick($event: any): void {\n        if (this.dialog) {\n            this.dialog.close();\n        }\n    }\n}\n\nexport interface IDialogOptions {\n    afterClosed?: any;\n    afterOpened?: any;\n}\n\n// tslint:disable-next-line:max-classes-per-file\n@Component({\n    selector: 'cmx-dialog',\n    styleUrls: ['./../../../../../../../../../scssv4/cmx-components/cmx-dialog/v7/cmx-dialog.component.scss'],\n    templateUrl: './cmx-dialog.component.html',\n})\nexport class CmxDialogComponent {\n    @HostBinding('attr.dir') public dirAttr = 'auto';\n\n    @Input()\n    get rtl(): boolean {\n        return this._rtl;\n    }\n    set rtl($value: boolean) {\n        if ($value !== undefined) {\n            this.dirAttr = $value ? 'rtl' : 'ltr';\n            this._rtl = $value;\n        }\n    }\n\n    @Input() public width = '784px';\n    @Input() public minWidth = 'auto';\n    @Input() public maxWidth = '784px';\n    @Input() public height = '510px';\n    @Input() public minHeight = 'auto';\n    @Input() public maxHeight = '80%';\n    @Input() public backgroundColor = '#6E6E6E';\n    @Input() public enableClose = true;\n    @Input() public enableHeader = false;\n    @Input() public enableFooter = false;\n\n    public showDialog = false;\n    private afterOpenedSubject: Subject<boolean> = new Subject<boolean>();\n    private afterOpened$: Observable<boolean> = this.afterOpenedSubject.asObservable();\n    private afterClosedSubject: Subject<boolean> = new Subject<boolean>();\n    private afterClosed$: Observable<boolean> = this.afterClosedSubject.asObservable();\n    private _rtl: boolean;\n\n    constructor(\n        private _renderer: Renderer2,\n        private _cmxDialogService: CmxDialogService,\n        @Optional() @Inject('RTL') isRTL: boolean,\n    ) {\n        if (isRTL !== undefined) {\n            this.rtl = isRTL;\n        }\n    }\n\n    public open(): void {\n        this._cmxDialogService.addDialog(this);\n        this.show();\n        this.afterOpenedSubject.next(true);\n    }\n\n    public afterOpened(): Observable<boolean> {\n        return this.afterOpened$;\n    }\n\n    public close(showLastDialog: boolean = true): void {\n        this._cmxDialogService.removeDialog(this, showLastDialog);\n        this.hide();\n        this.afterClosedSubject.next(true);\n    }\n\n    public hide(): void {\n        this.enableBackgroundScroll(true);\n        this.showDialog = false;\n    }\n\n    public show(): void {\n        this.enableBackgroundScroll(false);\n        this.showDialog = true;\n    }\n\n    public closeAllDialogs(): void {\n        this._cmxDialogService.closeAllDialogs();\n    }\n\n    public afterClosed(): Observable<boolean> {\n        return this.afterClosed$;\n    }\n\n    public returnFalse(): boolean {\n        return false;\n    }\n\n    private enableBackgroundScroll(value: boolean): void {\n        if (value) {\n            this._renderer.setStyle(document.getElementsByTagName('BODY')[0], 'overflow', '');\n        } else {\n            this._renderer.setStyle(document.getElementsByTagName('BODY')[0], 'overflow', 'hidden');\n        }\n    }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'cmx-dialog-body',\n    template: '<ng-content></ng-content>',\n})\nexport class CmxDialogBodyComponent {\n    constructor() { }\n\n}\n","import {\n    Component,\n    Input,\n    ViewChild,\n    HostBinding,\n    Optional,\n    Inject,\n    OnInit,\n    OnDestroy,\n} from '@angular/core';\n\nimport { CmxDialogComponent } from './../cmx-dialog/cmx-dialog.component';\n\nexport enum ConfirmationType {\n    Success = 1,\n    Warning = 2,\n    Error = 3,\n}\n\nexport interface IConfirmationDialogOptions {\n    type: ConfirmationType;\n    message?: string;\n    messageDetail?: string;\n    afterClosed?: any;\n    afterOpened?: any;\n}\n\n@Component({\n    selector: 'cmx-dialog-confirmation',\n    styleUrls: ['./../../../../../../../../../scssv4/cmx-components/cmx-dialog/v4/cmx-dialog-confirmation.component.scss'],\n    templateUrl: './cmx-dialog-confirmation.component.html',\n})\nexport class CmxDialogConfirmationComponent implements OnInit, OnDestroy {\n    @HostBinding('attr.dir') public dirAttr = 'auto';\n    @ViewChild(CmxDialogComponent) public dialog: CmxDialogComponent;\n\n    @Input()\n    get rtl(): boolean {\n        return this._rtl;\n    }\n    set rtl($value: boolean) {\n        if ($value !== undefined) {\n            this.dirAttr = $value ? 'rtl' : 'ltr';\n            this._rtl = $value;\n        }\n    }\n\n    @Input()\n    get okLabel(): string {\n        return this._okLabel;\n    }\n    set okLabel($value: string) {\n        if ($value !== undefined) {\n            this._okLabel = $value;\n        }\n    }\n\n    @Input() public width: string;\n    @Input() public minWidth: string;\n    @Input() public maxWidth: string;\n\n    @Input() public height = '400px';\n    @Input() public minHeight = '400px';\n    @Input() public maxHeight: string;\n\n    @Input() public backgroundColor: string;\n    @Input() public enableClose: boolean;\n    @Input() public enableHeader = false;\n    @Input() public enableFooter = true;\n\n    public confirmationType: any = ConfirmationType;\n    public type: ConfirmationType;\n    public message: string;\n    public _okLabel = 'Ok';\n    public messageDetail: string;\n\n    private _rtl: boolean;\n    private subscriptions: any[] = [];\n\n    constructor(\n        @Optional() @Inject('RTL') isRTL: boolean,\n    ) {\n        if (isRTL !== undefined) {\n            this.rtl = isRTL;\n        }\n    }\n\n    public ngOnInit(): void {\n        this.width = this.width || this.dialog.width;\n        this.minWidth = this.minWidth || this.dialog.minWidth;\n        this.maxWidth = this.maxWidth || this.dialog.maxWidth;\n\n        this.height = this.height || this.dialog.height;\n        this.minHeight = this.minHeight || this.dialog.minHeight;\n        this.maxHeight = this.maxHeight || this.dialog.maxHeight;\n\n        this.backgroundColor = this.backgroundColor || this.dialog.backgroundColor;\n        this.enableClose = this.enableClose || this.dialog.enableClose;\n        this.enableHeader = this.enableHeader || this.dialog.enableHeader;\n        this.enableFooter = this.enableFooter || this.dialog.enableFooter;\n\n        this.rtl = this.rtl || this.dialog.rtl;\n\n        this.subscriptions.push(this.dialog.afterClosed().subscribe((result: boolean) => {\n            this.message = '';\n            this.messageDetail = '';\n        }));\n    }\n\n    public ngOnDestroy(): void {\n        for (const subscription of this.subscriptions) {\n            subscription.unsubscribe();\n        }\n    }\n\n    public openAsSuccess(message: string): void {\n        this.type = this.confirmationType.Success;\n        this.message = message;\n        this.dialog.open();\n    }\n\n    public openAsWarning(message: string): void {\n        this.type = this.confirmationType.Warning;\n        this.message = message;\n        this.dialog.open();\n    }\n\n    public openAsError(message: string, messageDetail: string): void {\n        this.type = this.confirmationType.Error;\n        this.message = message;\n        this.messageDetail = messageDetail;\n        this.dialog.open();\n    }\n\n    public ok_click(): void {\n        this.dialog.close();\n    }\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Component, HostBinding } from '@angular/core';\n\n@Component({\n    selector: 'cmx-dialog-footer',\n    template: `<ng-content style='width: 100%'></ng-content>`,\n})\nexport class CmxDialogFooterComponent {\n    @HostBinding('style.width') public widthStyle = '100%';\n\n    constructor() { }\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'cmx-dialog-header',\n    template: '<ng-content></ng-content>',\n})\nexport class CmxDialogHeaderComponent {\n\n    constructor() { }\n\n}\n","import {\n    Injectable,\n    ComponentFactoryResolver,\n    ViewContainerRef,\n    ComponentFactory,\n    ComponentRef,\n} from '@angular/core';\n\nimport { CmxDialogComponent, IDialogOptions } from './../components/cmx-dialog/cmx-dialog.component';\nimport { CmxDialogConfirmationComponent } from '../components/cmx-dialog-confirmation/cmx-dialog-confirmation.component';\nimport { ConfirmationType, IConfirmationDialogOptions } from '../components/cmx-dialog-confirmation/cmx-dialog-confirmation.component';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class CmxDialogGeneratorService {\n\n    private dialogDelay = 100;\n    private defaultSuccessMessage = 'This is a dynamically generated confirmation success dialog';\n    private defaultWarningMessage = 'This is a dynamically generated confirmation warning dialog';\n    private defaultErrorMessage = 'This is a dynamically generated confirmation error dialog';\n    private defaultErrorMessageDetail = 'This is a message detail';\n\n    public createConfirmationDialog(\n        viewContainerRef: ViewContainerRef,\n        componentFactoryResolver: ComponentFactoryResolver,\n        options: IConfirmationDialogOptions): CmxDialogConfirmationComponent {\n        // tslint:disable-next-line:max-line-length\n        const componentFactory: ComponentFactory<CmxDialogConfirmationComponent> = componentFactoryResolver.resolveComponentFactory(CmxDialogConfirmationComponent);\n        const componentRef: ComponentRef<CmxDialogConfirmationComponent> = viewContainerRef.createComponent(componentFactory);\n\n        // tslint:disable-next-line:typedef\n        const component = (componentRef.instance as CmxDialogConfirmationComponent);\n        this.setDialogSubscriptions(options, component.dialog);\n        this.openConfirmationDialog(options, component);\n        return component;\n    }\n\n    /* experimental */\n    public createCustomDialog(\n        viewContainerRef: ViewContainerRef,\n        componentFactoryResolver: ComponentFactoryResolver,\n        componentTemplate: CmxDialogComponent,\n        options: IDialogOptions): CmxDialogComponent {\n\n        const componentFactory: ComponentFactory<CmxDialogComponent> =\n            componentFactoryResolver.resolveComponentFactory(CmxDialogComponent);\n        const componentRef: ComponentRef<CmxDialogComponent> = viewContainerRef.createComponent(componentFactory);\n        // tslint:disable-next-line:typedef\n        const component = (componentRef.instance as CmxDialogComponent);\n\n        if (!(componentTemplate instanceof CmxDialogComponent)) {\n            return component;\n        }\n        this.setDialogComponent(component, componentTemplate);\n        this.setDialogComponentTimer(options, component);\n        return component;\n    }\n\n    private setDialogSubscriptions(options: any, component: any): void {\n        if (options.afterClosed) {\n            component.afterClosed().subscribe(options.afterClosed());\n        }\n        if (options.afterOpened) {\n            component.afterOpened().subscribe(options.afterOpened());\n        }\n    }\n\n    private openConfirmationDialog(options: any, component: any): void {\n        if (options.type === ConfirmationType.Success) {\n            component.openAsSuccess(options.message ? options.message : this.defaultSuccessMessage);\n        } else if (options.type === ConfirmationType.Warning) {\n            component.openAsWarning(options.message ? options.message : this.defaultWarningMessage);\n        } else if (options.type === ConfirmationType.Error) {\n            component.openAsError(options.message ? options.message : this.defaultErrorMessage,\n                options.messageDetail ? options.messageDetail : this.defaultErrorMessageDetail);\n        }\n    }\n\n    private setDialogComponent(component: any, componentTemplate: any): void {\n        component.enableHeader = componentTemplate.enableHeader;\n        component.enableFooter = componentTemplate.enableFooter;\n        component.enableClose = componentTemplate.enableClose;\n        component.backgroundColor = componentTemplate.backgroundColor;\n        component.rtl = componentTemplate.rtl;\n        component.dirAttr = componentTemplate.dirAttr;\n\n        console.log(component);\n\n        if (component.enableHeader) {\n            setTimeout(() => {\n                component.dialogHeader.nativeElement.innerHTML = componentTemplate.dialogHeader.nativeElement.innerHTML;\n            }, this.dialogDelay);\n        }\n        if (component.enableFooter) {\n            setTimeout(() => {\n                component.dialogFooter.nativeElement.innerHTML = componentTemplate.dialogFooter.nativeElement.innerHTML;\n            }, this.dialogDelay);\n        }\n\n        setTimeout(() => {\n            component.dialogBody.nativeElement.innerHTML = componentTemplate.dialogBody.nativeElement.innerHTML;\n        }, this.dialogDelay);\n\n    }\n\n    private setDialogComponentTimer(options: any, component: any): void {\n        setTimeout(() => {\n            this.setDialogSubscriptions(options, component);\n            component.open();\n        }, this.dialogDelay);\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { CmxButtonModule } from '@cemex/cmx-button-v4/dist';\n\nimport { CmxDialogComponent } from './components/cmx-dialog/cmx-dialog.component';\nimport { CmxDialogConfirmationComponent } from './components/cmx-dialog-confirmation/cmx-dialog-confirmation.component';\nimport { CmxDialogHeaderComponent } from './components/cmx-dialog-header/cmx-dialog-header.component';\nimport { CmxDialogBodyComponent } from './components/cmx-dialog-body/cmx-dialog-body.component';\nimport { CmxDialogFooterComponent } from './components/cmx-dialog-footer/cmx-dialog-footer.component';\nimport { DataDismissDialogDirective } from './components/cmx-dialog/cmx-dialog.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        CmxButtonModule,\n    ],\n    exports: [\n        CmxDialogComponent,\n        CmxDialogConfirmationComponent,\n        CmxDialogHeaderComponent,\n        CmxDialogBodyComponent,\n        CmxDialogFooterComponent,\n        DataDismissDialogDirective,\n    ],\n    declarations: [\n        CmxDialogComponent,\n        CmxDialogConfirmationComponent,\n        CmxDialogHeaderComponent,\n        CmxDialogBodyComponent,\n        CmxDialogFooterComponent,\n        DataDismissDialogDirective,\n    ],\n})\nexport class CmxDialogModule { }\n"]}