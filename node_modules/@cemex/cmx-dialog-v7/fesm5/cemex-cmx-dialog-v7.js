import { Subject } from 'rxjs';
import { __values } from 'tslib';
import { CommonModule } from '@angular/common';
import { Injectable, Component, Input, HostBinding, Directive, HostListener, Host, Optional, Inject, Renderer2, NgModule, defineInjectable, ViewChild } from '@angular/core';
import { FormsModule, ReactiveFormsModule } from '@angular/forms';
import { CmxButtonModule } from '@cemex/cmx-button-v4/dist';

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var CmxDialogService = /** @class */ (function () {
    function CmxDialogService() {
        this.cmxDialogs = new Array();
    }
    /**
     * @param {?} cmxDialog
     * @return {?}
     */
    CmxDialogService.prototype.addDialog = /**
     * @param {?} cmxDialog
     * @return {?}
     */
    function (cmxDialog) {
        this.hideLastDialog();
        this.cmxDialogs.push(cmxDialog);
    };
    /**
     * @param {?} cmxDialog
     * @param {?} showLastDialog
     * @return {?}
     */
    CmxDialogService.prototype.removeDialog = /**
     * @param {?} cmxDialog
     * @param {?} showLastDialog
     * @return {?}
     */
    function (cmxDialog, showLastDialog) {
        this.cmxDialogs.splice(this.cmxDialogs.length - 1, 1);
        if (showLastDialog) {
            this.showLastDialog();
        }
    };
    /**
     * @return {?}
     */
    CmxDialogService.prototype.closeAllDialogs = /**
     * @return {?}
     */
    function () {
        for (var i = this.cmxDialogs.length - 1; i >= 0; i--) {
            this.cmxDialogs[i].close(false);
        }
    };
    /**
     * @private
     * @return {?}
     */
    CmxDialogService.prototype.showLastDialog = /**
     * @private
     * @return {?}
     */
    function () {
        if (this.cmxDialogs.length > 0) {
            this.cmxDialogs[this.cmxDialogs.length - 1].show();
        }
    };
    /**
     * @private
     * @return {?}
     */
    CmxDialogService.prototype.hideLastDialog = /**
     * @private
     * @return {?}
     */
    function () {
        if (this.cmxDialogs.length > 0) {
            this.cmxDialogs[this.cmxDialogs.length - 1].hide();
        }
    };
    CmxDialogService.decorators = [
        { type: Injectable, args: [{
                    providedIn: 'root',
                },] }
    ];
    /** @nocollapse */
    CmxDialogService.ctorParameters = function () { return []; };
    /** @nocollapse */ CmxDialogService.ngInjectableDef = defineInjectable({ factory: function CmxDialogService_Factory() { return new CmxDialogService(); }, token: CmxDialogService, providedIn: "root" });
    return CmxDialogService;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var DataDismissDialogDirective = /** @class */ (function () {
    function DataDismissDialogDirective(dialog) {
        this.dialog = dialog;
    }
    /**
     * @param {?} $event
     * @return {?}
     */
    DataDismissDialogDirective.prototype.onClick = /**
     * @param {?} $event
     * @return {?}
     */
    function ($event) {
        if (this.dialog) {
            this.dialog.close();
        }
    };
    DataDismissDialogDirective.decorators = [
        { type: Directive, args: [{
                    // tslint:disable-next-line
                    selector: '[data-dismiss-dialog]',
                },] }
    ];
    /** @nocollapse */
    DataDismissDialogDirective.ctorParameters = function () { return [
        { type: CmxDialogComponent, decorators: [{ type: Host }] }
    ]; };
    DataDismissDialogDirective.propDecorators = {
        onClick: [{ type: HostListener, args: ['click', ['$event'],] }]
    };
    return DataDismissDialogDirective;
}());
// tslint:disable-next-line:max-classes-per-file
var CmxDialogComponent = /** @class */ (function () {
    function CmxDialogComponent(_renderer, _cmxDialogService, isRTL) {
        this._renderer = _renderer;
        this._cmxDialogService = _cmxDialogService;
        this.dirAttr = 'auto';
        this.width = '784px';
        this.minWidth = 'auto';
        this.maxWidth = '784px';
        this.height = '510px';
        this.minHeight = 'auto';
        this.maxHeight = '80%';
        this.backgroundColor = '#6E6E6E';
        this.enableClose = true;
        this.enableHeader = false;
        this.enableFooter = false;
        this.showDialog = false;
        this.afterOpenedSubject = new Subject();
        this.afterOpened$ = this.afterOpenedSubject.asObservable();
        this.afterClosedSubject = new Subject();
        this.afterClosed$ = this.afterClosedSubject.asObservable();
        if (isRTL !== undefined) {
            this.rtl = isRTL;
        }
    }
    Object.defineProperty(CmxDialogComponent.prototype, "rtl", {
        get: /**
         * @return {?}
         */
        function () {
            return this._rtl;
        },
        set: /**
         * @param {?} $value
         * @return {?}
         */
        function ($value) {
            if ($value !== undefined) {
                this.dirAttr = $value ? 'rtl' : 'ltr';
                this._rtl = $value;
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    CmxDialogComponent.prototype.open = /**
     * @return {?}
     */
    function () {
        this._cmxDialogService.addDialog(this);
        this.show();
        this.afterOpenedSubject.next(true);
    };
    /**
     * @return {?}
     */
    CmxDialogComponent.prototype.afterOpened = /**
     * @return {?}
     */
    function () {
        return this.afterOpened$;
    };
    /**
     * @param {?=} showLastDialog
     * @return {?}
     */
    CmxDialogComponent.prototype.close = /**
     * @param {?=} showLastDialog
     * @return {?}
     */
    function (showLastDialog) {
        if (showLastDialog === void 0) { showLastDialog = true; }
        this._cmxDialogService.removeDialog(this, showLastDialog);
        this.hide();
        this.afterClosedSubject.next(true);
    };
    /**
     * @return {?}
     */
    CmxDialogComponent.prototype.hide = /**
     * @return {?}
     */
    function () {
        this.enableBackgroundScroll(true);
        this.showDialog = false;
    };
    /**
     * @return {?}
     */
    CmxDialogComponent.prototype.show = /**
     * @return {?}
     */
    function () {
        this.enableBackgroundScroll(false);
        this.showDialog = true;
    };
    /**
     * @return {?}
     */
    CmxDialogComponent.prototype.closeAllDialogs = /**
     * @return {?}
     */
    function () {
        this._cmxDialogService.closeAllDialogs();
    };
    /**
     * @return {?}
     */
    CmxDialogComponent.prototype.afterClosed = /**
     * @return {?}
     */
    function () {
        return this.afterClosed$;
    };
    /**
     * @return {?}
     */
    CmxDialogComponent.prototype.returnFalse = /**
     * @return {?}
     */
    function () {
        return false;
    };
    /**
     * @private
     * @param {?} value
     * @return {?}
     */
    CmxDialogComponent.prototype.enableBackgroundScroll = /**
     * @private
     * @param {?} value
     * @return {?}
     */
    function (value) {
        if (value) {
            this._renderer.setStyle(document.getElementsByTagName('BODY')[0], 'overflow', '');
        }
        else {
            this._renderer.setStyle(document.getElementsByTagName('BODY')[0], 'overflow', 'hidden');
        }
    };
    CmxDialogComponent.decorators = [
        { type: Component, args: [{
                    selector: 'cmx-dialog',
                    template: "<div class=\"cmx-dialog__background\" (click)=\"enableClose ? close() : returnFalse()\" [ngStyle]=\"{\n    'background-color': backgroundColor}\" [class.cmx-dialog__background--show]=\"showDialog\"\n  [class.cmx-dialog__background--hide]=\"!showDialog\"></div>\n\n<div class=\"cmx-dialog__container\" [ngStyle]=\"{\n'width': width,\n'min-width': minWidth,\n'max-width': maxWidth,\n'height': height,\n'min-height': minHeight,\n'max-height': maxHeight}\" [class.cmx-dialog__container--show]=\"showDialog\"\n  [class.cmx-dialog__container--hide]=\"!showDialog\">\n\n  <button *ngIf=\"enableClose\" cmx-link-icon class=\"cmx-dialog__container__close-button\" data-dismiss-dialog\n    srText=\"Close\">\n    <span class=\"cmx-icon-close\" aria-hidden=\"true\"></span>\n  </button>\n\n  <div class=\"cmx-dialog__container__header\" *ngIf=\"enableHeader\">\n    <ng-content select=\"cmx-dialog-header\"></ng-content>\n  </div>\n  <div class=\"cmx-dialog__container__body\">\n    <ng-content select=\"cmx-dialog-body\"></ng-content>\n  </div>\n  <div class=\"cmx-dialog__container__footer\" *ngIf=\"enableFooter\">\n    <ng-content style=\"width:100%;\" select=\"cmx-dialog-footer\"></ng-content>\n  </div>\n</div>\n",
                    styles: ["@import url(https://www.cemexgo.com/cdn/cmx-dls-icons.css);html{font-family:sans-serif;line-height:1.15;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%;box-sizing:border-box;-ms-overflow-style:scrollbar;-webkit-tap-highlight-color:transparent}article,aside,details,figcaption,figure,footer,header,main,menu,nav,section{display:block}h1{margin:.67em 0}hr{box-sizing:content-box;height:0;overflow:visible}pre{font-family:monospace,monospace;font-size:1em;margin-top:0;margin-bottom:1rem;overflow:auto}a:active,a:hover{outline-width:0}abbr[title]{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace,monospace;font-size:1em}dfn{font-style:italic}mark{background-color:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}audio,canvas,video{display:inline-block}audio:not([controls]){display:none;height:0}img{border-style:none;vertical-align:middle}svg:not(:root){overflow:hidden}button,input,optgroup,select,textarea{font-family:sans-serif;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=reset],[type=submit],button,html [type=button]{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:ButtonText dotted 1px}progress{display:inline-block;vertical-align:baseline}textarea{overflow:auto;resize:vertical}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-cancel-button,[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}summary{display:list-item}[hidden],template{display:none}*,::after,::before{box-sizing:inherit}@-ms-viewport{width:device-width}body{margin:0;font-family:-apple-system,system-ui,BlinkMacSystemFont,\"Segoe UI\",Roboto,\"Helvetica Neue\",Arial,sans-serif;font-size:1rem;font-weight:400;line-height:1.5;color:#292b2c;background-color:#fff}[tabindex=\"-1\"]:focus{outline:0!important}dl,h1,h2,h3,h4,h5,h6,ol,p,ul{margin-top:0;margin-bottom:0}abbr[data-original-title],abbr[title]{cursor:help}address{margin-bottom:0;font-style:normal;line-height:inherit}ol ol,ol ul,ul ol,ul ul{margin-bottom:0}dt{font-weight:700}dd{margin-bottom:0;margin-left:0}blockquote{margin:0}a:focus,a:hover{color:#277eaf;text-decoration:underline}a:not([href]):not([tabindex]),a:not([href]):not([tabindex]):focus,a:not([href]):not([tabindex]):hover{color:inherit;text-decoration:none}a:not([href]):not([tabindex]):focus{outline:0}figure{margin:0 0 1rem}[role=button]{cursor:pointer}[role=button],a,area,button,input,label,select,summary,textarea{touch-action:manipulation}table{border-collapse:collapse;background-color:transparent}caption{padding-top:.75rem;padding-bottom:.75rem;color:#636c72;text-align:left;caption-side:bottom}th{text-align:left}label{display:inline-block;margin-bottom:.5rem}button:focus{outline:dotted 1px;outline:-webkit-focus-ring-color auto 5px}button,input,select,textarea{line-height:inherit}input[type=checkbox]:disabled,input[type=radio]:disabled{cursor:not-allowed}input[type=date],input[type=datetime-local],input[type=month],input[type=time]{-webkit-appearance:listbox}fieldset{min-width:0;padding:0;margin:0;border:0}legend{box-sizing:border-box;color:inherit;max-width:100%;white-space:normal;display:block;width:100%;padding:0;margin-bottom:.5rem;font-size:1.5rem;line-height:inherit}input[type=search]{-webkit-appearance:none}output{display:inline-block}[hidden]{display:none!important}.font-true-red{color:#ee3d42}.font-true-white{color:#fff}.font-true-black{color:#000}.font-true-blue{color:#003876}.font-medium-blue{color:#002a59}.font-medium-grey{color:#666}.font-dark-grey{color:#333}.font-bright-orange{color:#fbb03b}.font-bright-green{color:#7ac943}.font-bright-blue{color:#3fa9f5}.font-deep-blue{color:#001b3a}.bg__true-red{background-color:#ee3d42}.bg__true-white{background-color:#fff}.bg__true-black{background-color:#000}.bg__true-blue{background-color:#003876}.bg__medium-blue{background-color:#002a59}.bg__medium-grey{background-color:#666}.bg__dark-grey{background-color:#333}.bg__bright-orange{background-color:#fbb03b}.bg__bright-green{background-color:#7ac943}.bg__bright-blue{background-color:#3fa9f5}.bg__deep-blue{background-color:#001b3a}@font-face{font-family:Roboto;font-family:Roboto-Thin;font-weight:100}@font-face{font-family:Roboto;src:url(https://www.cemexgo.com/cdn/fonts/Roboto-Light.ttf);font-weight:300}@font-face{font-family:Roboto;src:url(https://www.cemexgo.com/cdn/fonts/Roboto-Regular.ttf);font-weight:400}@font-face{font-family:Roboto;src:url(https://www.cemexgo.com/cdn/fonts/Roboto-Italic.ttf);font-weight:400;font-style:italic}@font-face{font-family:Roboto;src:url(https://www.cemexgo.com/cdn/fonts/Roboto-Medium.ttf);font-weight:500}@font-face{font-family:Roboto;src:url(https://www.cemexgo.com/cdn/fonts/Roboto-Bold.ttf);font-weight:700}@font-face{font-family:Roboto;src:url(https://www.cemexgo.com/cdn/fonts/Roboto-Black.ttf);font-weight:800}.roboto-bold{font-family:Roboto;font-weight:700}.roboto-medium{font-family:Roboto;font-weight:500}.roboto-regular{font-family:Roboto;font-weight:400}.roboto-light{font-family:Roboto;font-weight:300}.roboto-thin{font-family:Roboto;font-weight:100}.roboto-italic{font-family:Roboto;font-style:italic}.font-bold{font-weight:700}.font-medium{font-weight:500}.font-regular{font-weight:400}.font-light{font-weight:300}.font-thin{font-weight:100}.font-italic{font-style:italic}.h1-role,h1{font-family:Roboto,sans-serif;font-size:1.875rem;line-height:1.875rem;font-weight:700;color:#001b3a}.h2-role,h2{font-family:Roboto,sans-serif;font-size:1.5rem;line-height:1.5rem;font-weight:500;color:#001b3a}.h3-role,h3{font-family:Roboto,sans-serif;font-size:1.125rem;line-height:1.125rem;font-weight:400;color:#001b3a}.h4-role,h4{font-family:Roboto,sans-serif;font-size:1rem;line-height:1rem;font-weight:400;color:#001b3a}.h5-role,h5{font-family:Roboto,sans-serif;font-size:.875rem;line-height:1rem;font-weight:500;color:#001b3a;text-transform:uppercase}.h6-role,h6{font-family:Roboto,sans-serif;font-size:.75rem;line-height:1rem;font-weight:500;color:#001b3a}.table-entry-strong{font-family:Roboto,sans-serif;font-size:.875rem;line-height:1rem;color:#333;font-weight:700}.breadcrumb{font-family:Roboto,sans-serif;font-size:1.125rem;color:#001b3a}a{background-color:transparent;-webkit-text-decoration-skip:objects;text-decoration:none;color:#3fa9f5}a:hover{text-decoration:underline;color:#3fa9f5}a:active{text-decoration:underline;color:#003876}a.disabled{text-decoration:none;color:#666;cursor:not-allowed}a.table-entry{font-size:.875rem;color:#3fa9f5}.link{text-decoration:none;color:#3fa9f5}.link:hover{text-decoration:underline;color:#3fa9f5}.link:active{text-decoration:underline;color:#003876}.link.disabled{text-decoration:none;color:#666;cursor:not-allowed}.table-entry{font-family:Roboto,sans-serif;line-height:1rem;font-size:.875rem;color:#333}.input-placeholder{font-family:Roboto,sans-serif;font-size:.875rem;line-height:1rem;color:#666}.input-text{font-family:Roboto,sans-serif;font-size:.875rem;line-height:1rem;color:#333}.size-14{font-size:.875rem}.size-48{font-size:3rem}.text-left{text-align:left!important}.text-right{text-align:right!important}.text-center{text-align:center!important}.flex-first{order:-1}.flex-last{order:1}.flex-unordered{order:0}.flex-row{flex-direction:row!important}.flex-column{flex-direction:column!important}.flex-row-reverse{flex-direction:row-reverse!important}.flex-column-reverse{flex-direction:column-reverse!important}.flex-wrap{flex-wrap:wrap!important}.flex-nowrap{flex-wrap:nowrap!important}.flex-wrap-reverse{flex-wrap:wrap-reverse!important}.justify-content-start{justify-content:flex-start!important}.justify-content-end{justify-content:flex-end!important}.justify-content-center{justify-content:center!important}.justify-content-between{justify-content:space-between!important}.justify-content-around{justify-content:space-around!important}.align-items-start{align-items:flex-start!important}.align-items-end{align-items:flex-end!important}.align-items-center{align-items:center!important}.align-items-baseline{align-items:baseline!important}.align-items-stretch{align-items:stretch!important}.align-content-start{align-content:flex-start!important}.align-content-end{align-content:flex-end!important}.align-content-center{align-content:center!important}.align-content-between{align-content:space-between!important}.align-content-around{align-content:space-around!important}.align-content-stretch{align-content:stretch!important}.align-self-auto{-ms-grid-row-align:auto!important;align-self:auto!important}.align-self-start{align-self:flex-start!important}.align-self-end{align-self:flex-end!important}.align-self-center{-ms-grid-row-align:center!important;align-self:center!important}.align-self-baseline{align-self:baseline!important}.align-self-stretch{-ms-grid-row-align:stretch!important;align-self:stretch!important}@media (min-width:576px){.text-xs-left{text-align:left!important}.text-xs-right{text-align:right!important}.text-xs-center{text-align:center!important}.flex-xs-first{order:-1}.flex-xs-last{order:1}.flex-xs-unordered{order:0}.flex-xs-row{flex-direction:row!important}.flex-xs-column{flex-direction:column!important}.flex-xs-row-reverse{flex-direction:row-reverse!important}.flex-xs-column-reverse{flex-direction:column-reverse!important}.flex-xs-wrap{flex-wrap:wrap!important}.flex-xs-nowrap{flex-wrap:nowrap!important}.flex-xs-wrap-reverse{flex-wrap:wrap-reverse!important}.justify-content-xs-start{justify-content:flex-start!important}.justify-content-xs-end{justify-content:flex-end!important}.justify-content-xs-center{justify-content:center!important}.justify-content-xs-between{justify-content:space-between!important}.justify-content-xs-around{justify-content:space-around!important}.align-items-xs-start{align-items:flex-start!important}.align-items-xs-end{align-items:flex-end!important}.align-items-xs-center{align-items:center!important}.align-items-xs-baseline{align-items:baseline!important}.align-items-xs-stretch{align-items:stretch!important}.align-content-xs-start{align-content:flex-start!important}.align-content-xs-end{align-content:flex-end!important}.align-content-xs-center{align-content:center!important}.align-content-xs-between{align-content:space-between!important}.align-content-xs-around{align-content:space-around!important}.align-content-xs-stretch{align-content:stretch!important}.align-self-xs-auto{-ms-grid-row-align:auto!important;align-self:auto!important}.align-self-xs-start{align-self:flex-start!important}.align-self-xs-end{align-self:flex-end!important}.align-self-xs-center{-ms-grid-row-align:center!important;align-self:center!important}.align-self-xs-baseline{align-self:baseline!important}.align-self-xs-stretch{-ms-grid-row-align:stretch!important;align-self:stretch!important}}@media (min-width:768px){.text-sm-left{text-align:left!important}.text-sm-right{text-align:right!important}.text-sm-center{text-align:center!important}.flex-sm-first{order:-1}.flex-sm-last{order:1}.flex-sm-unordered{order:0}.flex-sm-row{flex-direction:row!important}.flex-sm-column{flex-direction:column!important}.flex-sm-row-reverse{flex-direction:row-reverse!important}.flex-sm-column-reverse{flex-direction:column-reverse!important}.flex-sm-wrap{flex-wrap:wrap!important}.flex-sm-nowrap{flex-wrap:nowrap!important}.flex-sm-wrap-reverse{flex-wrap:wrap-reverse!important}.justify-content-sm-start{justify-content:flex-start!important}.justify-content-sm-end{justify-content:flex-end!important}.justify-content-sm-center{justify-content:center!important}.justify-content-sm-between{justify-content:space-between!important}.justify-content-sm-around{justify-content:space-around!important}.align-items-sm-start{align-items:flex-start!important}.align-items-sm-end{align-items:flex-end!important}.align-items-sm-center{align-items:center!important}.align-items-sm-baseline{align-items:baseline!important}.align-items-sm-stretch{align-items:stretch!important}.align-content-sm-start{align-content:flex-start!important}.align-content-sm-end{align-content:flex-end!important}.align-content-sm-center{align-content:center!important}.align-content-sm-between{align-content:space-between!important}.align-content-sm-around{align-content:space-around!important}.align-content-sm-stretch{align-content:stretch!important}.align-self-sm-auto{-ms-grid-row-align:auto!important;align-self:auto!important}.align-self-sm-start{align-self:flex-start!important}.align-self-sm-end{align-self:flex-end!important}.align-self-sm-center{-ms-grid-row-align:center!important;align-self:center!important}.align-self-sm-baseline{align-self:baseline!important}.align-self-sm-stretch{-ms-grid-row-align:stretch!important;align-self:stretch!important}}@media (min-width:1080px){.text-md-left{text-align:left!important}.text-md-right{text-align:right!important}.text-md-center{text-align:center!important}.flex-md-first{order:-1}.flex-md-last{order:1}.flex-md-unordered{order:0}.flex-md-row{flex-direction:row!important}.flex-md-column{flex-direction:column!important}.flex-md-row-reverse{flex-direction:row-reverse!important}.flex-md-column-reverse{flex-direction:column-reverse!important}.flex-md-wrap{flex-wrap:wrap!important}.flex-md-nowrap{flex-wrap:nowrap!important}.flex-md-wrap-reverse{flex-wrap:wrap-reverse!important}.justify-content-md-start{justify-content:flex-start!important}.justify-content-md-end{justify-content:flex-end!important}.justify-content-md-center{justify-content:center!important}.justify-content-md-between{justify-content:space-between!important}.justify-content-md-around{justify-content:space-around!important}.align-items-md-start{align-items:flex-start!important}.align-items-md-end{align-items:flex-end!important}.align-items-md-center{align-items:center!important}.align-items-md-baseline{align-items:baseline!important}.align-items-md-stretch{align-items:stretch!important}.align-content-md-start{align-content:flex-start!important}.align-content-md-end{align-content:flex-end!important}.align-content-md-center{align-content:center!important}.align-content-md-between{align-content:space-between!important}.align-content-md-around{align-content:space-around!important}.align-content-md-stretch{align-content:stretch!important}.align-self-md-auto{-ms-grid-row-align:auto!important;align-self:auto!important}.align-self-md-start{align-self:flex-start!important}.align-self-md-end{align-self:flex-end!important}.align-self-md-center{-ms-grid-row-align:center!important;align-self:center!important}.align-self-md-baseline{align-self:baseline!important}.align-self-md-stretch{-ms-grid-row-align:stretch!important;align-self:stretch!important}}@media (min-width:1320px){.text-lg-left{text-align:left!important}.text-lg-right{text-align:right!important}.text-lg-center{text-align:center!important}.flex-lg-first{order:-1}.flex-lg-last{order:1}.flex-lg-unordered{order:0}.flex-lg-row{flex-direction:row!important}.flex-lg-column{flex-direction:column!important}.flex-lg-row-reverse{flex-direction:row-reverse!important}.flex-lg-column-reverse{flex-direction:column-reverse!important}.flex-lg-wrap{flex-wrap:wrap!important}.flex-lg-nowrap{flex-wrap:nowrap!important}.flex-lg-wrap-reverse{flex-wrap:wrap-reverse!important}.justify-content-lg-start{justify-content:flex-start!important}.justify-content-lg-end{justify-content:flex-end!important}.justify-content-lg-center{justify-content:center!important}.justify-content-lg-between{justify-content:space-between!important}.justify-content-lg-around{justify-content:space-around!important}.align-items-lg-start{align-items:flex-start!important}.align-items-lg-end{align-items:flex-end!important}.align-items-lg-center{align-items:center!important}.align-items-lg-baseline{align-items:baseline!important}.align-items-lg-stretch{align-items:stretch!important}.align-content-lg-start{align-content:flex-start!important}.align-content-lg-end{align-content:flex-end!important}.align-content-lg-center{align-content:center!important}.align-content-lg-between{align-content:space-between!important}.align-content-lg-around{align-content:space-around!important}.align-content-lg-stretch{align-content:stretch!important}.align-self-lg-auto{-ms-grid-row-align:auto!important;align-self:auto!important}.align-self-lg-start{align-self:flex-start!important}.align-self-lg-end{align-self:flex-end!important}.align-self-lg-center{-ms-grid-row-align:center!important;align-self:center!important}.align-self-lg-baseline{align-self:baseline!important}.align-self-lg-stretch{-ms-grid-row-align:stretch!important;align-self:stretch!important}}@media (min-width:1560px){.text-xlg-left{text-align:left!important}.text-xlg-right{text-align:right!important}.text-xlg-center{text-align:center!important}.flex-xlg-first{order:-1}.flex-xlg-last{order:1}.flex-xlg-unordered{order:0}.flex-xlg-row{flex-direction:row!important}.flex-xlg-column{flex-direction:column!important}.flex-xlg-row-reverse{flex-direction:row-reverse!important}.flex-xlg-column-reverse{flex-direction:column-reverse!important}.flex-xlg-wrap{flex-wrap:wrap!important}.flex-xlg-nowrap{flex-wrap:nowrap!important}.flex-xlg-wrap-reverse{flex-wrap:wrap-reverse!important}.justify-content-xlg-start{justify-content:flex-start!important}.justify-content-xlg-end{justify-content:flex-end!important}.justify-content-xlg-center{justify-content:center!important}.justify-content-xlg-between{justify-content:space-between!important}.justify-content-xlg-around{justify-content:space-around!important}.align-items-xlg-start{align-items:flex-start!important}.align-items-xlg-end{align-items:flex-end!important}.align-items-xlg-center{align-items:center!important}.align-items-xlg-baseline{align-items:baseline!important}.align-items-xlg-stretch{align-items:stretch!important}.align-content-xlg-start{align-content:flex-start!important}.align-content-xlg-end{align-content:flex-end!important}.align-content-xlg-center{align-content:center!important}.align-content-xlg-between{align-content:space-between!important}.align-content-xlg-around{align-content:space-around!important}.align-content-xlg-stretch{align-content:stretch!important}.align-self-xlg-auto{-ms-grid-row-align:auto!important;align-self:auto!important}.align-self-xlg-start{align-self:flex-start!important}.align-self-xlg-end{align-self:flex-end!important}.align-self-xlg-center{-ms-grid-row-align:center!important;align-self:center!important}.align-self-xlg-baseline{align-self:baseline!important}.align-self-xlg-stretch{-ms-grid-row-align:stretch!important;align-self:stretch!important}}.cmx-dialog__container{font-family:Roboto,sans-serif;z-index:1401;box-shadow:0 .0625rem .1875rem rgba(0,0,0,.25);position:fixed;top:0;left:0;right:0;margin:5% auto;background:#fff;box-sizing:border-box;padding:2.5rem;display:flex;flex-direction:column}.cmx-dialog__container__close-button{background:0 0;border:none;color:#3fa9f5;display:block;height:22px;margin:0;padding:0;position:absolute;right:24px;top:24px;width:22px;z-index:1}.cmx-dialog__container__close-button .cmx-icon-close{font-size:24px;line-height:24px;height:24px;width:24px;display:block}.cmx-dialog__container__body{position:relative;overflow-y:auto;overflow-x:auto;flex-grow:1;padding:0 1rem}.cmx-dialog__container__body::-webkit-scrollbar{width:10px;background-color:rgba(0,0,0,0);-webkit-border-radius:100px}.cmx-dialog__container__body::-webkit-scrollbar:hover{background-color:rgba(0,0,0,.2)}.cmx-dialog__container__body::-webkit-scrollbar-thumb:vertical{background:rgba(0,0,0,.5);-webkit-border-radius:100px;background-clip:padding-box;border:2px solid transparent;min-height:10px}.cmx-dialog__container__body::-webkit-scrollbar-thumb:vertical:active{background:rgba(0,0,0,.61);-webkit-border-radius:100px}.cmx-dialog__container__footer{display:flex;justify-content:flex-end;align-items:flex-end;min-height:3.625rem}.cmx-dialog__container--show{display:flex}.cmx-dialog__container--hide{display:none}.cmx-dialog__background{opacity:.75;position:fixed;width:100vw;height:100vh;top:0;left:0;display:block;cursor:default;z-index:1400}.cmx-dialog__background--show{display:block}.cmx-dialog__background--hide{display:none}@media (max-width:1079px){.cmx-dialog__container{margin:0;width:100%!important;min-width:unset!important;max-width:unset!important;height:100%!important;min-height:unset!important;max-height:unset!important;padding:2.5rem .5rem 1rem}}:host{position:relative}:host::-webkit-scrollbar{width:10px;background-color:rgba(0,0,0,0);-webkit-border-radius:100px}:host::-webkit-scrollbar:hover{background-color:rgba(0,0,0,.2)}:host::-webkit-scrollbar-thumb:vertical{background:rgba(0,0,0,.5);-webkit-border-radius:100px;background-clip:padding-box;border:2px solid transparent;min-height:10px}:host::-webkit-scrollbar-thumb:vertical:active{background:rgba(0,0,0,.61);-webkit-border-radius:100px}:host[dir=rtl] .cmx-dialog__container__close-button{left:24px;right:auto;top:24px}"]
                }] }
    ];
    /** @nocollapse */
    CmxDialogComponent.ctorParameters = function () { return [
        { type: Renderer2 },
        { type: CmxDialogService },
        { type: Boolean, decorators: [{ type: Optional }, { type: Inject, args: ['RTL',] }] }
    ]; };
    CmxDialogComponent.propDecorators = {
        dirAttr: [{ type: HostBinding, args: ['attr.dir',] }],
        rtl: [{ type: Input }],
        width: [{ type: Input }],
        minWidth: [{ type: Input }],
        maxWidth: [{ type: Input }],
        height: [{ type: Input }],
        minHeight: [{ type: Input }],
        maxHeight: [{ type: Input }],
        backgroundColor: [{ type: Input }],
        enableClose: [{ type: Input }],
        enableHeader: [{ type: Input }],
        enableFooter: [{ type: Input }]
    };
    return CmxDialogComponent;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var CmxDialogBodyComponent = /** @class */ (function () {
    function CmxDialogBodyComponent() {
    }
    CmxDialogBodyComponent.decorators = [
        { type: Component, args: [{
                    selector: 'cmx-dialog-body',
                    template: '<ng-content></ng-content>'
                }] }
    ];
    /** @nocollapse */
    CmxDialogBodyComponent.ctorParameters = function () { return []; };
    return CmxDialogBodyComponent;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @enum {number} */
var ConfirmationType = {
    Success: 1,
    Warning: 2,
    Error: 3,
};
ConfirmationType[ConfirmationType.Success] = 'Success';
ConfirmationType[ConfirmationType.Warning] = 'Warning';
ConfirmationType[ConfirmationType.Error] = 'Error';
var CmxDialogConfirmationComponent = /** @class */ (function () {
    function CmxDialogConfirmationComponent(isRTL) {
        this.dirAttr = 'auto';
        this.height = '400px';
        this.minHeight = '400px';
        this.enableHeader = false;
        this.enableFooter = true;
        this.confirmationType = ConfirmationType;
        this._okLabel = 'Ok';
        this.subscriptions = [];
        if (isRTL !== undefined) {
            this.rtl = isRTL;
        }
    }
    Object.defineProperty(CmxDialogConfirmationComponent.prototype, "rtl", {
        get: /**
         * @return {?}
         */
        function () {
            return this._rtl;
        },
        set: /**
         * @param {?} $value
         * @return {?}
         */
        function ($value) {
            if ($value !== undefined) {
                this.dirAttr = $value ? 'rtl' : 'ltr';
                this._rtl = $value;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CmxDialogConfirmationComponent.prototype, "okLabel", {
        get: /**
         * @return {?}
         */
        function () {
            return this._okLabel;
        },
        set: /**
         * @param {?} $value
         * @return {?}
         */
        function ($value) {
            if ($value !== undefined) {
                this._okLabel = $value;
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    CmxDialogConfirmationComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this.width = this.width || this.dialog.width;
        this.minWidth = this.minWidth || this.dialog.minWidth;
        this.maxWidth = this.maxWidth || this.dialog.maxWidth;
        this.height = this.height || this.dialog.height;
        this.minHeight = this.minHeight || this.dialog.minHeight;
        this.maxHeight = this.maxHeight || this.dialog.maxHeight;
        this.backgroundColor = this.backgroundColor || this.dialog.backgroundColor;
        this.enableClose = this.enableClose || this.dialog.enableClose;
        this.enableHeader = this.enableHeader || this.dialog.enableHeader;
        this.enableFooter = this.enableFooter || this.dialog.enableFooter;
        this.rtl = this.rtl || this.dialog.rtl;
        this.subscriptions.push(this.dialog.afterClosed().subscribe((/**
         * @param {?} result
         * @return {?}
         */
        function (result) {
            _this.message = '';
            _this.messageDetail = '';
        })));
    };
    /**
     * @return {?}
     */
    CmxDialogConfirmationComponent.prototype.ngOnDestroy = /**
     * @return {?}
     */
    function () {
        var e_1, _a;
        try {
            for (var _b = __values(this.subscriptions), _c = _b.next(); !_c.done; _c = _b.next()) {
                var subscription = _c.value;
                subscription.unsubscribe();
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_1) throw e_1.error; }
        }
    };
    /**
     * @param {?} message
     * @return {?}
     */
    CmxDialogConfirmationComponent.prototype.openAsSuccess = /**
     * @param {?} message
     * @return {?}
     */
    function (message) {
        this.type = this.confirmationType.Success;
        this.message = message;
        this.dialog.open();
    };
    /**
     * @param {?} message
     * @return {?}
     */
    CmxDialogConfirmationComponent.prototype.openAsWarning = /**
     * @param {?} message
     * @return {?}
     */
    function (message) {
        this.type = this.confirmationType.Warning;
        this.message = message;
        this.dialog.open();
    };
    /**
     * @param {?} message
     * @param {?} messageDetail
     * @return {?}
     */
    CmxDialogConfirmationComponent.prototype.openAsError = /**
     * @param {?} message
     * @param {?} messageDetail
     * @return {?}
     */
    function (message, messageDetail) {
        this.type = this.confirmationType.Error;
        this.message = message;
        this.messageDetail = messageDetail;
        this.dialog.open();
    };
    /**
     * @return {?}
     */
    CmxDialogConfirmationComponent.prototype.ok_click = /**
     * @return {?}
     */
    function () {
        this.dialog.close();
    };
    CmxDialogConfirmationComponent.decorators = [
        { type: Component, args: [{
                    selector: 'cmx-dialog-confirmation',
                    template: "<cmx-dialog [width]=\"width\" [minWidth]=\"minWidth\" [maxWidth]=\"maxWidth\" [height]=\"height\" [minHeight]=\"minHeight\" [maxHeight]=\"maxHeight\"\n    [backgroundColor]=\"backgroundColor\" [enableClose]=\"enableClose\" [enableHeader]=\"enableHeader\" [enableFooter]=\"enableFooter\"\n    class=\"cmx-dialog-confirmation__container\" [rtl]=\"rtl\">\n\n    <cmx-dialog-body class=\"cmx-dialog-confirmation__container__body\">\n        <div class=\"cmx-dialog-confirmation__container__body__icon\">\n            <!-- success -->\n            <div *ngIf=\"type == confirmationType.Success\" class=\"cmx-icon-accepted-ok cmx-dialog-confirmation__container__body__icon--success\"></div>\n            <!-- warning -->\n            <div *ngIf=\"type == confirmationType.Warning\" class=\"cmx-icon-warning cmx-dialog-confirmation__container__body__icon--warning\"></div>\n            <!-- error -->\n            <div *ngIf=\"type == confirmationType.Error\" class=\"cmx-icon-error cmx-dialog-confirmation__container__body__icon--error\"></div>            \n        </div>\n        <div class=\"cmx-dialog-confirmation__container__adjustment\">\n            <span class=\"cmx-dialog-confirmation__container__adjustment__message\">\n                {{ message }}\n            </span>\n            <span *ngIf=\"type == confirmationType.Error\" class=\"cmx-dialog-confirmation__container__adjustment__message-detail\">\n                {{ messageDetail }}\n            </span>\n        </div>\n    </cmx-dialog-body>\n    \n    <cmx-dialog-footer class=\"cmx-dialog-confirmation__container__footer\">\n        <button cmx-button (click)=\"ok_click()\"> {{ _okLabel }} </button>\n    </cmx-dialog-footer>\n</cmx-dialog>",
                    styles: ["html{font-family:sans-serif;line-height:1.15;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%;box-sizing:border-box;-ms-overflow-style:scrollbar;-webkit-tap-highlight-color:transparent}article,aside,details,figcaption,figure,footer,header,main,menu,nav,section{display:block}h1{margin:.67em 0}hr{box-sizing:content-box;height:0;overflow:visible}pre{font-family:monospace,monospace;font-size:1em;margin-top:0;margin-bottom:1rem;overflow:auto}a:active,a:hover{outline-width:0}abbr[title]{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace,monospace;font-size:1em}dfn{font-style:italic}mark{background-color:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}audio,canvas,video{display:inline-block}audio:not([controls]){display:none;height:0}img{border-style:none;vertical-align:middle}svg:not(:root){overflow:hidden}button,input,optgroup,select,textarea{font-family:sans-serif;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=reset],[type=submit],button,html [type=button]{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:ButtonText dotted 1px}progress{display:inline-block;vertical-align:baseline}textarea{overflow:auto;resize:vertical}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-cancel-button,[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}summary{display:list-item}[hidden],template{display:none}*,::after,::before{box-sizing:inherit}@-ms-viewport{width:device-width}body{margin:0;font-family:-apple-system,system-ui,BlinkMacSystemFont,\"Segoe UI\",Roboto,\"Helvetica Neue\",Arial,sans-serif;font-size:1rem;font-weight:400;line-height:1.5;color:#292b2c;background-color:#fff}[tabindex=\"-1\"]:focus{outline:0!important}dl,h1,h2,h3,h4,h5,h6,ol,p,ul{margin-top:0;margin-bottom:0}abbr[data-original-title],abbr[title]{cursor:help}address{margin-bottom:0;font-style:normal;line-height:inherit}ol ol,ol ul,ul ol,ul ul{margin-bottom:0}dt{font-weight:700}dd{margin-bottom:0;margin-left:0}blockquote{margin:0}a:focus,a:hover{color:#277eaf;text-decoration:underline}a:not([href]):not([tabindex]),a:not([href]):not([tabindex]):focus,a:not([href]):not([tabindex]):hover{color:inherit;text-decoration:none}a:not([href]):not([tabindex]):focus{outline:0}figure{margin:0 0 1rem}[role=button]{cursor:pointer}[role=button],a,area,button,input,label,select,summary,textarea{touch-action:manipulation}table{border-collapse:collapse;background-color:transparent}caption{padding-top:.75rem;padding-bottom:.75rem;color:#636c72;text-align:left;caption-side:bottom}th{text-align:left}label{display:inline-block;margin-bottom:.5rem}button:focus{outline:dotted 1px;outline:-webkit-focus-ring-color auto 5px}button,input,select,textarea{line-height:inherit}input[type=checkbox]:disabled,input[type=radio]:disabled{cursor:not-allowed}input[type=date],input[type=datetime-local],input[type=month],input[type=time]{-webkit-appearance:listbox}fieldset{min-width:0;padding:0;margin:0;border:0}legend{box-sizing:border-box;color:inherit;max-width:100%;white-space:normal;display:block;width:100%;padding:0;margin-bottom:.5rem;font-size:1.5rem;line-height:inherit}input[type=search]{-webkit-appearance:none}output{display:inline-block}[hidden]{display:none!important}.font-true-red{color:#ee3d42}.font-true-white{color:#fff}.font-true-black{color:#000}.font-true-blue{color:#003876}.font-medium-blue{color:#002a59}.font-medium-grey{color:#666}.font-dark-grey{color:#333}.font-bright-orange{color:#fbb03b}.font-bright-green{color:#7ac943}.font-bright-blue{color:#3fa9f5}.font-deep-blue{color:#001b3a}.bg__true-red{background-color:#ee3d42}.bg__true-white{background-color:#fff}.bg__true-black{background-color:#000}.bg__true-blue{background-color:#003876}.bg__medium-blue{background-color:#002a59}.bg__medium-grey{background-color:#666}.bg__dark-grey{background-color:#333}.bg__bright-orange{background-color:#fbb03b}.bg__bright-green{background-color:#7ac943}.bg__bright-blue{background-color:#3fa9f5}.bg__deep-blue{background-color:#001b3a}@font-face{font-family:Roboto;font-family:Roboto-Thin;font-weight:100}@font-face{font-family:Roboto;src:url(https://www.cemexgo.com/cdn/fonts/Roboto-Light.ttf);font-weight:300}@font-face{font-family:Roboto;src:url(https://www.cemexgo.com/cdn/fonts/Roboto-Regular.ttf);font-weight:400}@font-face{font-family:Roboto;src:url(https://www.cemexgo.com/cdn/fonts/Roboto-Italic.ttf);font-weight:400;font-style:italic}@font-face{font-family:Roboto;src:url(https://www.cemexgo.com/cdn/fonts/Roboto-Medium.ttf);font-weight:500}@font-face{font-family:Roboto;src:url(https://www.cemexgo.com/cdn/fonts/Roboto-Bold.ttf);font-weight:700}@font-face{font-family:Roboto;src:url(https://www.cemexgo.com/cdn/fonts/Roboto-Black.ttf);font-weight:800}.roboto-bold{font-family:Roboto;font-weight:700}.roboto-medium{font-family:Roboto;font-weight:500}.roboto-regular{font-family:Roboto;font-weight:400}.roboto-light{font-family:Roboto;font-weight:300}.roboto-thin{font-family:Roboto;font-weight:100}.roboto-italic{font-family:Roboto;font-style:italic}.font-bold{font-weight:700}.font-medium{font-weight:500}.font-regular{font-weight:400}.font-light{font-weight:300}.font-thin{font-weight:100}.font-italic{font-style:italic}.h1-role,h1{font-family:Roboto,sans-serif;font-size:1.875rem;line-height:1.875rem;font-weight:700;color:#001b3a}.h2-role,h2{font-family:Roboto,sans-serif;font-size:1.5rem;line-height:1.5rem;font-weight:500;color:#001b3a}.h3-role,h3{font-family:Roboto,sans-serif;font-size:1.125rem;line-height:1.125rem;font-weight:400;color:#001b3a}.h4-role,h4{font-family:Roboto,sans-serif;font-size:1rem;line-height:1rem;font-weight:400;color:#001b3a}.h5-role,h5{font-family:Roboto,sans-serif;font-size:.875rem;line-height:1rem;font-weight:500;color:#001b3a;text-transform:uppercase}.h6-role,h6{font-family:Roboto,sans-serif;font-size:.75rem;line-height:1rem;font-weight:500;color:#001b3a}.table-entry-strong{font-family:Roboto,sans-serif;font-size:.875rem;line-height:1rem;color:#333;font-weight:700}.breadcrumb{font-family:Roboto,sans-serif;font-size:1.125rem;color:#001b3a}a{background-color:transparent;-webkit-text-decoration-skip:objects;text-decoration:none;color:#3fa9f5}a:hover{text-decoration:underline;color:#3fa9f5}a:active{text-decoration:underline;color:#003876}a.disabled{text-decoration:none;color:#666;cursor:not-allowed}a.table-entry{font-size:.875rem;color:#3fa9f5}.link{text-decoration:none;color:#3fa9f5}.link:hover{text-decoration:underline;color:#3fa9f5}.link:active{text-decoration:underline;color:#003876}.link.disabled{text-decoration:none;color:#666;cursor:not-allowed}.table-entry{font-family:Roboto,sans-serif;line-height:1rem;font-size:.875rem;color:#333}.input-placeholder{font-family:Roboto,sans-serif;font-size:.875rem;line-height:1rem;color:#666}.input-text{font-family:Roboto,sans-serif;font-size:.875rem;line-height:1rem;color:#333}.size-14{font-size:.875rem}.size-48{font-size:3rem}.text-left{text-align:left!important}.text-right{text-align:right!important}.text-center{text-align:center!important}.flex-first{order:-1}.flex-last{order:1}.flex-unordered{order:0}.flex-row{flex-direction:row!important}.flex-column{flex-direction:column!important}.flex-row-reverse{flex-direction:row-reverse!important}.flex-column-reverse{flex-direction:column-reverse!important}.flex-wrap{flex-wrap:wrap!important}.flex-nowrap{flex-wrap:nowrap!important}.flex-wrap-reverse{flex-wrap:wrap-reverse!important}.justify-content-start{justify-content:flex-start!important}.justify-content-end{justify-content:flex-end!important}.justify-content-center{justify-content:center!important}.justify-content-between{justify-content:space-between!important}.justify-content-around{justify-content:space-around!important}.align-items-start{align-items:flex-start!important}.align-items-end{align-items:flex-end!important}.align-items-center{align-items:center!important}.align-items-baseline{align-items:baseline!important}.align-items-stretch{align-items:stretch!important}.align-content-start{align-content:flex-start!important}.align-content-end{align-content:flex-end!important}.align-content-center{align-content:center!important}.align-content-between{align-content:space-between!important}.align-content-around{align-content:space-around!important}.align-content-stretch{align-content:stretch!important}.align-self-auto{-ms-grid-row-align:auto!important;align-self:auto!important}.align-self-start{align-self:flex-start!important}.align-self-end{align-self:flex-end!important}.align-self-center{-ms-grid-row-align:center!important;align-self:center!important}.align-self-baseline{align-self:baseline!important}.align-self-stretch{-ms-grid-row-align:stretch!important;align-self:stretch!important}@media (min-width:576px){.text-xs-left{text-align:left!important}.text-xs-right{text-align:right!important}.text-xs-center{text-align:center!important}.flex-xs-first{order:-1}.flex-xs-last{order:1}.flex-xs-unordered{order:0}.flex-xs-row{flex-direction:row!important}.flex-xs-column{flex-direction:column!important}.flex-xs-row-reverse{flex-direction:row-reverse!important}.flex-xs-column-reverse{flex-direction:column-reverse!important}.flex-xs-wrap{flex-wrap:wrap!important}.flex-xs-nowrap{flex-wrap:nowrap!important}.flex-xs-wrap-reverse{flex-wrap:wrap-reverse!important}.justify-content-xs-start{justify-content:flex-start!important}.justify-content-xs-end{justify-content:flex-end!important}.justify-content-xs-center{justify-content:center!important}.justify-content-xs-between{justify-content:space-between!important}.justify-content-xs-around{justify-content:space-around!important}.align-items-xs-start{align-items:flex-start!important}.align-items-xs-end{align-items:flex-end!important}.align-items-xs-center{align-items:center!important}.align-items-xs-baseline{align-items:baseline!important}.align-items-xs-stretch{align-items:stretch!important}.align-content-xs-start{align-content:flex-start!important}.align-content-xs-end{align-content:flex-end!important}.align-content-xs-center{align-content:center!important}.align-content-xs-between{align-content:space-between!important}.align-content-xs-around{align-content:space-around!important}.align-content-xs-stretch{align-content:stretch!important}.align-self-xs-auto{-ms-grid-row-align:auto!important;align-self:auto!important}.align-self-xs-start{align-self:flex-start!important}.align-self-xs-end{align-self:flex-end!important}.align-self-xs-center{-ms-grid-row-align:center!important;align-self:center!important}.align-self-xs-baseline{align-self:baseline!important}.align-self-xs-stretch{-ms-grid-row-align:stretch!important;align-self:stretch!important}}@media (min-width:768px){.text-sm-left{text-align:left!important}.text-sm-right{text-align:right!important}.text-sm-center{text-align:center!important}.flex-sm-first{order:-1}.flex-sm-last{order:1}.flex-sm-unordered{order:0}.flex-sm-row{flex-direction:row!important}.flex-sm-column{flex-direction:column!important}.flex-sm-row-reverse{flex-direction:row-reverse!important}.flex-sm-column-reverse{flex-direction:column-reverse!important}.flex-sm-wrap{flex-wrap:wrap!important}.flex-sm-nowrap{flex-wrap:nowrap!important}.flex-sm-wrap-reverse{flex-wrap:wrap-reverse!important}.justify-content-sm-start{justify-content:flex-start!important}.justify-content-sm-end{justify-content:flex-end!important}.justify-content-sm-center{justify-content:center!important}.justify-content-sm-between{justify-content:space-between!important}.justify-content-sm-around{justify-content:space-around!important}.align-items-sm-start{align-items:flex-start!important}.align-items-sm-end{align-items:flex-end!important}.align-items-sm-center{align-items:center!important}.align-items-sm-baseline{align-items:baseline!important}.align-items-sm-stretch{align-items:stretch!important}.align-content-sm-start{align-content:flex-start!important}.align-content-sm-end{align-content:flex-end!important}.align-content-sm-center{align-content:center!important}.align-content-sm-between{align-content:space-between!important}.align-content-sm-around{align-content:space-around!important}.align-content-sm-stretch{align-content:stretch!important}.align-self-sm-auto{-ms-grid-row-align:auto!important;align-self:auto!important}.align-self-sm-start{align-self:flex-start!important}.align-self-sm-end{align-self:flex-end!important}.align-self-sm-center{-ms-grid-row-align:center!important;align-self:center!important}.align-self-sm-baseline{align-self:baseline!important}.align-self-sm-stretch{-ms-grid-row-align:stretch!important;align-self:stretch!important}}@media (min-width:1080px){.text-md-left{text-align:left!important}.text-md-right{text-align:right!important}.text-md-center{text-align:center!important}.flex-md-first{order:-1}.flex-md-last{order:1}.flex-md-unordered{order:0}.flex-md-row{flex-direction:row!important}.flex-md-column{flex-direction:column!important}.flex-md-row-reverse{flex-direction:row-reverse!important}.flex-md-column-reverse{flex-direction:column-reverse!important}.flex-md-wrap{flex-wrap:wrap!important}.flex-md-nowrap{flex-wrap:nowrap!important}.flex-md-wrap-reverse{flex-wrap:wrap-reverse!important}.justify-content-md-start{justify-content:flex-start!important}.justify-content-md-end{justify-content:flex-end!important}.justify-content-md-center{justify-content:center!important}.justify-content-md-between{justify-content:space-between!important}.justify-content-md-around{justify-content:space-around!important}.align-items-md-start{align-items:flex-start!important}.align-items-md-end{align-items:flex-end!important}.align-items-md-center{align-items:center!important}.align-items-md-baseline{align-items:baseline!important}.align-items-md-stretch{align-items:stretch!important}.align-content-md-start{align-content:flex-start!important}.align-content-md-end{align-content:flex-end!important}.align-content-md-center{align-content:center!important}.align-content-md-between{align-content:space-between!important}.align-content-md-around{align-content:space-around!important}.align-content-md-stretch{align-content:stretch!important}.align-self-md-auto{-ms-grid-row-align:auto!important;align-self:auto!important}.align-self-md-start{align-self:flex-start!important}.align-self-md-end{align-self:flex-end!important}.align-self-md-center{-ms-grid-row-align:center!important;align-self:center!important}.align-self-md-baseline{align-self:baseline!important}.align-self-md-stretch{-ms-grid-row-align:stretch!important;align-self:stretch!important}}@media (min-width:1320px){.text-lg-left{text-align:left!important}.text-lg-right{text-align:right!important}.text-lg-center{text-align:center!important}.flex-lg-first{order:-1}.flex-lg-last{order:1}.flex-lg-unordered{order:0}.flex-lg-row{flex-direction:row!important}.flex-lg-column{flex-direction:column!important}.flex-lg-row-reverse{flex-direction:row-reverse!important}.flex-lg-column-reverse{flex-direction:column-reverse!important}.flex-lg-wrap{flex-wrap:wrap!important}.flex-lg-nowrap{flex-wrap:nowrap!important}.flex-lg-wrap-reverse{flex-wrap:wrap-reverse!important}.justify-content-lg-start{justify-content:flex-start!important}.justify-content-lg-end{justify-content:flex-end!important}.justify-content-lg-center{justify-content:center!important}.justify-content-lg-between{justify-content:space-between!important}.justify-content-lg-around{justify-content:space-around!important}.align-items-lg-start{align-items:flex-start!important}.align-items-lg-end{align-items:flex-end!important}.align-items-lg-center{align-items:center!important}.align-items-lg-baseline{align-items:baseline!important}.align-items-lg-stretch{align-items:stretch!important}.align-content-lg-start{align-content:flex-start!important}.align-content-lg-end{align-content:flex-end!important}.align-content-lg-center{align-content:center!important}.align-content-lg-between{align-content:space-between!important}.align-content-lg-around{align-content:space-around!important}.align-content-lg-stretch{align-content:stretch!important}.align-self-lg-auto{-ms-grid-row-align:auto!important;align-self:auto!important}.align-self-lg-start{align-self:flex-start!important}.align-self-lg-end{align-self:flex-end!important}.align-self-lg-center{-ms-grid-row-align:center!important;align-self:center!important}.align-self-lg-baseline{align-self:baseline!important}.align-self-lg-stretch{-ms-grid-row-align:stretch!important;align-self:stretch!important}}@media (min-width:1560px){.text-xlg-left{text-align:left!important}.text-xlg-right{text-align:right!important}.text-xlg-center{text-align:center!important}.flex-xlg-first{order:-1}.flex-xlg-last{order:1}.flex-xlg-unordered{order:0}.flex-xlg-row{flex-direction:row!important}.flex-xlg-column{flex-direction:column!important}.flex-xlg-row-reverse{flex-direction:row-reverse!important}.flex-xlg-column-reverse{flex-direction:column-reverse!important}.flex-xlg-wrap{flex-wrap:wrap!important}.flex-xlg-nowrap{flex-wrap:nowrap!important}.flex-xlg-wrap-reverse{flex-wrap:wrap-reverse!important}.justify-content-xlg-start{justify-content:flex-start!important}.justify-content-xlg-end{justify-content:flex-end!important}.justify-content-xlg-center{justify-content:center!important}.justify-content-xlg-between{justify-content:space-between!important}.justify-content-xlg-around{justify-content:space-around!important}.align-items-xlg-start{align-items:flex-start!important}.align-items-xlg-end{align-items:flex-end!important}.align-items-xlg-center{align-items:center!important}.align-items-xlg-baseline{align-items:baseline!important}.align-items-xlg-stretch{align-items:stretch!important}.align-content-xlg-start{align-content:flex-start!important}.align-content-xlg-end{align-content:flex-end!important}.align-content-xlg-center{align-content:center!important}.align-content-xlg-between{align-content:space-between!important}.align-content-xlg-around{align-content:space-around!important}.align-content-xlg-stretch{align-content:stretch!important}.align-self-xlg-auto{-ms-grid-row-align:auto!important;align-self:auto!important}.align-self-xlg-start{align-self:flex-start!important}.align-self-xlg-end{align-self:flex-end!important}.align-self-xlg-center{-ms-grid-row-align:center!important;align-self:center!important}.align-self-xlg-baseline{align-self:baseline!important}.align-self-xlg-stretch{-ms-grid-row-align:stretch!important;align-self:stretch!important}}.cmx-dialog-confirmation__container{font-family:Roboto,sans-serif;position:relative}.cmx-dialog-confirmation__container__body{flex:1 1 auto;position:relative;text-align:center;min-height:248px;display:flex;align-items:center;justify-content:center;flex-direction:column}.cmx-dialog-confirmation__container__body__icon{width:120px;height:120px;margin-bottom:2rem;font-size:8rem;line-height:1em;display:flex;justify-content:center;align-items:center}.cmx-dialog-confirmation__container__body__icon--success{color:#7ac943}.cmx-dialog-confirmation__container__body__icon--warning{color:#fbb03b}.cmx-dialog-confirmation__container__body__icon--error{color:#ee3d42}.cmx-dialog-confirmation__container__adjustment{position:absolute;bottom:0;width:100%}.cmx-dialog-confirmation__container__adjustment__message,.cmx-dialog-confirmation__container__adjustment__message-detail{display:block;font-size:1.125rem;line-height:1.375rem}.cmx-dialog-confirmation__container__adjustment__button{margin-top:2.5rem}:host ::ng-deep .cmx-dialog__container__body{padding:0}:host ::ng-deep .cmx-dialog__container__footer{text-align:center}"]
                }] }
    ];
    /** @nocollapse */
    CmxDialogConfirmationComponent.ctorParameters = function () { return [
        { type: Boolean, decorators: [{ type: Optional }, { type: Inject, args: ['RTL',] }] }
    ]; };
    CmxDialogConfirmationComponent.propDecorators = {
        dirAttr: [{ type: HostBinding, args: ['attr.dir',] }],
        dialog: [{ type: ViewChild, args: [CmxDialogComponent,] }],
        rtl: [{ type: Input }],
        okLabel: [{ type: Input }],
        width: [{ type: Input }],
        minWidth: [{ type: Input }],
        maxWidth: [{ type: Input }],
        height: [{ type: Input }],
        minHeight: [{ type: Input }],
        maxHeight: [{ type: Input }],
        backgroundColor: [{ type: Input }],
        enableClose: [{ type: Input }],
        enableHeader: [{ type: Input }],
        enableFooter: [{ type: Input }]
    };
    return CmxDialogConfirmationComponent;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var CmxDialogFooterComponent = /** @class */ (function () {
    function CmxDialogFooterComponent() {
        this.widthStyle = '100%';
    }
    CmxDialogFooterComponent.decorators = [
        { type: Component, args: [{
                    selector: 'cmx-dialog-footer',
                    template: "<ng-content style='width: 100%'></ng-content>"
                }] }
    ];
    /** @nocollapse */
    CmxDialogFooterComponent.ctorParameters = function () { return []; };
    CmxDialogFooterComponent.propDecorators = {
        widthStyle: [{ type: HostBinding, args: ['style.width',] }]
    };
    return CmxDialogFooterComponent;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var CmxDialogHeaderComponent = /** @class */ (function () {
    function CmxDialogHeaderComponent() {
    }
    CmxDialogHeaderComponent.decorators = [
        { type: Component, args: [{
                    selector: 'cmx-dialog-header',
                    template: '<ng-content></ng-content>'
                }] }
    ];
    /** @nocollapse */
    CmxDialogHeaderComponent.ctorParameters = function () { return []; };
    return CmxDialogHeaderComponent;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var CmxDialogGeneratorService = /** @class */ (function () {
    function CmxDialogGeneratorService() {
        this.dialogDelay = 100;
        this.defaultSuccessMessage = 'This is a dynamically generated confirmation success dialog';
        this.defaultWarningMessage = 'This is a dynamically generated confirmation warning dialog';
        this.defaultErrorMessage = 'This is a dynamically generated confirmation error dialog';
        this.defaultErrorMessageDetail = 'This is a message detail';
    }
    /**
     * @param {?} viewContainerRef
     * @param {?} componentFactoryResolver
     * @param {?} options
     * @return {?}
     */
    CmxDialogGeneratorService.prototype.createConfirmationDialog = /**
     * @param {?} viewContainerRef
     * @param {?} componentFactoryResolver
     * @param {?} options
     * @return {?}
     */
    function (viewContainerRef, componentFactoryResolver, options) {
        // tslint:disable-next-line:max-line-length
        /** @type {?} */
        var componentFactory = componentFactoryResolver.resolveComponentFactory(CmxDialogConfirmationComponent);
        /** @type {?} */
        var componentRef = viewContainerRef.createComponent(componentFactory);
        // tslint:disable-next-line:typedef
        /** @type {?} */
        var component = ((/** @type {?} */ (componentRef.instance)));
        this.setDialogSubscriptions(options, component.dialog);
        this.openConfirmationDialog(options, component);
        return component;
    };
    /* experimental */
    /* experimental */
    /**
     * @param {?} viewContainerRef
     * @param {?} componentFactoryResolver
     * @param {?} componentTemplate
     * @param {?} options
     * @return {?}
     */
    CmxDialogGeneratorService.prototype.createCustomDialog = /* experimental */
    /**
     * @param {?} viewContainerRef
     * @param {?} componentFactoryResolver
     * @param {?} componentTemplate
     * @param {?} options
     * @return {?}
     */
    function (viewContainerRef, componentFactoryResolver, componentTemplate, options) {
        /** @type {?} */
        var componentFactory = componentFactoryResolver.resolveComponentFactory(CmxDialogComponent);
        /** @type {?} */
        var componentRef = viewContainerRef.createComponent(componentFactory);
        // tslint:disable-next-line:typedef
        /** @type {?} */
        var component = ((/** @type {?} */ (componentRef.instance)));
        if (!(componentTemplate instanceof CmxDialogComponent)) {
            return component;
        }
        this.setDialogComponent(component, componentTemplate);
        this.setDialogComponentTimer(options, component);
        return component;
    };
    /**
     * @private
     * @param {?} options
     * @param {?} component
     * @return {?}
     */
    CmxDialogGeneratorService.prototype.setDialogSubscriptions = /**
     * @private
     * @param {?} options
     * @param {?} component
     * @return {?}
     */
    function (options, component) {
        if (options.afterClosed) {
            component.afterClosed().subscribe(options.afterClosed());
        }
        if (options.afterOpened) {
            component.afterOpened().subscribe(options.afterOpened());
        }
    };
    /**
     * @private
     * @param {?} options
     * @param {?} component
     * @return {?}
     */
    CmxDialogGeneratorService.prototype.openConfirmationDialog = /**
     * @private
     * @param {?} options
     * @param {?} component
     * @return {?}
     */
    function (options, component) {
        if (options.type === ConfirmationType.Success) {
            component.openAsSuccess(options.message ? options.message : this.defaultSuccessMessage);
        }
        else if (options.type === ConfirmationType.Warning) {
            component.openAsWarning(options.message ? options.message : this.defaultWarningMessage);
        }
        else if (options.type === ConfirmationType.Error) {
            component.openAsError(options.message ? options.message : this.defaultErrorMessage, options.messageDetail ? options.messageDetail : this.defaultErrorMessageDetail);
        }
    };
    /**
     * @private
     * @param {?} component
     * @param {?} componentTemplate
     * @return {?}
     */
    CmxDialogGeneratorService.prototype.setDialogComponent = /**
     * @private
     * @param {?} component
     * @param {?} componentTemplate
     * @return {?}
     */
    function (component, componentTemplate) {
        component.enableHeader = componentTemplate.enableHeader;
        component.enableFooter = componentTemplate.enableFooter;
        component.enableClose = componentTemplate.enableClose;
        component.backgroundColor = componentTemplate.backgroundColor;
        component.rtl = componentTemplate.rtl;
        component.dirAttr = componentTemplate.dirAttr;
        console.log(component);
        if (component.enableHeader) {
            setTimeout((/**
             * @return {?}
             */
            function () {
                component.dialogHeader.nativeElement.innerHTML = componentTemplate.dialogHeader.nativeElement.innerHTML;
            }), this.dialogDelay);
        }
        if (component.enableFooter) {
            setTimeout((/**
             * @return {?}
             */
            function () {
                component.dialogFooter.nativeElement.innerHTML = componentTemplate.dialogFooter.nativeElement.innerHTML;
            }), this.dialogDelay);
        }
        setTimeout((/**
         * @return {?}
         */
        function () {
            component.dialogBody.nativeElement.innerHTML = componentTemplate.dialogBody.nativeElement.innerHTML;
        }), this.dialogDelay);
    };
    /**
     * @private
     * @param {?} options
     * @param {?} component
     * @return {?}
     */
    CmxDialogGeneratorService.prototype.setDialogComponentTimer = /**
     * @private
     * @param {?} options
     * @param {?} component
     * @return {?}
     */
    function (options, component) {
        var _this = this;
        setTimeout((/**
         * @return {?}
         */
        function () {
            _this.setDialogSubscriptions(options, component);
            component.open();
        }), this.dialogDelay);
    };
    CmxDialogGeneratorService.decorators = [
        { type: Injectable, args: [{
                    providedIn: 'root',
                },] }
    ];
    /** @nocollapse */ CmxDialogGeneratorService.ngInjectableDef = defineInjectable({ factory: function CmxDialogGeneratorService_Factory() { return new CmxDialogGeneratorService(); }, token: CmxDialogGeneratorService, providedIn: "root" });
    return CmxDialogGeneratorService;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var CmxDialogModule = /** @class */ (function () {
    function CmxDialogModule() {
    }
    CmxDialogModule.decorators = [
        { type: NgModule, args: [{
                    imports: [
                        CommonModule,
                        FormsModule,
                        ReactiveFormsModule,
                        CmxButtonModule,
                    ],
                    exports: [
                        CmxDialogComponent,
                        CmxDialogConfirmationComponent,
                        CmxDialogHeaderComponent,
                        CmxDialogBodyComponent,
                        CmxDialogFooterComponent,
                        DataDismissDialogDirective,
                    ],
                    declarations: [
                        CmxDialogComponent,
                        CmxDialogConfirmationComponent,
                        CmxDialogHeaderComponent,
                        CmxDialogBodyComponent,
                        CmxDialogFooterComponent,
                        DataDismissDialogDirective,
                    ],
                },] }
    ];
    return CmxDialogModule;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

export { DataDismissDialogDirective, CmxDialogComponent, CmxDialogBodyComponent, ConfirmationType, CmxDialogConfirmationComponent, CmxDialogFooterComponent, CmxDialogHeaderComponent, CmxDialogService, CmxDialogGeneratorService, CmxDialogModule };

//# sourceMappingURL=cemex-cmx-dialog-v7.js.map