export interface Document {
    amount: number;
    applyDiscount: boolean;
    balance: number;
    checked?: boolean;
    companyCode: string;
    countryCode: string;
    contract: string;
    relatedContracts?: Array<string>;
    createDate: string;
    createDateObj?: Date;
    createDateTimestamp?: number;
    currencyCode: string;
    customerCode: string;
    customerJobsiteNumber: string;
    daysOverDue: number;
    daysToDue: number;
    debitFlag: boolean;
    discount: number;
    dispute: boolean;
    disputeStatusCode: string;
    disputeStatusDesc: string;
    disputeCompromiseDate: string;
    disputeCompromiseDateObj?: Date;
    disputeId: number;
    disputeResolutionDate: string;
    disputeResolutionDateObj: Date;
    disputeCode: number;
    divisionCode: string;
    docStatusCode: string;
    docStatusDesc: string;
    documentCode: string;
    documentId: number;
    documentItem: string;
    documentTypeCode: string;
    documentTypeDesc: string;
    dueDate: string;
    dueDateObj?: Date;
    dueDateTimestamp?: number;
    index?: number;
    invoiceReviewed: boolean;
    jobNumber: string;
    jobSiteCode: string;
    jobSiteDesc: string;
    paymentFlag: boolean;
    paymentProcessFlag: boolean;
    paymentsBalance: number;
    purchaseOrder: string;
    relatedPurchaseOrders?: Array<string>;
    referenceNumber: string;
    relatedDocument: string;
    salesOrgCode: string;
    totalContracts: number;
    totalPO: number;
    payment?: number;
    expectedPayment?: number;
}
export interface DocumentsDTO {
    documents: Array<Document>;
}
