{"version":3,"file":"cemex-core-events-v7.js.map","sources":["ng://@cemex-core/events-v7/lib/broadcaster.event.ts","ng://@cemex-core/events-v7/lib/calendar.event.ts","ng://@cemex-core/events-v7/lib/order.event.ts","ng://@cemex-core/events-v7/lib/sidebar.event.ts","ng://@cemex-core/events-v7/lib/truck.event.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\nimport { Observable, Subject } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nexport interface BroadcastEvent {\n    key: any;\n    data?: any;\n}\n\n@Injectable()\nexport class Broadcaster {\n    public static CHANGE_SCREEN_HOME = 'change_screen';\n    public static DCM_APP_LOGOUT = 'dcm_app_logout_event';\n    public static DCM_LANGUAGE_CHANGE = 'dcm_language_change_event';\n    public static DCM_LANGUAGE_FETCHED = 'dcm_language_fetched_event';\n    public static DCM_LEGAL_ENTITY_CHANGE = 'dcm_legal_entity_change_event';\n    public static DCM_LANGUAGE_SELECTION = 'dcm_language_selection_event';\n\n    public static _eventBus: Subject<BroadcastEvent> = null;\n\n    constructor() {\n        if (Broadcaster._eventBus == null || Broadcaster._eventBus === undefined) {\n            Broadcaster._eventBus = new Subject<BroadcastEvent>();\n        }\n    }\n\n    broadcast(key: any, data?: any) {\n        Broadcaster._eventBus.next({ key, data });\n    }\n\n    on<T>(key: any): Observable<T> {\n        const result = Broadcaster._eventBus.asObservable()\n            .pipe(\n                filter(event => {\n                    return event.key === key;\n                }),\n                map(event => <T>event.data),\n            );\n        return result;\n    }\n}\n","import { Injectable } from '@angular/core';\n\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable()\nexport class CalendarEvents {\n    // Observable items sources\n    public moment: any;\n    private datesSubject = new BehaviorSubject<any>({\n        start: this.moment(),\n        end: this.moment()\n    });\n\n    // Observable items streams\n    private dates$ = this.datesSubject.asObservable();\n\n    setDates(dates: any) {\n        (<any>window).localStorage.setItem('dates', JSON.stringify(dates));\n        const currentDates = this.getCurrentValue();\n        if (dates.start.diff(currentDates.start, 'days') !== 0 || dates.end.diff(currentDates.end, 'days') !== 0) {\n            this.datesSubject.next(dates);\n        }\n    }\n\n    getDates() {\n        return this.dates$;\n    }\n\n    getCurrentValue() {\n        return this.datesSubject.getValue();\n    }\n}\n","import { Injectable } from '@angular/core';\n\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable()\nexport class OrderEvents {\n    // Observable items sources\n    private orderSelectedSubject = new BehaviorSubject<any>(null);\n\n    // Observable items streams\n    private order$ = this.orderSelectedSubject.asObservable();\n\n    constructor() { }\n\n    selectOrder(order: any) {\n        const currentOrder = this.orderSelectedSubject.getValue();\n\n        // Fire only if customer differs from the selected one\n        if (currentOrder !== order) {\n            this.orderSelectedSubject.next(order);\n        }\n    }\n\n    getOrderSelected() {\n        return this.order$;\n    }\n\n    currentOrderSelected() {\n        return this.orderSelectedSubject.getValue();\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { BehaviorSubject } from 'rxjs';\n// Models\nimport JobsiteDTO from '@cemex-core/types-v1/dist/jobsiteDTO';\nimport CustomerDTO from '@cemex-core/types-v1/dist/customerDTO';\n\n@Injectable()\nexport class SidebarEvents {\n    // Observable items sources\n    private jobsiteSubject = new BehaviorSubject<JobsiteDTO>(null);\n    private customerSubject = new BehaviorSubject<CustomerDTO>(null);\n    private customersSubject = new BehaviorSubject(null);\n\n    // Observable items streams\n    private jobsite$ = this.jobsiteSubject.asObservable();\n    customer$ = this.customerSubject.asObservable();\n\n    constructor(private router: Router) { }\n\n    selectJobsite(jobsite: JobsiteDTO, redirect = false, lock = false) {\n        const currentJobsite = this.jobsiteSubject.getValue();\n        // Fire only if customer differs from the selected one\n        if (currentJobsite !== jobsite) {\n            if (!lock) {\n                this.jobsiteSubject.next(jobsite);\n            }\n        }\n\n        if (jobsite && redirect) {\n            this.router.navigate(['app/jobsite', jobsite.jobsiteId]);\n        }\n    }\n\n    selectCustomer(customer: CustomerDTO, redirect = true) {\n        const currentCustomer = this.customerSubject.getValue();\n\n        // Fire only if customer differs from the selected one\n        if (currentCustomer !== customer) {\n            this.customerSubject.next(customer);\n        }\n\n        // If its not requesting an order directly\n        if (redirect) {\n            this.selectJobsite(null);\n            this.router.navigate(['app/client-detail']);\n        }\n    }\n\n    setCustomers(customers) {\n        this.customersSubject.next(customers);\n    }\n\n    getJobsiteSelected() {\n        return this.jobsite$;\n    }\n\n    getCustomerSelected() {\n        return this.customer$;\n    }\n\n    selectCustomerByCode(code, redirect = false) {\n        for (const customer of this.customersSubject.getValue()) {\n            if (customer.customerCode === code) {\n                this.selectCustomer(customer, redirect);\n            }\n        }\n    }\n\n    currentCustomer() {\n        return this.customerSubject.getValue();\n    }\n\n    currentJobsite() {\n        return this.jobsiteSubject.getValue();\n    }\n}\n","import { Injectable } from '@angular/core';\n\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable()\nexport class TruckEvents {\n    // Observable items sources\n    private selectedTruckSubject = new BehaviorSubject<any>(null);\n\n    constructor() { }\n\n    selectTruck(truck: any) {\n        const currentTruck = this.truckValue();\n\n        // Fire only if selected truck differs from the previous one\n        if (currentTruck !== truck) {\n            this.selectedTruckSubject.next(truck);\n        }\n    }\n\n    selectedTruck() {\n        return this.selectedTruckSubject.asObservable();\n    }\n\n    truckValue() {\n        return this.selectedTruckSubject.getValue();\n    }\n}\n"],"names":[],"mappings":"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"}
