/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import { Subject } from 'rxjs';
import { filter, map } from 'rxjs/operators';
/**
 * @record
 */
export function BroadcastEvent() { }
if (false) {
    /** @type {?} */
    BroadcastEvent.prototype.key;
    /** @type {?|undefined} */
    BroadcastEvent.prototype.data;
}
var Broadcaster = /** @class */ (function () {
    function Broadcaster() {
        if (Broadcaster._eventBus == null || Broadcaster._eventBus === undefined) {
            Broadcaster._eventBus = new Subject();
        }
    }
    /**
     * @param {?} key
     * @param {?=} data
     * @return {?}
     */
    Broadcaster.prototype.broadcast = /**
     * @param {?} key
     * @param {?=} data
     * @return {?}
     */
    function (key, data) {
        Broadcaster._eventBus.next({ key: key, data: data });
    };
    /**
     * @template T
     * @param {?} key
     * @return {?}
     */
    Broadcaster.prototype.on = /**
     * @template T
     * @param {?} key
     * @return {?}
     */
    function (key) {
        /** @type {?} */
        var result = Broadcaster._eventBus.asObservable()
            .pipe(filter((/**
         * @param {?} event
         * @return {?}
         */
        function (event) {
            return event.key === key;
        })), map((/**
         * @param {?} event
         * @return {?}
         */
        function (event) { return (/** @type {?} */ (event.data)); })));
        return result;
    };
    Broadcaster.CHANGE_SCREEN_HOME = 'change_screen';
    Broadcaster.DCM_APP_LOGOUT = 'dcm_app_logout_event';
    Broadcaster.DCM_LANGUAGE_CHANGE = 'dcm_language_change_event';
    Broadcaster.DCM_LANGUAGE_FETCHED = 'dcm_language_fetched_event';
    Broadcaster.DCM_LEGAL_ENTITY_CHANGE = 'dcm_legal_entity_change_event';
    Broadcaster.DCM_LANGUAGE_SELECTION = 'dcm_language_selection_event';
    Broadcaster._eventBus = null;
    Broadcaster.decorators = [
        { type: Injectable }
    ];
    /** @nocollapse */
    Broadcaster.ctorParameters = function () { return []; };
    return Broadcaster;
}());
export { Broadcaster };
if (false) {
    /** @type {?} */
    Broadcaster.CHANGE_SCREEN_HOME;
    /** @type {?} */
    Broadcaster.DCM_APP_LOGOUT;
    /** @type {?} */
    Broadcaster.DCM_LANGUAGE_CHANGE;
    /** @type {?} */
    Broadcaster.DCM_LANGUAGE_FETCHED;
    /** @type {?} */
    Broadcaster.DCM_LEGAL_ENTITY_CHANGE;
    /** @type {?} */
    Broadcaster.DCM_LANGUAGE_SELECTION;
    /** @type {?} */
    Broadcaster._eventBus;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnJvYWRjYXN0ZXIuZXZlbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AY2VtZXgtY29yZS9ldmVudHMtdjcvIiwic291cmNlcyI6WyJsaWIvYnJvYWRjYXN0ZXIuZXZlbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFM0MsT0FBTyxFQUFjLE9BQU8sRUFBRSxNQUFNLE1BQU0sQ0FBQztBQUMzQyxPQUFPLEVBQUUsTUFBTSxFQUFFLEdBQUcsRUFBRSxNQUFNLGdCQUFnQixDQUFDOzs7O0FBRTdDLG9DQUdDOzs7SUFGRyw2QkFBUzs7SUFDVCw4QkFBVzs7QUFHZjtJQVdJO1FBQ0ksSUFBSSxXQUFXLENBQUMsU0FBUyxJQUFJLElBQUksSUFBSSxXQUFXLENBQUMsU0FBUyxLQUFLLFNBQVMsRUFBRTtZQUN0RSxXQUFXLENBQUMsU0FBUyxHQUFHLElBQUksT0FBTyxFQUFrQixDQUFDO1NBQ3pEO0lBQ0wsQ0FBQzs7Ozs7O0lBRUQsK0JBQVM7Ozs7O0lBQVQsVUFBVSxHQUFRLEVBQUUsSUFBVTtRQUMxQixXQUFXLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxFQUFFLEdBQUcsS0FBQSxFQUFFLElBQUksTUFBQSxFQUFFLENBQUMsQ0FBQztJQUM5QyxDQUFDOzs7Ozs7SUFFRCx3QkFBRTs7Ozs7SUFBRixVQUFNLEdBQVE7O1lBQ0osTUFBTSxHQUFHLFdBQVcsQ0FBQyxTQUFTLENBQUMsWUFBWSxFQUFFO2FBQzlDLElBQUksQ0FDRCxNQUFNOzs7O1FBQUMsVUFBQSxLQUFLO1lBQ1IsT0FBTyxLQUFLLENBQUMsR0FBRyxLQUFLLEdBQUcsQ0FBQztRQUM3QixDQUFDLEVBQUMsRUFDRixHQUFHOzs7O1FBQUMsVUFBQSxLQUFLLFdBQUksbUJBQUcsS0FBSyxDQUFDLElBQUksRUFBQSxHQUFBLEVBQUMsQ0FDOUI7UUFDTCxPQUFPLE1BQU0sQ0FBQztJQUNsQixDQUFDO0lBNUJhLDhCQUFrQixHQUFHLGVBQWUsQ0FBQztJQUNyQywwQkFBYyxHQUFHLHNCQUFzQixDQUFDO0lBQ3hDLCtCQUFtQixHQUFHLDJCQUEyQixDQUFDO0lBQ2xELGdDQUFvQixHQUFHLDRCQUE0QixDQUFDO0lBQ3BELG1DQUF1QixHQUFHLCtCQUErQixDQUFDO0lBQzFELGtDQUFzQixHQUFHLDhCQUE4QixDQUFDO0lBRXhELHFCQUFTLEdBQTRCLElBQUksQ0FBQzs7Z0JBVDNELFVBQVU7Ozs7SUErQlgsa0JBQUM7Q0FBQSxBQS9CRCxJQStCQztTQTlCWSxXQUFXOzs7SUFDcEIsK0JBQW1EOztJQUNuRCwyQkFBc0Q7O0lBQ3RELGdDQUFnRTs7SUFDaEUsaUNBQWtFOztJQUNsRSxvQ0FBd0U7O0lBQ3hFLG1DQUFzRTs7SUFFdEUsc0JBQXdEIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQgeyBPYnNlcnZhYmxlLCBTdWJqZWN0IH0gZnJvbSAncnhqcyc7XG5pbXBvcnQgeyBmaWx0ZXIsIG1hcCB9IGZyb20gJ3J4anMvb3BlcmF0b3JzJztcblxuZXhwb3J0IGludGVyZmFjZSBCcm9hZGNhc3RFdmVudCB7XG4gICAga2V5OiBhbnk7XG4gICAgZGF0YT86IGFueTtcbn1cblxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIEJyb2FkY2FzdGVyIHtcbiAgICBwdWJsaWMgc3RhdGljIENIQU5HRV9TQ1JFRU5fSE9NRSA9ICdjaGFuZ2Vfc2NyZWVuJztcbiAgICBwdWJsaWMgc3RhdGljIERDTV9BUFBfTE9HT1VUID0gJ2RjbV9hcHBfbG9nb3V0X2V2ZW50JztcbiAgICBwdWJsaWMgc3RhdGljIERDTV9MQU5HVUFHRV9DSEFOR0UgPSAnZGNtX2xhbmd1YWdlX2NoYW5nZV9ldmVudCc7XG4gICAgcHVibGljIHN0YXRpYyBEQ01fTEFOR1VBR0VfRkVUQ0hFRCA9ICdkY21fbGFuZ3VhZ2VfZmV0Y2hlZF9ldmVudCc7XG4gICAgcHVibGljIHN0YXRpYyBEQ01fTEVHQUxfRU5USVRZX0NIQU5HRSA9ICdkY21fbGVnYWxfZW50aXR5X2NoYW5nZV9ldmVudCc7XG4gICAgcHVibGljIHN0YXRpYyBEQ01fTEFOR1VBR0VfU0VMRUNUSU9OID0gJ2RjbV9sYW5ndWFnZV9zZWxlY3Rpb25fZXZlbnQnO1xuXG4gICAgcHVibGljIHN0YXRpYyBfZXZlbnRCdXM6IFN1YmplY3Q8QnJvYWRjYXN0RXZlbnQ+ID0gbnVsbDtcblxuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBpZiAoQnJvYWRjYXN0ZXIuX2V2ZW50QnVzID09IG51bGwgfHwgQnJvYWRjYXN0ZXIuX2V2ZW50QnVzID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIEJyb2FkY2FzdGVyLl9ldmVudEJ1cyA9IG5ldyBTdWJqZWN0PEJyb2FkY2FzdEV2ZW50PigpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgYnJvYWRjYXN0KGtleTogYW55LCBkYXRhPzogYW55KSB7XG4gICAgICAgIEJyb2FkY2FzdGVyLl9ldmVudEJ1cy5uZXh0KHsga2V5LCBkYXRhIH0pO1xuICAgIH1cblxuICAgIG9uPFQ+KGtleTogYW55KTogT2JzZXJ2YWJsZTxUPiB7XG4gICAgICAgIGNvbnN0IHJlc3VsdCA9IEJyb2FkY2FzdGVyLl9ldmVudEJ1cy5hc09ic2VydmFibGUoKVxuICAgICAgICAgICAgLnBpcGUoXG4gICAgICAgICAgICAgICAgZmlsdGVyKGV2ZW50ID0+IHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGV2ZW50LmtleSA9PT0ga2V5O1xuICAgICAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgICAgIG1hcChldmVudCA9PiA8VD5ldmVudC5kYXRhKSxcbiAgICAgICAgICAgICk7XG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfVxufVxuIl19