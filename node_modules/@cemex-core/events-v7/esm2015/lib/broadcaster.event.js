/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import { Subject } from 'rxjs';
import { filter, map } from 'rxjs/operators';
/**
 * @record
 */
export function BroadcastEvent() { }
if (false) {
    /** @type {?} */
    BroadcastEvent.prototype.key;
    /** @type {?|undefined} */
    BroadcastEvent.prototype.data;
}
export class Broadcaster {
    constructor() {
        if (Broadcaster._eventBus == null || Broadcaster._eventBus === undefined) {
            Broadcaster._eventBus = new Subject();
        }
    }
    /**
     * @param {?} key
     * @param {?=} data
     * @return {?}
     */
    broadcast(key, data) {
        Broadcaster._eventBus.next({ key, data });
    }
    /**
     * @template T
     * @param {?} key
     * @return {?}
     */
    on(key) {
        /** @type {?} */
        const result = Broadcaster._eventBus.asObservable()
            .pipe(filter((/**
         * @param {?} event
         * @return {?}
         */
        event => {
            return event.key === key;
        })), map((/**
         * @param {?} event
         * @return {?}
         */
        event => (/** @type {?} */ (event.data)))));
        return result;
    }
}
Broadcaster.CHANGE_SCREEN_HOME = 'change_screen';
Broadcaster.DCM_APP_LOGOUT = 'dcm_app_logout_event';
Broadcaster.DCM_LANGUAGE_CHANGE = 'dcm_language_change_event';
Broadcaster.DCM_LANGUAGE_FETCHED = 'dcm_language_fetched_event';
Broadcaster.DCM_LEGAL_ENTITY_CHANGE = 'dcm_legal_entity_change_event';
Broadcaster.DCM_LANGUAGE_SELECTION = 'dcm_language_selection_event';
Broadcaster._eventBus = null;
Broadcaster.decorators = [
    { type: Injectable }
];
/** @nocollapse */
Broadcaster.ctorParameters = () => [];
if (false) {
    /** @type {?} */
    Broadcaster.CHANGE_SCREEN_HOME;
    /** @type {?} */
    Broadcaster.DCM_APP_LOGOUT;
    /** @type {?} */
    Broadcaster.DCM_LANGUAGE_CHANGE;
    /** @type {?} */
    Broadcaster.DCM_LANGUAGE_FETCHED;
    /** @type {?} */
    Broadcaster.DCM_LEGAL_ENTITY_CHANGE;
    /** @type {?} */
    Broadcaster.DCM_LANGUAGE_SELECTION;
    /** @type {?} */
    Broadcaster._eventBus;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnJvYWRjYXN0ZXIuZXZlbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AY2VtZXgtY29yZS9ldmVudHMtdjcvIiwic291cmNlcyI6WyJsaWIvYnJvYWRjYXN0ZXIuZXZlbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFM0MsT0FBTyxFQUFjLE9BQU8sRUFBRSxNQUFNLE1BQU0sQ0FBQztBQUMzQyxPQUFPLEVBQUUsTUFBTSxFQUFFLEdBQUcsRUFBRSxNQUFNLGdCQUFnQixDQUFDOzs7O0FBRTdDLG9DQUdDOzs7SUFGRyw2QkFBUzs7SUFDVCw4QkFBVzs7QUFJZixNQUFNLE9BQU8sV0FBVztJQVVwQjtRQUNJLElBQUksV0FBVyxDQUFDLFNBQVMsSUFBSSxJQUFJLElBQUksV0FBVyxDQUFDLFNBQVMsS0FBSyxTQUFTLEVBQUU7WUFDdEUsV0FBVyxDQUFDLFNBQVMsR0FBRyxJQUFJLE9BQU8sRUFBa0IsQ0FBQztTQUN6RDtJQUNMLENBQUM7Ozs7OztJQUVELFNBQVMsQ0FBQyxHQUFRLEVBQUUsSUFBVTtRQUMxQixXQUFXLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxFQUFFLEdBQUcsRUFBRSxJQUFJLEVBQUUsQ0FBQyxDQUFDO0lBQzlDLENBQUM7Ozs7OztJQUVELEVBQUUsQ0FBSSxHQUFROztjQUNKLE1BQU0sR0FBRyxXQUFXLENBQUMsU0FBUyxDQUFDLFlBQVksRUFBRTthQUM5QyxJQUFJLENBQ0QsTUFBTTs7OztRQUFDLEtBQUssQ0FBQyxFQUFFO1lBQ1gsT0FBTyxLQUFLLENBQUMsR0FBRyxLQUFLLEdBQUcsQ0FBQztRQUM3QixDQUFDLEVBQUMsRUFDRixHQUFHOzs7O1FBQUMsS0FBSyxDQUFDLEVBQUUsQ0FBQyxtQkFBRyxLQUFLLENBQUMsSUFBSSxFQUFBLEVBQUMsQ0FDOUI7UUFDTCxPQUFPLE1BQU0sQ0FBQztJQUNsQixDQUFDOztBQTVCYSw4QkFBa0IsR0FBRyxlQUFlLENBQUM7QUFDckMsMEJBQWMsR0FBRyxzQkFBc0IsQ0FBQztBQUN4QywrQkFBbUIsR0FBRywyQkFBMkIsQ0FBQztBQUNsRCxnQ0FBb0IsR0FBRyw0QkFBNEIsQ0FBQztBQUNwRCxtQ0FBdUIsR0FBRywrQkFBK0IsQ0FBQztBQUMxRCxrQ0FBc0IsR0FBRyw4QkFBOEIsQ0FBQztBQUV4RCxxQkFBUyxHQUE0QixJQUFJLENBQUM7O1lBVDNELFVBQVU7Ozs7OztJQUVQLCtCQUFtRDs7SUFDbkQsMkJBQXNEOztJQUN0RCxnQ0FBZ0U7O0lBQ2hFLGlDQUFrRTs7SUFDbEUsb0NBQXdFOztJQUN4RSxtQ0FBc0U7O0lBRXRFLHNCQUF3RCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHsgT2JzZXJ2YWJsZSwgU3ViamVjdCB9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHsgZmlsdGVyLCBtYXAgfSBmcm9tICdyeGpzL29wZXJhdG9ycyc7XG5cbmV4cG9ydCBpbnRlcmZhY2UgQnJvYWRjYXN0RXZlbnQge1xuICAgIGtleTogYW55O1xuICAgIGRhdGE/OiBhbnk7XG59XG5cbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBCcm9hZGNhc3RlciB7XG4gICAgcHVibGljIHN0YXRpYyBDSEFOR0VfU0NSRUVOX0hPTUUgPSAnY2hhbmdlX3NjcmVlbic7XG4gICAgcHVibGljIHN0YXRpYyBEQ01fQVBQX0xPR09VVCA9ICdkY21fYXBwX2xvZ291dF9ldmVudCc7XG4gICAgcHVibGljIHN0YXRpYyBEQ01fTEFOR1VBR0VfQ0hBTkdFID0gJ2RjbV9sYW5ndWFnZV9jaGFuZ2VfZXZlbnQnO1xuICAgIHB1YmxpYyBzdGF0aWMgRENNX0xBTkdVQUdFX0ZFVENIRUQgPSAnZGNtX2xhbmd1YWdlX2ZldGNoZWRfZXZlbnQnO1xuICAgIHB1YmxpYyBzdGF0aWMgRENNX0xFR0FMX0VOVElUWV9DSEFOR0UgPSAnZGNtX2xlZ2FsX2VudGl0eV9jaGFuZ2VfZXZlbnQnO1xuICAgIHB1YmxpYyBzdGF0aWMgRENNX0xBTkdVQUdFX1NFTEVDVElPTiA9ICdkY21fbGFuZ3VhZ2Vfc2VsZWN0aW9uX2V2ZW50JztcblxuICAgIHB1YmxpYyBzdGF0aWMgX2V2ZW50QnVzOiBTdWJqZWN0PEJyb2FkY2FzdEV2ZW50PiA9IG51bGw7XG5cbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgaWYgKEJyb2FkY2FzdGVyLl9ldmVudEJ1cyA9PSBudWxsIHx8IEJyb2FkY2FzdGVyLl9ldmVudEJ1cyA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICBCcm9hZGNhc3Rlci5fZXZlbnRCdXMgPSBuZXcgU3ViamVjdDxCcm9hZGNhc3RFdmVudD4oKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGJyb2FkY2FzdChrZXk6IGFueSwgZGF0YT86IGFueSkge1xuICAgICAgICBCcm9hZGNhc3Rlci5fZXZlbnRCdXMubmV4dCh7IGtleSwgZGF0YSB9KTtcbiAgICB9XG5cbiAgICBvbjxUPihrZXk6IGFueSk6IE9ic2VydmFibGU8VD4ge1xuICAgICAgICBjb25zdCByZXN1bHQgPSBCcm9hZGNhc3Rlci5fZXZlbnRCdXMuYXNPYnNlcnZhYmxlKClcbiAgICAgICAgICAgIC5waXBlKFxuICAgICAgICAgICAgICAgIGZpbHRlcihldmVudCA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBldmVudC5rZXkgPT09IGtleTtcbiAgICAgICAgICAgICAgICB9KSxcbiAgICAgICAgICAgICAgICBtYXAoZXZlbnQgPT4gPFQ+ZXZlbnQuZGF0YSksXG4gICAgICAgICAgICApO1xuICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH1cbn1cbiJdfQ==