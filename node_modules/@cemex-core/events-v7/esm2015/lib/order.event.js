/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import { BehaviorSubject } from 'rxjs';
export class OrderEvents {
    constructor() {
        // Observable items sources
        this.orderSelectedSubject = new BehaviorSubject(null);
        // Observable items streams
        this.order$ = this.orderSelectedSubject.asObservable();
    }
    /**
     * @param {?} order
     * @return {?}
     */
    selectOrder(order) {
        /** @type {?} */
        const currentOrder = this.orderSelectedSubject.getValue();
        // Fire only if customer differs from the selected one
        if (currentOrder !== order) {
            this.orderSelectedSubject.next(order);
        }
    }
    /**
     * @return {?}
     */
    getOrderSelected() {
        return this.order$;
    }
    /**
     * @return {?}
     */
    currentOrderSelected() {
        return this.orderSelectedSubject.getValue();
    }
}
OrderEvents.decorators = [
    { type: Injectable }
];
/** @nocollapse */
OrderEvents.ctorParameters = () => [];
if (false) {
    /**
     * @type {?}
     * @private
     */
    OrderEvents.prototype.orderSelectedSubject;
    /**
     * @type {?}
     * @private
     */
    OrderEvents.prototype.order$;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib3JkZXIuZXZlbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AY2VtZXgtY29yZS9ldmVudHMtdjcvIiwic291cmNlcyI6WyJsaWIvb3JkZXIuZXZlbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFM0MsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLE1BQU0sQ0FBQztBQUd2QyxNQUFNLE9BQU8sV0FBVztJQU9wQjs7UUFMUSx5QkFBb0IsR0FBRyxJQUFJLGVBQWUsQ0FBTSxJQUFJLENBQUMsQ0FBQzs7UUFHdEQsV0FBTSxHQUFHLElBQUksQ0FBQyxvQkFBb0IsQ0FBQyxZQUFZLEVBQUUsQ0FBQztJQUUxQyxDQUFDOzs7OztJQUVqQixXQUFXLENBQUMsS0FBVTs7Y0FDWixZQUFZLEdBQUcsSUFBSSxDQUFDLG9CQUFvQixDQUFDLFFBQVEsRUFBRTtRQUV6RCxzREFBc0Q7UUFDdEQsSUFBSSxZQUFZLEtBQUssS0FBSyxFQUFFO1lBQ3hCLElBQUksQ0FBQyxvQkFBb0IsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7U0FDekM7SUFDTCxDQUFDOzs7O0lBRUQsZ0JBQWdCO1FBQ1osT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDO0lBQ3ZCLENBQUM7Ozs7SUFFRCxvQkFBb0I7UUFDaEIsT0FBTyxJQUFJLENBQUMsb0JBQW9CLENBQUMsUUFBUSxFQUFFLENBQUM7SUFDaEQsQ0FBQzs7O1lBekJKLFVBQVU7Ozs7Ozs7OztJQUdQLDJDQUE4RDs7Ozs7SUFHOUQsNkJBQTBEIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQgeyBCZWhhdmlvclN1YmplY3QgfSBmcm9tICdyeGpzJztcblxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIE9yZGVyRXZlbnRzIHtcbiAgICAvLyBPYnNlcnZhYmxlIGl0ZW1zIHNvdXJjZXNcbiAgICBwcml2YXRlIG9yZGVyU2VsZWN0ZWRTdWJqZWN0ID0gbmV3IEJlaGF2aW9yU3ViamVjdDxhbnk+KG51bGwpO1xuXG4gICAgLy8gT2JzZXJ2YWJsZSBpdGVtcyBzdHJlYW1zXG4gICAgcHJpdmF0ZSBvcmRlciQgPSB0aGlzLm9yZGVyU2VsZWN0ZWRTdWJqZWN0LmFzT2JzZXJ2YWJsZSgpO1xuXG4gICAgY29uc3RydWN0b3IoKSB7IH1cblxuICAgIHNlbGVjdE9yZGVyKG9yZGVyOiBhbnkpIHtcbiAgICAgICAgY29uc3QgY3VycmVudE9yZGVyID0gdGhpcy5vcmRlclNlbGVjdGVkU3ViamVjdC5nZXRWYWx1ZSgpO1xuXG4gICAgICAgIC8vIEZpcmUgb25seSBpZiBjdXN0b21lciBkaWZmZXJzIGZyb20gdGhlIHNlbGVjdGVkIG9uZVxuICAgICAgICBpZiAoY3VycmVudE9yZGVyICE9PSBvcmRlcikge1xuICAgICAgICAgICAgdGhpcy5vcmRlclNlbGVjdGVkU3ViamVjdC5uZXh0KG9yZGVyKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGdldE9yZGVyU2VsZWN0ZWQoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLm9yZGVyJDtcbiAgICB9XG5cbiAgICBjdXJyZW50T3JkZXJTZWxlY3RlZCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMub3JkZXJTZWxlY3RlZFN1YmplY3QuZ2V0VmFsdWUoKTtcbiAgICB9XG59XG4iXX0=