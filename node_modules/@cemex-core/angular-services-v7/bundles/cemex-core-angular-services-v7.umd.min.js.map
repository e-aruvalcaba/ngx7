{"version":3,"sources":["node_modules/tslib/tslib.es6.js","ng://@cemex-core/angular-services-v7/lib/project.settings.ts","ng://@cemex-core/angular-services-v7/lib/http.service.ts","ng://@cemex-core/angular-services-v7/lib/session.service.ts","ng://@cemex-core/angular-services-v7/lib/legalEntity.service.ts","ng://@cemex-core/angular-services-v7/lib/financialDocuments.service.ts","ng://@cemex-core/angular-services-v7/lib/auth-guard.service.ts","ng://@cemex-core/angular-services-v7/lib/translation.service.ts","ng://@cemex-core/angular-services-v7/lib/logger.service.ts","ng://@cemex-core/angular-services-v7/lib/featureToggle.service.ts","ng://@cemex-core/angular-services-v7/lib/country-config.service.ts","ng://@cemex-core/angular-services-v7/lib/validators/email.validators.ts","ng://@cemex-core/angular-services-v7/lib/validators/number.validators.ts","ng://@cemex-core/angular-services-v7/lib/invoices-payments/cashSales.service.ts","ng://@cemex-core/angular-services-v7/lib/analytics/countly.service.ts","ng://@cemex-core/angular-services-v7/lib/analytics/analytics.factory.ts","ng://@cemex-core/angular-services-v7/lib/push-notifications/push-notifications.constants.ts","ng://@cemex-core/angular-services-v7/lib/push-notifications/push-notifications.service.ts","ng://@cemex-core/angular-services-v7/lib/core-common.providers.ts","ng://@cemex-core/angular-services-v7/lib/core-common.module.ts"],"names":["__generator","thisArg","body","f","y","t","g","_","label","sent","trys","ops","next","verb","throw","return","Symbol","iterator","this","n","v","step","op","TypeError","call","done","value","pop","length","push","e","__values","o","m","i","ProjectSettings","APP_KEYS","_appCode","_clientId","_apiBasePath","_apiOrg","_apiEnv","undefined","console","warn","Object","defineProperty","prototype","generateEndpoint","apiEndpoint","getBaseOrgEnvPath","setAppKeys","newKeys","APP_CODE","CLIENT_ID","Injectable","HttpCemex","http","projectSettings","_validSettings","validateProjectSettings","clientId","appCode","request","url","options","loptions","createAuthorizationHeader","get","overrideHeader","post","Observable","Error","put","patch","delete","head","isRunningOnBrowser","encrypt","str","window","btoa","unescape","encodeURIComponent","decrypt","decodeURIComponent","escape","atob","setProjectSettingsNewKeys","containsHeader","headers","keys","result","assign","RequestOptions","Headers","language","localStorage","getItem","append","accessToken","sessionStorage","jwtApp","headerKeys","headerKeys_1","tslib_1.__values","headerKeys_1_1","keyHeader","set","settings","apiBasePath","apiEnv","apiOrg","Http","SessionService","eventBroadcaster","authTokenVersion","siteDomain","_siteDomain","_menuApplication","BehaviorSubject","_currentLegalEntity","_userProfile","_beforeLogout","toLocaleLowerCase","_endpoint","SessionServiceConstants","LOGIN_TOKEN_V6","LOGIN_TOKEN_DEFAULT","setItem","getValue","reloadAppMenuItems","asObservable","setLegalEntity","JSON","stringify","broadcast","Broadcaster","DCM_LEGAL_ENTITY_CHANGE","jwtToken","logout","_this","observer","subscribe","logoutApp","message","success","error","login","user","password","generateCookie","appName","validateTempPassword","clean","Content-Type","accept","endpoint","urlPost","generateUrlString","toPromise","then","response","__awaiter","_arguments","P","generator","Promise","resolve","reject","fulfilled","rejected","apply","data","json","userId","profile","processDataFromLogin","LOGIN_SUCCESS_EVENT","hasTemporaryPassword","catch","LOGIN_FAIL_EVENT","setUserProfile","getLegalEntities","fetch","page","legalEntityCode","USER_LEGAL_ENTITIES","addQueryParams","pipe","map","responseMap","catchError","handleError","setBeforeLogout","method","getBeforeLogout","getDCMApplications","createCookie","name","days","expires","date","Date","setTime","getTime","toUTCString","cookie","document","readCookie","c","ca","split","caLen","cookieName","replace","indexOf","substring","clearCookie","strProfile","tmpProfile","convertJsonTo","strCustomer","userCustomer","customer","removeItem","toLowerCase","sessionCookie","auth","oauth2","access_token","expires_in","jwt","refresh_token","region","applications","country","role","userAccount","accessToKen","encryptData","_users","firstUser","accountType","countryCode","customerId","firstName","fullName","lastName","phoneNumber","userSelectedId","userStatus","userType","encryptUser","_profile","dataProfile","allowEmailUpdates","allowInformationShare","userEmail","userPosition","userProfileId","encryptProfile","_customers","dataCustomer","customerCode","customerCodeLZR","customerDesc","customerDesc2","email","faxNumber","regionId","vAT","encryptcustomer","_applications","apps","app","applicationCode","applicationId","applicationType","isVisible","encryptApplications","_roles","roles","application","isInternal","isOptional","roleCode","roleId","roleType","encryptRoles","USER_APPLICATION_MENU","tmpJson","obj","parse","Response","status","statusText","toString","throwError","validPagination","Number","isInteger","DCM_APP_LOGOUT","LOGIN_LOGOUT_EVENT","AUTH_TOKEN_VERSION","Inject","args","type","Optional","LegalEntity","endpoints","getLegalEntity","getUrl","getAllLegalEntityCustomers","responseLegalEntity","getLegalEntityByCustomer","company","getLegalEntityByCompany","companyCode","getLegalEntityJobsites","api","jobSite","V1","armCapability","EndpointsConstants","FinancialDocuments","AuthGuard","router","sessionService","canActivate","isLoggedIn","navigate","Router","TranslationService","_productPath","useTranslationServer","_translationUrl","_useTranslationServer","productPath","_localeData","Subject","comingFromReact","langLocalStorage","localLang","lang","st","textID","textValue","translation","all","onChange","labels","populateTranslation","isoLang","file","pt","getLabel","textId","getlang","getCountryCode","_b","_c","item","DCM_LANGUAGE_FETCHED","Map","PRODUCT_PATH","USE_TRANSLATION_SERVER","TRANSLATION_BASE_URL","Logger","log","logf","FeatureToggleService","_productEnvironment","localManifest","productEnvironment","getFeatureList","featureList","feature","featureId","releaseVersion","featureVersion","hostName","coreValidator","forEach","singleFeature","getAll","loadFromLocalList","populateFeatures","localFind","isRoleAssigned_1","role_match","rolesAssigned_1","role_any","rolesAssigned_2","environment","release_version","feature_version","host_name","ENVIRONMENT","USE_LOCAL_MANIFEST","CountryConfigService","projectEnv","_countryConfig","_countryConfigApiPath","getCountryConfiguration","userCountry","res","EmailValidators","pattern","test","patternInvalid","NumberValidators","isNumeric","isNaN","parseFloat","isFinite","notNumeric","onlyTwoDecimals","greaterThanZero","lessThanZero","isPositive","isNegative","lessThan","max","maxNumber","control","num","isGreater","greaterThan","min","minNumber","isLess","CashSalesService","apiCashDocuments","getCreditDocs","jobSiteCode","apiQuery","aux","handleCashDocumentsData","index","flagInvalidAmnt","errMsg","toCommit","createDate","d1","d2","amount","reconciledAmount","commitedAmount","peCapability","CountlyService","defaultTrackings","Countly","init","addTracking","debug","flag","startService","appKey","app_key","q","key","addTrackingPage","changeId","newId","identifyUser","userfields","endSession","removeTracking","trackingjson","element","AnalyticsFactory","createService","analitycServiceType","configuration","Type","service","Clevertap","Other","PushNotificationsConstants","apiClientId","apiHost","appLanguage","authToken","urlServiceWorker","deviceApi","sourcePush","vapidPublicKey","getAppCode","getClientId","getApiBasePath","getAppLanguage","getAuthToken","getJwt","getUrlSW","getDevicesPath","getSourcePush","getVapidPublicKey","setVapidPublicKey","pVapidPublicKey","setUrlSW","urlSW","PushNotificationService","constants","_devUUID","_devId","_platform","_token","initialize","methodCallBack","_methodCallBack","_vapidPublicKey","validateSw","swReg","registerSw","subscriptionSw","isValid","navigator","serviceWorker","register","installing","waiting","active","showNotification","registration","mSetSubscription","setSubscription","global","pushManager","getSubscription","subscriptionInit","applicationServerKey","urlB64ToUint8Array","userVisibleOnly","subscription","generateTokenForRegisterDevice","registerBroadcastListener","callBack","sPush","addEventListener","event","source","payload","generateUUID","rawKey","getKey","String","fromCharCode","Uint8Array","rawAuthSecret","authSecret","tokenValue","userAuth","userPublicKey","userAgent","device","validateInput","deviceId","platform","token","uuid","registerDevice","xhr","setRequest","onreadystatechange","readyState","responseText","send","unRegisterDevice","ready","unregister","checkUnregister","unsubscribeDevice","deviceID","devices","xhr_1","asyncP","XMLHttpRequest","open","setHeaders","setRequestHeader","timeout","dateTime","performance","now","hostname","location","arrayData","hashCode","finalString","join","charAt","Math","floor","random","len","hash","charCodeAt","stringValue","base64String","base64","repeat","rawData","outputArray","CORE_COMMON_PROVIDERS","CmxCoreCommonModule","NgModule","declarations","exports","imports","providers"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Injectable } from '@angular/core';\n\ndeclare var global: any;\n\n@Injectable()\nexport class ProjectSettings {\n  private _appCode: string;\n  private _clientId: string;\n  private _apiBasePath: string;\n  private _apiOrg: string;\n  private _apiEnv: string;\n\n  constructor() {\n    const APP_KEYS = {\n      API_ENV_KEY: 'API_ENV',\n      API_HOST_KEY: 'API_HOST',\n      API_ORG_KEY: 'API_ORG',\n      APP_CODE_KEY: 'APP_CODE',\n      CLIENT_ID_KEY: 'CLIENT_ID'\n    };\n\n    this._appCode = (global as any)[APP_KEYS.APP_CODE_KEY];\n    this._clientId = (global as any)[APP_KEYS.CLIENT_ID_KEY];\n    this._apiBasePath = (global as any)[APP_KEYS.API_HOST_KEY];\n    this._apiOrg = (global as any)[APP_KEYS.API_ORG_KEY];\n    this._apiEnv = (global as any)[APP_KEYS.API_ENV_KEY];\n\n    if (this._apiBasePath === undefined) {\n      console.warn('environment variable \\'API_HOST\\' is missing !!');\n    }\n  }\n\n  // ============================================================================================\n  // Getters\n  // ============================================================================================\n\n  public get appCode(): string {\n    return this._appCode;\n  }\n\n  public get clientId(): string {\n    return this._clientId;\n  }\n\n  public get apiBasePath(): string {\n    return this._apiBasePath;\n  }\n\n  public get apiOrg(): string {\n    return this._apiOrg;\n  }\n\n  public get apiEnv(): string {\n    return this._apiEnv;\n  }\n\n  public generateEndpoint(apiEndpoint: string): string {\n    const url = `${this._apiBasePath}${this._apiOrg}${\n      this._apiEnv\n    }${apiEndpoint}`;\n    return url;\n  }\n\n  public getBaseOrgEnvPath(): string {\n    return this._apiBasePath + this._apiOrg + this._apiEnv;\n  }\n\n  public setAppKeys(newKeys): void {\n    this._appCode = newKeys.APP_CODE;\n    this._clientId = newKeys.CLIENT_ID;\n\n    if (this._apiBasePath === undefined) {\n      console.warn('environment variable \\'API_HOST\\' is missing !!');\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  Headers,\n  Http,\n  Request,\n  RequestOptions,\n  RequestOptionsArgs\n} from '@angular/http';\n\nimport { Observable } from 'rxjs';\n\nimport { ProjectSettings } from './project.settings';\n\ndeclare var global: any;\n\n@Injectable()\nexport class HttpCemex {\n  private _validSettings = false;\n\n  constructor(protected http: Http, private projectSettings: ProjectSettings) {\n    this._validSettings = this.validateProjectSettings();\n  }\n\n  public generateEndpoint(apiEndpoint: string): string {\n    return this.projectSettings.generateEndpoint(apiEndpoint);\n  }\n\n  get clientId(): string {\n    return this.projectSettings.clientId;\n  }\n\n  get appCode(): string {\n    return this.projectSettings.appCode;\n  }\n\n  public request(url: string | Request, options?: RequestOptionsArgs) {\n    const loptions: RequestOptionsArgs = this.createAuthorizationHeader(\n      options\n    );\n    return this.http.request(url, loptions);\n  }\n\n  public get(\n    url: string,\n    options?: RequestOptionsArgs,\n    overrideHeader?: boolean\n  ) {\n    const loptions: RequestOptionsArgs = this.createAuthorizationHeader(\n      options,\n      overrideHeader\n    );\n    return this.http.get(url, loptions);\n  }\n\n  public post(\n    url: string,\n    body: any,\n    options?: RequestOptionsArgs,\n    overrideHeader?: boolean\n  ): any {\n    if (!this._validSettings) {\n      const message =\n        'Set missing environment variables of API_HOST, API_ORG, API_ENV, APP_CODE, CLIENT_ID';\n      return Observable.throw(new Error(message));\n    }\n\n    const loptions: RequestOptionsArgs = this.createAuthorizationHeader(\n      options,\n      overrideHeader\n    );\n    return this.http.post(url, body, loptions);\n  }\n\n  public put(\n    url: string,\n    body: any,\n    options?: RequestOptionsArgs,\n    overrideHeader?: boolean\n  ) {\n    const loptions: RequestOptionsArgs = this.createAuthorizationHeader(\n      options,\n      overrideHeader\n    );\n    return this.http.put(url, body, loptions);\n  }\n\n  public patch(\n    url: string,\n    body: any,\n    options?: RequestOptionsArgs,\n    overrideHeader?: boolean\n  ) {\n    const loptions: RequestOptionsArgs = this.createAuthorizationHeader(\n      options,\n      overrideHeader\n    );\n    return this.http.patch(url, body, loptions);\n  }\n\n  public delete(\n    url: string,\n    options?: RequestOptionsArgs,\n    overrideHeader?: boolean\n  ) {\n    const loptions: RequestOptionsArgs = this.createAuthorizationHeader(\n      options,\n      overrideHeader\n    );\n    return this.http.delete(url, loptions);\n  }\n\n  public head(\n    url: string,\n    options?: RequestOptionsArgs,\n    overrideHeader?: boolean\n  ) {\n    const loptions: RequestOptionsArgs = this.createAuthorizationHeader(\n      options,\n      overrideHeader\n    );\n    return this.http.head(url, loptions);\n  }\n\n  public isRunningOnBrowser(): boolean {\n    return (global as any) !== null && (global as any) !== undefined;\n  }\n\n  public encrypt(str) {\n    return window.btoa(unescape(encodeURIComponent(str)));\n  }\n\n  public decrypt(str) {\n    return str ? decodeURIComponent(escape(window.atob(str))) : str;\n  }\n\n  public setProjectSettingsNewKeys(newKeys): void {\n    this.projectSettings.setAppKeys(newKeys);\n  }\n\n  protected createAuthorizationHeader(\n    options: RequestOptionsArgs,\n    overrideHeader?: boolean\n  ): RequestOptionsArgs {\n    const containsHeader =\n      options && options.headers && options.headers.keys().length > 0;\n    const result: RequestOptionsArgs = options\n      ? Object.assign({}, options)\n      : new RequestOptions();\n    const headers = new Headers();\n    const language = this.isRunningOnBrowser()\n      ? (window as any).localStorage.getItem('language') || 'en'\n      : 'en';\n\n    headers.append('Accept', 'application/json');\n    headers.append('X-IBM-Client-Id', this.projectSettings.clientId);\n    headers.append('App-Code', this.projectSettings.appCode);\n    headers.append('Accept-Language', language);\n    const accessToken = sessionStorage.getItem('access_token');\n    const isContainsToken = accessToken && accessToken !== undefined;\n    if (isContainsToken) {\n      headers.append('Authorization', 'Bearer ' + accessToken);\n    }\n\n    const jwtApp = sessionStorage.getItem('jwt');\n    if (this.isRunningOnBrowser() && jwtApp && jwtApp !== undefined) {\n      headers.append('jwt', jwtApp);\n    }\n\n    // overwrite existing headers or add new headers\n    const headerKeys = containsHeader ? options.headers.keys() : [];\n    for (const keyHeader of headerKeys) {\n      headers.set(keyHeader, options.headers.get(keyHeader));\n    }\n\n    result.headers = headers;\n\n    if (overrideHeader && containsHeader) {\n      result.headers = options.headers;\n    }\n\n    return result;\n  }\n\n  private validateProjectSettings(): boolean {\n    const settings = this.projectSettings;\n    return (\n      settings.apiBasePath !== undefined &&\n      settings.apiEnv !== undefined &&\n      settings.apiOrg !== undefined &&\n      settings.appCode !== undefined &&\n      settings.clientId !== undefined\n    );\n  }\n}\n","import { Inject, Injectable, Optional } from '@angular/core';\nimport { Headers, RequestOptions, Response } from '@angular/http';\n\nimport { BehaviorSubject, Observable, throwError } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\n\nimport { SessionServiceConstants } from '@cemex-core/constants-v2/dist';\nimport { Broadcaster } from '@cemex-core/events-v7';\nimport {\n  IApplicationMenu,\n  ICustomer,\n  ILegalEntity,\n  IUserProfile\n} from '@cemex-core/types-v2/dist/index.interface';\n\nimport { HttpCemex } from './http.service';\nimport { Profile } from './models/profile';\nimport { Customer } from './models/customer';\nimport { User } from './models/user';\nimport { Role } from './models/role';\nimport { Application } from './models/application';\n\n@Injectable()\nexport class SessionService {\n  public static LOGIN_SUCCESS_EVENT = 'LOGIN_SUCCESS_EVENT';\n  public static LOGIN_FAIL_EVENT = 'LOGIN_FAIL_EVENT';\n  public static LOGIN_LOGOUT_EVENT = 'LOGIN_LOGOUT_EVENT';\n  public static AUTH_TOKEN_VERSION = 'auth_token_version';\n\n  private siteDomain = 'SITE_DOMAIN';\n  private _siteDomain = window[this.siteDomain] || '';\n  private _endpoint: string;\n  private _menuApplication = new BehaviorSubject<IApplicationMenu[]>([]);\n  private _currentLegalEntity = new BehaviorSubject<ILegalEntity>(null);\n  private _userProfile: IUserProfile = null;\n  private _beforeLogout: Observable<any> = null;\n\n  constructor(\n    protected http: HttpCemex,\n    protected eventBroadcaster: Broadcaster,\n    @Inject(SessionService.AUTH_TOKEN_VERSION)\n    @Optional()\n    private authTokenVersion: string\n  ) {\n    if (authTokenVersion) {\n      switch (authTokenVersion.toLocaleLowerCase()) {\n        case 'v6':\n          this._endpoint = SessionServiceConstants.LOGIN_TOKEN_V6;\n          break;\n        default:\n          this._endpoint = SessionServiceConstants.LOGIN_TOKEN_DEFAULT;\n      }\n    } else {\n      this._endpoint = SessionServiceConstants.LOGIN_TOKEN_DEFAULT;\n    }\n    if (\n      localStorage.getItem('language') === undefined ||\n      (localStorage.getItem('language') === null &&\n        (sessionStorage.getItem('language') !== undefined && sessionStorage.getItem('language') !== null))\n    ) {\n      localStorage.setItem('language', sessionStorage.getItem('language'));\n    }\n  }\n\n  public get menuApplicationItems(): Observable<IApplicationMenu[]> {\n    if (this._menuApplication.getValue().length === 0) {\n      this.reloadAppMenuItems();\n    }\n    return this._menuApplication.asObservable();\n  }\n\n  public setLegalEntity(value: ILegalEntity) {\n    sessionStorage.setItem('user_legal_entity', JSON.stringify(value));\n    this.eventBroadcaster.broadcast(Broadcaster.DCM_LEGAL_ENTITY_CHANGE, JSON.stringify(value));\n    this._currentLegalEntity.next(value);\n  }\n\n  public get currentLegalEntity(): Observable<ILegalEntity> {\n    return this._currentLegalEntity.asObservable();\n  }\n\n  public get isLoggedIn(): boolean {\n    const accessToken = sessionStorage.getItem('access_token');\n    const jwtToken = sessionStorage.getItem('jwt');\n    return (\n      accessToken !== null &&\n      accessToken !== undefined &&\n      accessToken !== '' &&\n      jwtToken != null &&\n      jwtToken !== undefined &&\n      jwtToken !== ''\n    );\n  }\n\n  public logout(): Observable<{\n    success: boolean;\n    message: string;\n  }> {\n    return new Observable(observer => {\n      if (this._beforeLogout) {\n        this._beforeLogout.subscribe(\n          result => {\n            this.logoutApp();\n            observer.next({\n              message: 'success',\n              success: true\n            });\n          },\n          error => {\n            observer.next({\n              message: error,\n              success: false\n            });\n          }\n        );\n      } else {\n        this.logoutApp();\n        observer.next({\n          message: 'success',\n          success: true\n        });\n      }\n\n      return observer;\n    });\n  }\n\n  public login(\n    user: string,\n    password: string,\n    generateCookie?: boolean,\n    appName?: string,\n    validateTempPassword?: boolean\n  ): Promise<any> {\n    this.clean();\n    const options = new RequestOptions({\n      headers: new Headers({\n        'Content-Type': 'application/x-www-form-urlencoded',\n        accept: 'text/plain, */*'\n      })\n    });\n\n    const endpoint = this.http.generateEndpoint(this._endpoint);\n    const urlPost = this.generateUrlString(user, password, appName);\n    return this.http\n      .post(endpoint, urlPost, options)\n      .toPromise()\n      .then(async response => {\n        const data = response.json();\n\n        const userId =\n          this.authTokenVersion === 'v6'\n            ? data.userId\n              ? data.userId\n              : data.profile.userId\n            : data.profile.userId;\n        this.processDataFromLogin(data, generateCookie);\n\n        this.eventBroadcaster.broadcast(SessionService.LOGIN_SUCCESS_EVENT);\n\n        if (\n          validateTempPassword &&\n          data.profile &&\n          data.profile.hasTemporaryPassword\n        ) {\n          return Promise.resolve(data);\n        }\n      })\n      .catch(error => {\n        console.error(error);\n        this.eventBroadcaster.broadcast(SessionService.LOGIN_FAIL_EVENT);\n        return Promise.reject(error);\n      });\n  }\n\n  public get userRegion(): string {\n    return sessionStorage.getItem('region') || 'US';\n  }\n\n  public get userCountry(): string {\n    return sessionStorage.getItem('country') || '';\n  }\n\n  public get userProfile(): IUserProfile {\n    if (!this._userProfile) {\n      this.setUserProfile();\n    }\n\n    return this._userProfile;\n  }\n\n  public getLegalEntities(\n    fetch?: number,\n    page?: number,\n    legalEntityCode?: string,\n  ): Observable<ILegalEntity[]> {\n    let endpoint = this.http.generateEndpoint(SessionServiceConstants.USER_LEGAL_ENTITIES);\n    endpoint = this.addQueryParams(endpoint, fetch, page, legalEntityCode);\n\n    return this.http.get(endpoint).pipe(\n      map((response: Response) => {\n        let responseMap = [];\n        const tmpJson = response.json();\n        if (tmpJson) {\n          responseMap = response.json();\n        }\n        return responseMap;\n      }),\n      catchError(e => Observable.throw(this.handleError(e)))\n    );\n  }\n\n  public setBeforeLogout(method: Observable<any>): void {\n    this._beforeLogout = method;\n  }\n\n  public getBeforeLogout(): Observable<any> {\n    return this._beforeLogout;\n  }\n\n  public reloadAppMenuItems(): void {\n    this.getDCMApplications().subscribe(result => {\n      this._menuApplication.next(result);\n    });\n  }\n\n  public createCookie(name: string, value: string, days?: number) {\n    let expires = '';\n    if (days) {\n      const date = new Date();\n      date.setTime(date.getTime() + days * 24 * 60 * 60 * 1000);\n      expires = date.toUTCString();\n    } else {\n      days = 0;\n    }\n\n    const cookie = `${name}=${value};expires=${expires};domain=${this._siteDomain};path=/`;\n    document.cookie = cookie;\n  }\n\n  public readCookie(name: string): string {\n    const ca = document.cookie.split(';');\n    const caLen: number = ca.length;\n    const cookieName = `${name}=`;\n    let c: string;\n    for (let i = 0; i < caLen; i += 1) {\n      c = ca[i].replace(/^\\s+/g, '');\n      if (c.indexOf(cookieName) === 0) {\n        return c.substring(cookieName.length, c.length);\n      }\n    }\n    return null;\n  }\n\n  public clearCookie(name) {\n    this.createCookie(name, '', -1);\n  }\n\n  public setUserProfile(): void {\n    const strProfile: string = sessionStorage.getItem('user_profile');\n    const tmpProfile: IUserProfile = this.convertJsonTo<IUserProfile>(strProfile);\n    if (tmpProfile) {\n      const strCustomer: string = sessionStorage.getItem('user_customer');\n      const userCustomer = this.convertJsonTo<ICustomer>(strCustomer);\n      if (userCustomer) {\n        tmpProfile.customer = userCustomer;\n      } else {\n        console.warn('Exception at parsing User Customer from sessionStore');\n      }\n\n      this._userProfile = tmpProfile;\n    } else {\n      console.warn('Exception at parsing User Profile from sessionStore');\n    }\n  }\n\n  public clean(): void {\n    this.clearCookie('CemexGoRegion');\n    this.clearCookie('up_session');\n    sessionStorage.removeItem('access_token');\n    sessionStorage.removeItem('refresh_token');\n    sessionStorage.removeItem('expires_in');\n    sessionStorage.removeItem('jwt');\n    sessionStorage.removeItem('region');\n    sessionStorage.removeItem('user_profile');\n    sessionStorage.removeItem('user_customer');\n    sessionStorage.removeItem('user_legal_entity');\n    sessionStorage.removeItem('user_applications');\n    // patch-fix for react\n    sessionStorage.removeItem('auth_token');\n    sessionStorage.removeItem('userInfo');\n    sessionStorage.removeItem('country');\n    sessionStorage.removeItem('token_data');\n    sessionStorage.removeItem('applications');\n    sessionStorage.removeItem('role');\n    sessionStorage.removeItem('username');\n\n    // new verssion API ( v6 )\n    sessionStorage.removeItem('userAuthV6');\n    sessionStorage.removeItem('userInfoV6');\n    sessionStorage.removeItem('userProfileV6');\n    sessionStorage.removeItem('userCustomerV6');\n    sessionStorage.removeItem('userApplicationsV6');\n    sessionStorage.removeItem('userRolesV6');\n  }\n\n  public generateUrlString(\n    user: string,\n    password: string,\n    appName?: string\n  ): string {\n    const include = '&include=userinfo,profile,applications,roles,customers,oldVersion';\n    let url =\n      'grant_type=password&scope=security&username=' +\n      user +\n      '&password=' +\n      encodeURIComponent(password) +\n      '&client_id=' +\n      this.http.clientId;\n\n    if (appName) { url = url + '&app_name=' + appName; }\n    if (this.authTokenVersion) {\n      if (this.authTokenVersion.toLowerCase() === 'v6') {\n        url = `${url}&userinformation=false${include}`;\n      }\n    }\n    return url;\n  }\n\n  public processDataFromLogin(data: any, generateCookie?: boolean): void {\n    // session cookie\n    if (generateCookie) {\n      const sessionCookie = {\n        auth: data.oauth2.access_token,\n        expires_in: data.oauth2.expires_in,\n        jwt: data.jwt,\n        refresh_token: data.oauth2.refresh_token,\n        region: data.oauth2.region,\n      };\n      this.createCookie('up_session', JSON.stringify(sessionCookie), null);\n    }\n\n    this.createCookie('CemexGoRegion', data.oauth2.region, null);\n\n    sessionStorage.setItem('access_token', data.oauth2.access_token);\n    sessionStorage.setItem('refresh_token', data.oauth2.refresh_token);\n    sessionStorage.setItem('expires_in', data.oauth2.expires_in);\n    sessionStorage.setItem('jwt', data.jwt);\n    sessionStorage.setItem('auth_token', data.oauth2.access_token);\n    sessionStorage.setItem('user_profile', JSON.stringify(data.profile));\n    sessionStorage.setItem('user_customer', JSON.stringify(data.customer));\n    sessionStorage.setItem('user_applications', JSON.stringify(data.applications));\n\n    // react\n    sessionStorage.setItem('userInfo', JSON.stringify(data));\n    sessionStorage.setItem('country', data.country);\n    sessionStorage.setItem('token_data', JSON.stringify(data));\n    sessionStorage.setItem('applications', JSON.stringify(data.applications));\n\n    sessionStorage.setItem('region', data.oauth2.region);\n    sessionStorage.setItem('role', data.role);\n    sessionStorage.setItem('username', data.profile.userAccount);\n\n    this.setUserProfile();\n\n        // call API V6 ( New Model)\n        const accessToKen = {\n          oauth2: data.oauth2,\n          // tslint:disable-next-line:object-literal-sort-keys\n          jwt: data.jwt,\n          userId: data.userId ? data.userId : data.profile.userId,\n        };\n        const encryptData = this.encrypt(JSON.stringify(accessToKen));\n        sessionStorage.setItem('userAuthV6', encryptData);\n\n        if (data._users) {\n          const firstUser = data._users[0];\n          const user: User = {\n            accountType: firstUser.accountType,\n            countryCode: firstUser.country.countryCode,\n            customerId: (firstUser.customer) ? firstUser.customer.customerId : 0,\n            firstName: firstUser.firstName,\n            fullName: firstUser.fullName,\n            lastName: firstUser.lastName,\n            phoneNumber: firstUser.phoneNumber,\n            userAccount: firstUser.userAccount,\n            userId: firstUser.userId,\n            userSelectedId: firstUser.userSelectedId,\n            userStatus: firstUser.userStatus,\n            userType: firstUser.userType,\n          };\n          const encryptUser = this.encrypt(JSON.stringify(user));\n          sessionStorage.setItem('userInfoV6', encryptUser);\n        }\n\n        if (data._profile) {\n          const dataProfile = data._profile;\n          const profile: Profile = {\n            allowEmailUpdates: dataProfile.allowEmailUpdates,\n            allowInformationShare: dataProfile.allowInformationShare,\n            hasTemporaryPassword: dataProfile.hasTemporaryPassword,\n            userEmail: dataProfile.userEmail,\n            userId: dataProfile.userId,\n            userPosition: dataProfile.userPosition,\n            userProfileId: dataProfile.userProfileId,\n          };\n          const encryptProfile = this.encrypt(JSON.stringify(profile));\n          sessionStorage.setItem('userProfileV6', encryptProfile);\n        }\n\n        if (data._customers) {\n          const dataCustomer = data._customers;\n          const customer: Customer = {\n            countryCode: dataCustomer.country.countryCode,\n            customerCode: dataCustomer.customerCode,\n            customerCodeLZR: dataCustomer.customerCodeLZR,\n            customerDesc: dataCustomer.customerDesc,\n            customerDesc2: dataCustomer.customerDesc2,\n            customerId: dataCustomer.customerId,\n            email: dataCustomer.email,\n            faxNumber: dataCustomer.faxNumber,\n            phoneNumber: dataCustomer.phoneNumber,\n            regionId: dataCustomer.region.regionId,\n            vAT: dataCustomer.vAT,\n          };\n          const encryptcustomer = this.encrypt(JSON.stringify(customer));\n          sessionStorage.setItem('userCustomerV6', encryptcustomer);\n        }\n\n        if (data._applications) {\n          const apps: Application[] = data._applications.map((app) => {\n            return {\n              applicationCode: app.applicationCode,\n              applicationId: app.applicationId,\n              applicationType: app.applicationType,\n              isVisible: app.isVisible,\n            };\n          });\n          const encryptApplications = this.encrypt(JSON.stringify(apps));\n          sessionStorage.setItem('userApplicationsV6', encryptApplications);\n        }\n\n        if (data._roles) {\n          const roles: Role[] = data._roles.map((role) => {\n            return {\n              applicationId: role.application.applicationId,\n              isInternal: role.isInternal,\n              isOptional: role.isOptional,\n              isVisible: role.isVisible,\n              roleCode: role.roleCode,\n              roleId: role.roleId,\n              roleType: role.roleType,\n            };\n          });\n          const encryptRoles = this.encrypt(JSON.stringify(roles));\n          sessionStorage.setItem('userRolesV6', encryptRoles);\n        }\n  }\n\n  public getDCMApplications(): Observable<IApplicationMenu[]> {\n    const endpoint = this.http.generateEndpoint(SessionServiceConstants.USER_APPLICATION_MENU);\n    return this.http.get(endpoint).pipe(\n      map((response: Response) => {\n        const tmpJson = response.json();\n        if (!tmpJson || tmpJson === undefined) {\n          console.warn('Configuration of menu application is empty!!');\n          return [];\n        }\n        const responseMap: IApplicationMenu[] = response.json() as IApplicationMenu[];\n        return responseMap;\n      }),\n      catchError((e: any) => Observable.throw(this.handleError(e)))\n    );\n  }\n\n  public convertJsonTo<T>(obj: string): T {\n    try {\n      const tmpJson = JSON.parse(obj);\n      return tmpJson as T;\n    } catch (e) {\n      console.warn('Exception at parsing object from sessionStore:', e);\n    }\n\n    return null;\n  }\n\n  public get customer(): ICustomer {\n    let result: ICustomer;\n    const str: string = sessionStorage.getItem('user_customer');\n    if (str) {\n      try {\n        const profile = JSON.parse(str);\n        result = profile as ICustomer;\n      } catch (e) {\n        console.warn(\n          'Exception at parsing user_customer from sessionStore:',\n          e\n        );\n        return null;\n      }\n    } else {\n      console.warn('There is no user customer at session storage');\n    }\n\n    return result;\n  }\n\n  public handleError(error: Response | any): any {\n    // In a real world app, we might use a remote logging infrastructure\n    let errMsg: string;\n    if (error instanceof Response) {\n      const body = error.json() || '';\n      errMsg = `${error.status} - ${error.statusText || ''}`;\n    } else {\n      errMsg = error.message ? error.message : error.toString();\n    }\n    console.error(error);\n    return throwError(error);\n  }\n\n  public addQueryParams(endpoint: string, fetch?: number, page?: number, legalEntityCode?: string) {\n    const validPagination: boolean = Number.isInteger(fetch) && Number.isInteger(page);\n\n    endpoint += validPagination ? '?fetch=' + fetch + '&page=' + page : '';\n    endpoint +=\n      legalEntityCode && validPagination\n        ? '&legalEntityCode=' + legalEntityCode\n        : legalEntityCode && !validPagination\n          ? '?legalEntityCode=' + legalEntityCode\n          : '';\n\n    return endpoint;\n  }\n\n  public logoutApp(): void {\n    this.clean();\n    this.eventBroadcaster.broadcast(Broadcaster.DCM_APP_LOGOUT);\n  }\n\n  public get userAuth() {\n    return JSON.parse(this.decrypt(sessionStorage.getItem('userAuthV6')));\n  }\n\n  public get userInfo() {\n    return JSON.parse(this.decrypt(sessionStorage.getItem('userInfoV6')));\n  }\n\n  public get userProfileV6() {\n    return JSON.parse(this.decrypt(sessionStorage.getItem('userProfileV6')));\n  }\n\n  public get userCustomer() {\n    return JSON.parse(this.decrypt(sessionStorage.getItem('userCustomerV6')));\n  }\n\n  public get userApplications() {\n    return JSON.parse(this.decrypt(sessionStorage.getItem('userApplicationsV6')));\n  }\n\n  public get userRoles() {\n    return JSON.parse(this.decrypt(sessionStorage.getItem('userRolesV6')));\n  }\n\n  public encrypt(str) {\n    return window.btoa(unescape(encodeURIComponent(str)));\n  }\n\n  public decrypt(str) {\n    return str ? decodeURIComponent(escape(window.atob(str))) : str;\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { map } from 'rxjs/operators';\n\nimport { EndpointsConstants } from '@cemex-core/constants-v2/dist';\nimport {\n  Company,\n  Customer,\n  Jobsite,\n  LegalEntityDTO\n} from '@cemex-core/types-v2/dist';\n\nimport { HttpCemex } from './http.service';\n\n@Injectable()\nexport class LegalEntity {\n  constructor(\n    protected http: HttpCemex,\n    private endpoints: EndpointsConstants\n  ) {}\n\n  public getLegalEntity(): Promise<LegalEntityDTO> {\n    return this.http\n      .get(this.getUrl('legalentity'))\n      .pipe(\n        map(response => {\n          const aux: LegalEntityDTO = response.json();\n          return aux;\n        })\n      )\n      .toPromise()\n      .then(data => data)\n      .catch(error => error);\n  }\n\n  public getAllLegalEntityCustomers(): Promise<Customer[]> {\n    return this.http\n      .get(this.getUrl('legalentitycustomers'))\n      .pipe(\n        map(response => {\n          const aux: LegalEntityDTO = response.json();\n          const snapshot = aux.responseLegalEntity.customer;\n          return snapshot;\n        })\n      )\n      .toPromise()\n      .then(data => data)\n      .catch(error => error);\n  }\n\n  public getLegalEntityByCustomer(customerCode: any): Promise<Company[]> {\n    return this.http\n      .get(this.getUrl('legalentity?customerCode=' + customerCode))\n      .pipe(\n        map(response => {\n          const aux: LegalEntityDTO = response.json();\n          const snapshot = aux.responseLegalEntity.company;\n          return snapshot;\n        })\n      )\n      .toPromise()\n      .then(data => data)\n      .catch(error => error);\n  }\n\n  public getLegalEntityByCompany(companyCode: any): Promise<Customer[]> {\n    return this.http\n      .get(this.getUrl('legalentity?companyCode=' + companyCode))\n      .pipe(\n        map(response => {\n          const aux: LegalEntityDTO = response.json();\n          const snapshot = aux.responseLegalEntity.customer;\n          return snapshot;\n        })\n      )\n      .toPromise()\n      .then(data => data)\n      .catch(error => error);\n  }\n\n  public getLegalEntityJobsites(\n    customerCode: any,\n    companyCode: any\n  ): Promise<Jobsite[]> {\n    const api =\n      'legalentityjobsites?companyCode=' +\n      companyCode +\n      '&customerCode=' +\n      customerCode;\n    return this.http\n      .get(this.getUrl(api))\n      .pipe(\n        map(response => {\n          const aux: LegalEntityDTO = response.json();\n          const snapshot = aux.responseLegalEntity.jobSite;\n          return snapshot;\n        })\n      )\n      .toPromise()\n      .then(data => data)\n      .catch(error => error);\n  }\n\n  public getUrl(api: string): string {\n    const url = this.http.generateEndpoint(\n      this.endpoints.V1 + this.endpoints.armCapability + api\n    );\n    return url;\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { map } from 'rxjs/operators';\n\nimport { EndpointsConstants } from '@cemex-core/constants-v2/dist';\nimport {\n  Company,\n  Customer,\n  Jobsite,\n  LegalEntityDTO\n} from '@cemex-core/types-v2/dist';\n\nimport { HttpCemex } from './http.service';\n\n@Injectable()\nexport class FinancialDocuments {\n  constructor(private http: HttpCemex, private endpoints: EndpointsConstants) {}\n\n  public getLegalEntity(): Promise<LegalEntityDTO> {\n    return this.http\n      .get(this.getUrl('legalentity'))\n      .pipe(\n        map(response => {\n          const aux: LegalEntityDTO = response.json();\n          return aux;\n        })\n      )\n      .toPromise()\n      .then(data => data)\n      .catch(error => error);\n  }\n\n  public getAllLegalEntityCustomers(): Promise<Customer[]> {\n    return this.http\n      .get(this.getUrl('legalentitycustomers'))\n      .pipe(\n        map(response => {\n          const aux: LegalEntityDTO = response.json();\n          const snapshot = aux.responseLegalEntity.customer;\n          return snapshot;\n        })\n      )\n      .toPromise()\n      .then(data => data)\n      .catch(error => error);\n  }\n\n  public getLegalEntityByCustomer(customerCode: any): Promise<Company[]> {\n    return this.http\n      .get(this.getUrl('legalentity?customerCode=' + customerCode))\n      .pipe(\n        map(response => {\n          const aux: LegalEntityDTO = response.json();\n          const snapshot = aux.responseLegalEntity.company;\n          return snapshot;\n        })\n      )\n      .toPromise()\n      .then(data => data)\n      .catch(error => error);\n  }\n\n  public getLegalEntityByCompany(companyCode: any): Promise<Customer[]> {\n    return this.http\n      .get(this.getUrl('legalentity?companyCode=' + companyCode))\n      .pipe(\n        map(response => {\n          const aux: LegalEntityDTO = response.json();\n          const snapshot = aux.responseLegalEntity.customer;\n          return snapshot;\n        })\n      )\n      .toPromise()\n      .then(data => data)\n      .catch(error => error);\n  }\n\n  public getLegalEntityJobsites(\n    customerCode: any,\n    companyCode: any\n  ): Promise<Jobsite[]> {\n    const api =\n      'legalentityjobsites?companyCode=' +\n      companyCode +\n      '&customerCode=' +\n      customerCode;\n    return this.http\n      .get(this.getUrl(api))\n      .pipe(\n        map(response => {\n          const aux: LegalEntityDTO = response.json();\n          const snapshot = aux.responseLegalEntity.jobSite;\n          return snapshot;\n        })\n      )\n      .toPromise()\n      .then(data => data)\n      .catch(error => error);\n  }\n\n  private getUrl(api: string): string {\n    const url = this.http.generateEndpoint(\n      this.endpoints.V1 + this.endpoints.armCapability + api\n    );\n    return url;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\n\nimport { SessionService } from './session.service';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  constructor(private router: Router, private sessionService: SessionService) {}\n\n  public canActivate(): boolean {\n    if (this.sessionService.isLoggedIn) {\n      return true;\n    } else {\n      this.router.navigate(['/login']);\n      return false;\n    }\n  }\n}\n","import { Inject, Injectable, Optional } from '@angular/core';\nimport { Http } from '@angular/http';\n\nimport { Subject } from 'rxjs';\n\nimport { Broadcaster } from '@cemex-core/events-v7';\n\ndeclare var global: any;\n\n@Injectable()\nexport class TranslationService {\n  public static translation: Map<string, string> = new Map<string, string>();\n  public static language = '';\n  // Must be set on path constants\n\n  public static PRODUCT_PATH = 'PRODUCT_PATH';\n  public static USE_TRANSLATION_SERVER = 'USE_TRANSLATION_SERVER';\n  public static TRANSLATION_BASE_URL = 'TRANSLATION_BASE_URL';\n\n  public labels: any;\n  public _useTranslationServer = false;\n\n  public productPath = '';\n  public _localeData: Subject<any> = new Subject<any>();\n\n  /**\n   * st comes from static-translation\n   */\n  public static st(textID: string): string {\n    const textValue = this.translation.get(textID);\n    if (!textValue || textValue === undefined) {\n      return 'NOT:' + textID;\n    }\n    return textValue;\n  }\n\n  /**\n   * gets all translations\n   */\n  public static all(): Map<string, string> {\n    const result = this.translation;\n    return result;\n  }\n\n  constructor(\n    public eventBroadcaster: Broadcaster,\n    public http: Http,\n    @Inject(TranslationService.PRODUCT_PATH)\n    @Optional()\n    public _productPath: string,\n    @Inject(TranslationService.USE_TRANSLATION_SERVER)\n    @Optional()\n    public useTranslationServer: boolean,\n    @Inject(TranslationService.TRANSLATION_BASE_URL)\n    @Optional()\n    public _translationUrl: string\n  ) {\n    this.productPath = _productPath || '/';\n    this._useTranslationServer = useTranslationServer || false;\n\n    if (this._translationUrl === null) {\n      this._translationUrl = '/translate/translate';\n    }\n\n    if (this.isRunningOnBrowser()) {\n      const comingFromReact =\n        (global as any).sessionStorage.getItem('language') || 'en_US';\n      let langLocalStorage = (global as any).localStorage.getItem('language');\n      if (comingFromReact.indexOf('es') !== -1 && !this._useTranslationServer) {\n        langLocalStorage = 'es';\n        (global as any).localStorage.setItem('language', 'es');\n      } else if (\n        comingFromReact.indexOf('en') !== -1 &&\n        !this._useTranslationServer\n      ) {\n        langLocalStorage = 'en';\n        (global as any).localStorage.setItem('language', 'en');\n      } else {\n        langLocalStorage = comingFromReact;\n        (global as any).localStorage.setItem('language', langLocalStorage);\n      }\n      let localLang: string;\n      if (this._useTranslationServer) {\n        this.lang(langLocalStorage ? langLocalStorage : 'en_US');\n        localLang = langLocalStorage ? langLocalStorage : 'en_US';\n      } else {\n        this.lang(langLocalStorage ? langLocalStorage : 'en');\n        localLang = langLocalStorage ? langLocalStorage : 'en';\n      }\n\n      // add this next line to correct react projects\n\n      if (localLang === 'en') {\n        localLang = localLang + '_US';\n      } else if (localLang === 'es') {\n        localLang = localLang + '_MX';\n      }\n      (global as any).sessionStorage.setItem('language', localLang);\n    } else {\n      if (this._useTranslationServer) {\n        this.lang('en_US');\n      } else {\n        this.lang('en');\n      }\n    }\n  }\n\n  public get localeData() {\n    return this._localeData.asObservable();\n  }\n\n  public isRunningOnBrowser(): boolean {\n    return (global as any) !== null && (global as any) !== undefined;\n  }\n\n  public onChange(value: any): void {\n    this.labels = value;\n    this._localeData.next(value);\n  }\n\n  /**\n   * this method is left here for backwards compatibility\n   */\n  public lang(lang: string): void {\n    if (lang === TranslationService.language) {\n      return;\n    }\n    TranslationService.language = lang;\n    // add this next line to correct react projects, need to correct this\n    let localLang: string = TranslationService.language;\n    if (localLang === 'en') {\n      localLang = localLang + '_US';\n    } else if (localLang === 'es') {\n      localLang = localLang + '_MX';\n    }\n    if (this.isRunningOnBrowser()) {\n      sessionStorage.setItem('language', localLang);\n    }\n    // if the language is only 2 letters it might be a legacy application\n    if (!this._useTranslationServer) {\n      this.http\n        .get(this.productPath + 'vendor/locale-' + lang + '.json')\n        .toPromise()\n        .then(response => this.populateTranslation(response.json()))\n        .catch(this.handleError);\n    } else {\n      // if the translation name is bigger than 2 letters, request to external server\n      this.http\n        .get(this._translationUrl + this.productPath + localLang)\n        .toPromise()\n        .then(response => this.populateTranslation(response.json()))\n        .catch(this.handleError);\n    }\n  }\n\n  public isoLang(lang: string): void {\n    // must contain either one of these symbols\n    if (lang.indexOf('-') !== -1 || lang.indexOf('_') !== -1) {\n      TranslationService.language = lang;\n      (global as any).sessionStorage.setItem('language', lang);\n    }\n  }\n\n  public file(url: string): void {\n    this.http\n      .get(url)\n      .toPromise()\n      .then(response => this.populateTranslation(response.json()))\n      .catch(this.handleError);\n  }\n\n  /**\n   * pt comes from public-translation\n   */\n  public pt(textID: string): string {\n    const textValue = TranslationService.translation.get(textID);\n    if (!textValue || textValue === undefined) {\n      return 'NOT:' + textID;\n    }\n\n    return textValue;\n  }\n\n  public getLabel(textId: string): string {\n    const textValue = TranslationService.translation.get(textId);\n    if (!textValue) {\n      return undefined;\n    }\n    return textValue;\n  }\n\n  public getlang(): string {\n    return TranslationService.language;\n  }\n\n  public getCountryCode(): string {\n    return TranslationService.language.split('_')[1];\n  }\n\n  public populateTranslation(result) {\n    for (const item of Object.keys(result)) {\n      TranslationService.translation.set(item, result[item]);\n    }\n    this.eventBroadcaster.broadcast(\n      Broadcaster.DCM_LANGUAGE_FETCHED,\n      TranslationService.language\n    );\n    this.onChange(result);\n  }\n\n  public handleError(error: any): Promise<any> {\n    return Promise.reject(error.message || error);\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class Logger {\n  public static log(value: any): void {\n    console.log(value);\n  }\n  public static error(value: any): void {\n    console.error(value);\n  }\n  public static warn(value: any): void {\n    console.warn(value);\n  }\n  public static logf(value: any): void {\n    console.log(value);\n  }\n}\n","import { Inject, Injectable, Optional } from '@angular/core';\nimport { Http } from '@angular/http';\n\nimport { Broadcaster } from '@cemex-core/events-v7';\n\n@Injectable()\nexport class FeatureToggleService {\n  public static featureList: Map<string, IFeatureItem> = new Map<\n    string,\n    IFeatureItem\n  >();\n  public static language = '';\n  // Must be set on path constants\n\n  public static PRODUCT_PATH = 'PRODUCT_PATH';\n  public static ENVIRONMENT = 'PRODUCT_PATH';\n  public static USE_LOCAL_MANIFEST = 'USE_LOCAL_MANIFEST';\n\n  public productPath = '';\n  public productEnvironment = '';\n\n  /**\n   * gets all features\n   */\n  public static all(): Map<string, IFeatureItem> {\n    const result = this.featureList;\n    return result;\n  }\n\n  constructor(\n    public eventBroadcaster: Broadcaster,\n    public http: Http,\n    @Inject(FeatureToggleService.PRODUCT_PATH)\n    @Optional()\n    public _productPath: string,\n    @Inject(FeatureToggleService.ENVIRONMENT)\n    @Optional()\n    public _productEnvironment: string,\n    @Inject(FeatureToggleService.USE_LOCAL_MANIFEST)\n    @Optional()\n    public localManifest: boolean\n  ) {\n    this.productPath = _productPath || '/';\n    this.productEnvironment = _productEnvironment || 'development';\n    this.getFeatureList(this.localManifest || false);\n  }\n  /**\n   * this method returns either true or false if the list of the features\n   * requested is enabled in this environment and for this user\n   */\n  public feature(\n    featureId: string | string[],\n    releaseVersion?: string,\n    featureVersion?: string,\n    hostName?: string\n  ): boolean {\n    if (typeof featureId === 'string') {\n      return this.coreValidator(\n        featureId,\n        releaseVersion,\n        featureVersion,\n        hostName\n      );\n    } else {\n      featureId.forEach(singleFeature => {\n        if (\n          !this.coreValidator(\n            singleFeature,\n            releaseVersion,\n            featureVersion,\n            hostName\n          )\n        ) {\n          return false;\n        }\n      });\n    }\n    return true;\n  }\n\n  /**\n   * this method returns all list of features\n   */\n  public getAll(): Map<string, IFeatureItem> {\n    return FeatureToggleService.featureList;\n  }\n  /**\n   * this method allows to load the feature list from the file\n   */\n  public getFeatureList(loadFromLocalList: boolean): void {\n    // if the loadfromlocallist is true, then load the local-feature.json file\n    if (loadFromLocalList) {\n      this.http\n        .get(this.productPath + 'vendor/local-feature.json')\n        .toPromise()\n        .then(response => this.populateFeatures(response.json()))\n        .catch(this.handleError);\n    } else {\n      // if the API is ready then switch is this one\n      this.http\n        .get('/feature/api' + this.productPath)\n        .toPromise()\n        .then(response => this.populateFeatures(response.json()))\n        .catch(this.handleError);\n    }\n  }\n\n  public coreValidator(\n    featureId: string,\n    releaseVersion?: string,\n    featureVersion?: string,\n    hostName?: string\n  ): boolean {\n    // todo smaller refactor\n    const localFind: IFeatureItem = FeatureToggleService.featureList.get(\n      featureId\n    );\n    if (localFind === undefined) {\n      return false;\n    }\n    // if it is found then verify against the country\n    if (localFind.country !== null && localFind.country !== undefined) {\n      // we can take the country from the session storage\n      if (\n        window.sessionStorage.getItem('country').indexOf(localFind.country) ===\n        -1\n      ) {\n        return false;\n      }\n    }\n    if (localFind.role !== null && localFind.role !== undefined) {\n      let isRoleAssigned = false;\n      const appsAvailable = JSON.parse(\n        window.sessionStorage.getItem('applications')\n      );\n      appsAvailable.forEach((app: IApplication) => {\n        app.roles.forEach(role => {\n          if ((role as IRole).roleCode === localFind.role) {\n            isRoleAssigned = true;\n          }\n        });\n      });\n      if (!isRoleAssigned) {\n        return false;\n      }\n    }\n    if (localFind.role_match !== null && localFind.role_match !== undefined) {\n      let rolesAssigned = 0;\n      const appsAvailable = JSON.parse(\n        window.sessionStorage.getItem('applications')\n      );\n      appsAvailable.forEach((app: IApplication) => {\n        app.roles.forEach(role => {\n          if (localFind.role_match.indexOf((role as IRole).roleCode) !== -1) {\n            rolesAssigned = rolesAssigned + 1;\n          }\n        });\n      });\n      if (rolesAssigned !== localFind.role_match.split(',').length) {\n        return false;\n      }\n    }\n    if (localFind.role_any !== null && localFind.role_any !== undefined) {\n      let rolesAssigned = 0;\n      const appsAvailable = JSON.parse(\n        window.sessionStorage.getItem('applications')\n      );\n      appsAvailable.forEach((app: IApplication) => {\n        app.roles.forEach(role => {\n          if (localFind.role_any.indexOf((role as IRole).roleCode) !== -1) {\n            rolesAssigned = rolesAssigned + 1;\n          }\n        });\n      });\n      if (rolesAssigned === 0) {\n        return false;\n      }\n    }\n    if (localFind.environment !== null && localFind.environment !== undefined) {\n      // verify the injection of the environment\n      if (localFind.environment !== this.productEnvironment) {\n        return false;\n      }\n    }\n    if (\n      localFind.release_version !== null &&\n      localFind.release_version !== undefined\n    ) {\n      // verify the injection of the environment\n      if (localFind.release_version !== releaseVersion) {\n        return false;\n      }\n    }\n    if (\n      localFind.feature_version !== null &&\n      localFind.feature_version !== undefined\n    ) {\n      // verify the injection of the environment\n      if (localFind.feature_version !== featureVersion) {\n        return false;\n      }\n    }\n    if (localFind.host_name !== null && localFind.host_name !== undefined) {\n      // verify the injection of the environment\n      if (localFind.host_name !== hostName) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  public handleError(error: any): Promise<any> {\n    return Promise.reject(error.message || error);\n  }\n\n  public populateFeatures(result) {\n    for (const item of Object.keys(result)) {\n      FeatureToggleService.featureList.set(\n        (result[item] as IFeatureItem).feature,\n        result[item]\n      );\n    }\n    // this.eventBroadcaster.broadcast(Broadcaster.DCM_LANGUAGE_FETCHED, TranslationService.language);\n    // this.onChange(result);\n  }\n}\n\nexport interface IFeatureItem {\n  feature: string;\n  option: string | number;\n  environment: string;\n  role: string;\n  country: string;\n  release_version: string;\n  feature_version: string;\n  host_name: string;\n  role_match: string;\n  role_any: string;\n}\nexport interface IApplication {\n  applicationCode: string;\n  applicationId: number;\n  roles: IRole[];\n}\n\nexport interface IRole {\n  roleCode: string;\n  roleId: number;\n}\n","import { Injectable } from '@angular/core';\nimport { Response } from '@angular/http';\n\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\n\nimport { ICountryConfig } from '@cemex-core/types-v2';\n\nimport { HttpCemex } from './http.service';\nimport { ProjectSettings } from './project.settings';\nimport { SessionService } from './session.service';\n\n@Injectable()\nexport class CountryConfigService {\n  private _countryConfig = new BehaviorSubject<ICountryConfig>(null);\n  private _countryConfigApiPath = '/v5/secm/console/countryconfig';\n\n  constructor(\n    private http: HttpCemex,\n    private projectEnv: ProjectSettings,\n    private sessionService: SessionService\n  ) {\n    if (!this._countryConfig.getValue()) {\n      this.getCountryConfiguration().subscribe((data: ICountryConfig) => {\n        this._countryConfig.next(data);\n      });\n    }\n  }\n\n  public get countryConfig(): Observable<ICountryConfig> {\n    return this._countryConfig.asObservable();\n  }\n\n  public getCountryConfiguration(): Observable<ICountryConfig> {\n    const userCountry = this.sessionService.userCountry || 'US';\n    const url = `${this.projectEnv.getBaseOrgEnvPath()}${\n      this._countryConfigApiPath\n    }?countryCode=${userCountry}`;\n    return this.http.get(url).pipe(\n      map((res: Response) => res.json()),\n      catchError(this.handleError)\n    );\n  }\n\n  private handleError(error: Response | any) {\n    // In a real world app, we might use a remote logging infrastructure\n    let errMsg: string;\n    if (error instanceof Response) {\n      const body: any = error.json() || '';\n      const err = body.error || JSON.stringify(body);\n      errMsg = `${error.status} - ${error.statusText || ''}`;\n    } else {\n      errMsg = error.message ? error.message : error.toString();\n    }\n    console.error(error);\n    return Observable.throw(error);\n  }\n}\n","export class EmailValidators {\n  public static pattern(c): any {\n    const regex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/; // tslint:disable-line\n    if (regex.test(c.value)) {\n      return null;\n    } else {\n      return {\n        patternInvalid: true\n      };\n    }\n  }\n}\n","export class NumberValidators {\n  public static isNumeric(c): any {\n    if (!isNaN(parseFloat(c.value)) && isFinite(c.value)) {\n      return null;\n    } else {\n      return {\n        notNumeric: true\n      };\n    }\n  }\n\n  public static onlyTwoDecimals(c): any {\n    const regexp = /^\\d+(\\.\\d{1,2})?$/;\n    if (regexp.test(c.value)) {\n      return null;\n    } else {\n      return {\n        patternInvalid: true\n      };\n    }\n  }\n\n  public static greaterThanZero(c): any {\n    if (parseFloat(c.value) > 0) {\n      return null;\n    } else {\n      return {\n        lessThanZero: true\n      };\n    }\n  }\n\n  public static isPositive(c): any {\n    if (parseFloat(c.value) >= 0) {\n      return null;\n    } else {\n      return {\n        isNegative: true\n      };\n    }\n  }\n\n  public static lessThan(max: number) {\n    const maxNumber = max;\n    return (control): { [key: string]: any } => {\n      const num = +control.value;\n      if (isNaN(num) || num > maxNumber) {\n        return {\n          isGreater: true\n        };\n      }\n      return null;\n    };\n  }\n\n  public static greaterThan(min: number) {\n    const minNumber = min;\n    return (control): { [key: string]: any } => {\n      const num = +control.value;\n      if (isNaN(num) || num < minNumber) {\n        return {\n          isLess: true\n        };\n      }\n      return null;\n    };\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { map } from 'rxjs/operators';\n\nimport { EndpointsConstants } from '@cemex-core/constants-v2/dist';\nimport { CashDocument } from '@cemex-core/types-v2/dist/invoices-payments';\n\nimport { HttpCemex } from '../http.service';\n\n@Injectable()\nexport class CashSalesService {\n  private apiCashDocuments: string;\n\n  constructor(private http: HttpCemex, private endpoints: EndpointsConstants) {\n    // TODO: MOVE TO PATH CONSTANTS\n    this.apiCashDocuments = 'cashdocuments';\n  }\n\n  public getCreditDocs(\n    companyCode: string,\n    customerCode: string,\n    jobSiteCode: string\n  ): Promise<CashDocument[]> {\n    const apiQuery = `companyCode=${companyCode}&customerCode=${customerCode}&jobSiteCode=${jobSiteCode}`;\n    const endpoint = `${this.apiCashDocuments}?${apiQuery}`;\n    return this.http\n      .get(this.getUrl(endpoint))\n      .pipe(\n        map(response => {\n          const aux: CashDocument[] = response.json();\n          return this.handleCashDocumentsData(aux);\n        })\n      )\n      .toPromise()\n      .then(data => data)\n      .catch(error => error);\n  }\n\n  private handleCashDocumentsData(aux: CashDocument[]): CashDocument[] {\n    aux.forEach((document, i) => {\n      document.index = i;\n      document.flagInvalidAmnt = false;\n      document.errMsg = '';\n      document.toCommit = 0;\n      // document.createDate = '2017-01-01T00:00:00';\n      if (document.createDate) {\n        const d1 = document.createDate.split('T')[0].split('-');\n        const d2 = document.createDate.split('T')[1];\n        document.createDate = d1[2] + '-' + d1[1] + '-' + d1[0] + 'T' + d2;\n        // document.createDate = this.getDateObject(document.createDate).toString();\n      }\n      document.amount = !document.amount ? 0 : document.amount;\n      document.reconciledAmount = !document.reconciledAmount\n        ? 0\n        : document.reconciledAmount;\n      document.commitedAmount = !document.commitedAmount\n        ? 0\n        : document.commitedAmount;\n    });\n    return aux;\n  }\n\n  private getUrl(api: string): string {\n    const url = this.http.generateEndpoint(\n      this.endpoints.V1 + this.endpoints.peCapability + api\n    );\n    return url;\n  }\n}\n","import { IAnalyticsService } from './ianalytics.interface';\n\nexport class CountlyService implements IAnalyticsService {\n  public defaultTrackings: any = [\n    ['track_pageview'],\n    ['track_clicks'],\n    ['track_errors'],\n    ['track_links'],\n    ['track_forms'],\n    ['collect_from_forms'] /*['track_sessions'] */\n  ];\n  // tslint:disable-next-line:variable-name\n  public Countly: any;\n  constructor() {\n    this.Countly = (window as any).Countly;\n  }\n\n  public init() {\n    this.addTracking('track_sessions');\n    this.Countly.init();\n  }\n\n  public debug(flag: boolean) {\n    this.Countly.debug = flag;\n  }\n\n  public startService(url: string, appKey: string): void {\n    if (this.Countly !== undefined) {\n      this.Countly.url = url;\n      this.Countly.app_key = appKey;\n      this.Countly.q = this.defaultTrackings;\n    }\n  }\n\n  public addTracking(key: string, value?: any) {\n    if (!value) {\n      this.Countly.q.push([key]);\n    } else {\n      this.Countly.q.push([key, value]);\n    }\n  }\n\n  public addTrackingPage(key: string): void {\n    this.Countly.q.push(['track_pageview', key]);\n  }\n\n  public changeId(countryCode: string, newId: string) {\n    this.Countly.q.push(['change_id', countryCode + newId]);\n  }\n\n  public identifyUser(userfields: any) {\n    this.Countly.q.push(['user_details', userfields]);\n  }\n\n  public endSession() {\n    this.Countly.q.push(['end_session']);\n  }\n\n  public removeTracking(trackingjson: any) {\n    this.Countly.q.forEach(element => {\n      if (element.indexOf(trackingjson) !== -1) {\n        element[0] = 'canceled';\n      }\n    });\n  }\n}\n","import { CountlyService } from './countly.service';\nimport {\n  IAnalyticsConfiguration,\n  IAnalyticsService\n} from './ianalytics.interface';\n\nexport class AnalyticsFactory {\n  // tslint:disable-next-line:variable-name\n  public static Type = { Countly: 1, Clevertap: 2, Other: 0 };\n  public createService(\n    analitycServiceType,\n    configuration: IAnalyticsConfiguration\n  ): IAnalyticsService {\n    switch (analitycServiceType) {\n      case AnalyticsFactory.Type.Countly:\n        const service = new CountlyService();\n        service.startService(configuration.url, configuration.key);\n        return service;\n      case AnalyticsFactory.Type.Clevertap:\n        return null;\n      case AnalyticsFactory.Type.Other:\n        return null;\n      default:\n        return null;\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\n@Injectable()\nexport class PushNotificationsConstants {\n  private appCode: string;\n  private apiClientId: string;\n  private appLanguage: string;\n  private urlServiceWorker: string;\n  private deviceApi: string;\n  private apiBasePath: string;\n  private apiHost: string;\n  private apiOrg: string;\n  private apiEnv: string;\n  private authToken: string;\n  private jwt: string;\n  private sourcePush: string;\n  private vapidPublicKey: string;\n\n  constructor() {\n    // tslint:disable-next-line:no-string-literal\n    this.appCode = window['APP_CODE']; // 'Foreman_App'\n    // tslint:disable-next-line:no-string-literal\n    this.apiClientId = window['CLIENT_ID']; // 'f624df7f-9b35-41c0-8a41-4854b86c84f1';\n    // tslint:disable-next-line:no-string-literal\n    this.apiHost = window['API_HOST']; // 'https://uscldcnxapmd01.azure-api.net/';\n    // tslint:disable-next-line:no-string-literal\n    this.appLanguage = window['LANGUAGE']; // 'es-MX';\n    this.authToken = 'Bearer ' + sessionStorage.getItem('auth_token');\n    this.jwt = sessionStorage.getItem('jwt');\n    this.urlServiceWorker = 'service-worker/push_sw.js';\n    this.deviceApi = this.apiHost + 'v5/cm/notifications/devices';\n    this.sourcePush = 'postMessageSW';\n    this.vapidPublicKey = '';\n  }\n\n  public getAppCode(): string {\n    return this.appCode;\n  }\n\n  public getClientId(): string {\n    return this.apiClientId;\n  }\n\n  public getApiBasePath(): string {\n    return this.apiBasePath;\n  }\n\n  public getAppLanguage(): string {\n    return this.appLanguage;\n  }\n\n  public getAuthToken(): string {\n    return this.authToken;\n  }\n\n  public getJwt(): string {\n    return this.jwt;\n  }\n\n  public getUrlSW(): string {\n    return this.urlServiceWorker;\n  }\n\n  public getDevicesPath(): string {\n    return this.deviceApi;\n  }\n\n  public getSourcePush(): string {\n    return this.sourcePush;\n  }\n\n  public getVapidPublicKey(): string {\n    return this.vapidPublicKey;\n  }\n\n  public setVapidPublicKey(pVapidPublicKey) {\n    this.vapidPublicKey = pVapidPublicKey;\n  }\n\n  public setUrlSW(urlSW) {\n    this.urlServiceWorker = urlSW;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { PushNotificationsConstants } from './push-notifications.constants';\n\n@Injectable()\nexport class PushNotificationService {\n  private _devUUID = '';\n  private _devId = '';\n  private _platform = '';\n  private _token = '';\n  private _methodCallBack: any;\n  private _vapidPublicKey: string;\n\n  constructor(private constants: PushNotificationsConstants) {\n    // this.initialize();\n  }\n\n  public initialize(methodCallBack: any): void {\n    this._methodCallBack = methodCallBack;\n    this._vapidPublicKey = this.constants.getVapidPublicKey();\n    if (this.validateSw()) {\n      // tslint:disable-next-line:only-arrow-functions\n      const swReg = this.registerSw().catch(function(error) {\n        console.log('Push Service Worker registration has failed: ' + error);\n      });\n      // tslint:disable-next-line:only-arrow-functions\n      this.subscriptionSw(swReg).catch(function(error) {\n        console.log('Push Service Worker subscription has failed: ' + error);\n      });\n    }\n  }\n\n  public validateSw(): boolean {\n    let isValid = false;\n    if ('serviceWorker' in navigator && 'PushManager' in window) {\n      isValid = true;\n      console.log('Service Workers is supported');\n    }\n    return isValid;\n  }\n\n  private registerSw() {\n    // tslint:disable-next-line:only-arrow-functions\n    return navigator.serviceWorker\n      .register(this.constants.getUrlSW())\n      .then(function(swReg) {\n        if (swReg.installing) {\n          console.log('Service worker installing');\n        } else if (swReg.waiting) {\n          console.log('Service worker installed');\n        } else if (swReg.active) {\n          console.log('Service worker active');\n        }\n        if (!swReg.showNotification) {\n          console.log('Notifications aren\\'t supported on service workers.');\n        }\n        return swReg;\n      });\n  }\n\n  private subscriptionSw(registration) {\n    const mSetSubscription = this.setSubscription;\n    const global = this;\n    // tslint:disable-next-line:only-arrow-functions\n    return registration.then(function(swReg) {\n      swReg.pushManager\n        .getSubscription()\n        // tslint:disable-next-line:only-arrow-functions\n        .then(function(subscriptionInit) {\n          if (subscriptionInit) {\n            return mSetSubscription(subscriptionInit, global);\n          } else {\n            const options = {\n              // tslint:disable-next-line:max-line-length\n              applicationServerKey: !global._vapidPublicKey\n                ? null\n                : global.urlB64ToUint8Array(global._vapidPublicKey),\n              userVisibleOnly: true\n            };\n            return (\n              swReg.pushManager\n                .subscribe(options)\n                // tslint:disable-next-line:only-arrow-functions\n                .then(function(subscription) {\n                  console.log(subscription);\n                  return mSetSubscription(subscription, global);\n                  // tslint:disable-next-line:only-arrow-functions\n                })\n                .catch(function(error) {\n                  console.log('Unable to subscribe to push.', error);\n                })\n            );\n          }\n        });\n    });\n  }\n\n  private setSubscription(subscription, global) {\n    global.generateTokenForRegisterDevice(subscription);\n    global.registerBroadcastListener();\n  }\n\n  private registerBroadcastListener() {\n    const callBack = this._methodCallBack;\n    const sPush = this.constants.getSourcePush();\n    navigator.serviceWorker.addEventListener('message', function handler(\n      event\n    ) {\n      const data = event.data;\n      if (data && data.source === sPush) {\n        console.log(event.data);\n        if (callBack) {\n          callBack(data.payload);\n        }\n      }\n    });\n  }\n\n  // tslint:disable-next-line:member-ordering\n  public generateTokenForRegisterDevice(subscription): void {\n    localStorage.setItem('token', JSON.stringify(subscription));\n    if (!localStorage.getItem('deviceUUID')) {\n      this.generateUUID('');\n    } else {\n      this._devUUID = localStorage.getItem('deviceUUID');\n      if (!localStorage.getItem('deviceId')) {\n        this._devId = localStorage.getItem('deviceId');\n      }\n    }\n    this._platform = '';\n    this._devUUID = localStorage.getItem('deviceUUID');\n    this._devId = localStorage.getItem('deviceId');\n\n    const rawKey = subscription.getKey ? subscription.getKey('p256dh') : '';\n    const key = rawKey\n      ? btoa(String.fromCharCode.apply(null, new Uint8Array(rawKey)))\n      : '';\n    const rawAuthSecret = subscription.getKey\n      ? subscription.getKey('auth')\n      : '';\n    const authSecret = rawAuthSecret\n      ? btoa(String.fromCharCode.apply(null, new Uint8Array(rawAuthSecret)))\n      : '';\n\n    const tokenValue = {\n      endpoint: subscription.endpoint,\n      userAuth: authSecret,\n      userPublicKey: key\n    };\n    this._token = JSON.stringify(tokenValue);\n    if (navigator.userAgent.indexOf('Firefox') !== -1) {\n      this._platform = 'F'; // Firefox Browser\n    } else if (navigator.userAgent.indexOf('Chrome') !== -1) {\n      this._platform = 'C'; // Chrome Browser\n    }\n\n    let device = null;\n    if (this.validateInput(this._devId)) {\n      device = {\n        deviceId: this._devId,\n        platform: this._platform,\n        token: this._token,\n        uuid: this._devUUID\n      };\n    } else {\n      device = {\n        platform: this._platform,\n        token: this._token,\n        uuid: this._devUUID\n      };\n    }\n    this.registerDevice(device);\n  }\n\n  // tslint:disable-next-line:member-ordering\n  public registerDevice(device): void {\n    console.log('Device details:', device);\n    const xhr = this.setRequest(this.constants.getDevicesPath(), 'POST', true);\n\n    /*this.http.post(this.constants.getDevicesPath(), device)\n        .then((response) => {\n            console.log('Response register,', response);\n            localStorage.setItem('deviceId', response);\n        });*/\n    // tslint:disable-next-line:only-arrow-functions\n    xhr.onreadystatechange = function() {\n      if (xhr.readyState === 4 && xhr.status === 200) {\n        console.log('Response register,', xhr);\n        localStorage.setItem('deviceId', xhr.responseText);\n      }\n    };\n    xhr.send(JSON.stringify(device));\n  }\n\n  // tslint:disable-next-line:member-ordering\n  public unRegisterDevice(): Promise<any> {\n    const promise = new Promise((resolve, reject) => {\n      this._devId = localStorage.getItem('deviceId');\n      const global = this;\n      // tslint:disable-next-line:only-arrow-functions\n      navigator.serviceWorker.ready\n        .then(function(registration) {\n          registration\n            .unregister()\n            // tslint:disable-next-line:only-arrow-functions\n            .then(function(checkUnregister) {\n              if (!checkUnregister) {\n                console.log('unregister failed');\n                resolve();\n              }\n              global\n                .unsubscribeDevice(global._devId, global)\n                // tslint:disable-next-line:only-arrow-functions\n                .then(function() {\n                  resolve();\n                });\n            });\n        })\n        // tslint:disable-next-line:only-arrow-functions\n        .catch(function(error) {\n          console.log('Registration failed with ' + error);\n          resolve();\n        });\n    });\n    return promise;\n  }\n\n  // tslint:disable-next-line:member-ordering\n  public unsubscribeDevice(deviceID, global): Promise<any> {\n    const promise = new Promise((resolve, reject) => {\n      const deviceId = localStorage.getItem('deviceId');\n      const device = {\n        devices: {\n          deviceId: global._devId,\n          platform: global._platform,\n          token: global._token,\n          uuid: global._devUUID\n        }\n      };\n      if (deviceID) {\n        const xhr = global.setRequest(\n          global.constants.getDevicesPath() + '/' + deviceID,\n          'DELETE',\n          true\n        );\n        // tslint:disable-next-line:only-arrow-functions\n        xhr.onreadystatechange = function() {\n          if (xhr.readyState === 4 && xhr.status === 200) {\n            console.log('The response is ,', xhr);\n            console.log('Successfully unregistered the device');\n            localStorage.setItem('deviceUUID', '');\n            localStorage.setItem('deviceId', '');\n            localStorage.setItem('token', '');\n            resolve();\n          }\n        };\n        xhr.send(JSON.stringify(device));\n      } else {\n        resolve();\n      }\n    });\n    return promise;\n  }\n\n  private setRequest(url, method, asyncP) {\n    let xhr = new XMLHttpRequest();\n    xhr.open(method, url, asyncP);\n    xhr = this.setHeaders(xhr, method);\n    return xhr;\n  }\n\n  private setHeaders(xhr, method) {\n    xhr.setRequestHeader('Accept', 'application/json');\n    xhr.setRequestHeader('x-ibm-client-id', this.constants.getClientId());\n    xhr.setRequestHeader('App-Code', this.constants.getAppCode());\n    xhr.setRequestHeader('Accept-Language', this.constants.getAppLanguage());\n    xhr.setRequestHeader('Authorization', this.constants.getAuthToken());\n    xhr.setRequestHeader('jwt', this.constants.getJwt());\n    xhr.timeout = 3000;\n\n    if (method === 'POST' || method === 'PUT') {\n      xhr.setRequestHeader('Content-Type', 'application/json; charset=UTF-8');\n    }\n\n    return xhr;\n  }\n\n  private generateUUID(token): string {\n    let dateTime = new Date().getTime();\n    if (window.performance && typeof window.performance.now === 'function') {\n      dateTime += performance.now(); // use high-precision timer if available\n    }\n\n    const hostname = window.location.hostname;\n    const arrayData = [];\n    arrayData.push(this.hashCode(dateTime));\n    arrayData.push(this.hashCode(token));\n    arrayData.push(this.hashCode(hostname));\n    arrayData.push(this.hashCode(this._platform));\n\n    const finalString = arrayData\n      .join('')\n      .replace(/[-.]/g, '')\n      .replace(/[,.]/g, '');\n    let uuid = '';\n    for (let i = 0; i < 32; i++) {\n      uuid += finalString.charAt(\n        Math.floor(Math.random() * finalString.length)\n      );\n    }\n    localStorage.setItem('deviceUUID', uuid);\n    this._devUUID = uuid;\n    return this._devUUID;\n  }\n\n  private hashCode(str): number {\n    let hash = 0;\n    let i;\n    let chr;\n    let len;\n    if (str.length === 0) {\n      return hash;\n    }\n    for (i = 0, len = str.length; i < len; i++) {\n      chr = str.charCodeAt(i);\n      // tslint:disable-next-line:no-bitwise\n      hash = (hash << 5) - hash + chr;\n      // tslint:disable-next-line:no-bitwise\n      hash |= 0; // Convert to 32bit integer\n    }\n    return hash;\n  }\n\n  private validateInput(stringValue) {\n    // tslint:disable-next-line:max-line-length\n    return stringValue === undefined ||\n      stringValue == null ||\n      stringValue.length <= 0 ||\n      stringValue === ''\n      ? false\n      : true;\n  }\n\n  private urlB64ToUint8Array(base64String) {\n    const padding = '='.repeat((4 - (base64String.length % 4)) % 4);\n    const base64 = (base64String + padding)\n      .replace(/\\-/g, '+')\n      .replace(/_/g, '/');\n\n    const rawData = window.atob(base64);\n    const outputArray = new Uint8Array(rawData.length);\n\n    for (let i = 0; i < rawData.length; ++i) {\n      outputArray[i] = rawData.charCodeAt(i);\n    }\n    return outputArray;\n  }\n}\n","import { Broadcaster } from '@cemex-core/events-v7';\n\nimport { AuthGuard } from './auth-guard.service';\nimport { HttpCemex } from './http.service';\nimport { ProjectSettings } from './project.settings';\nimport { SessionService } from './session.service';\nimport { TranslationService } from './translation.service';\n\nexport const CORE_COMMON_PROVIDERS = [\n  ProjectSettings,\n  HttpCemex,\n  SessionService,\n  Broadcaster,\n  AuthGuard,\n  TranslationService\n];\n","import { NgModule } from '@angular/core';\nimport { CORE_COMMON_PROVIDERS } from './core-common.providers';\n\n@NgModule({\n  declarations: [],\n  exports: [],\n  imports: [],\n  providers: [CORE_COMMON_PROVIDERS]\n})\nexport class CmxCoreCommonModule {}\n"]}