/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
var ProjectSettings = /** @class */ (function () {
    function ProjectSettings() {
        /** @type {?} */
        var APP_KEYS = {
            API_ENV_KEY: 'API_ENV',
            API_HOST_KEY: 'API_HOST',
            API_ORG_KEY: 'API_ORG',
            APP_CODE_KEY: 'APP_CODE',
            CLIENT_ID_KEY: 'CLIENT_ID'
        };
        this._appCode = ((/** @type {?} */ (global)))[APP_KEYS.APP_CODE_KEY];
        this._clientId = ((/** @type {?} */ (global)))[APP_KEYS.CLIENT_ID_KEY];
        this._apiBasePath = ((/** @type {?} */ (global)))[APP_KEYS.API_HOST_KEY];
        this._apiOrg = ((/** @type {?} */ (global)))[APP_KEYS.API_ORG_KEY];
        this._apiEnv = ((/** @type {?} */ (global)))[APP_KEYS.API_ENV_KEY];
        if (this._apiBasePath === undefined) {
            console.warn('environment variable \'API_HOST\' is missing !!');
        }
    }
    Object.defineProperty(ProjectSettings.prototype, "appCode", {
        // ============================================================================================
        // Getters
        // ============================================================================================
        get: 
        // ============================================================================================
        // Getters
        // ============================================================================================
        /**
         * @return {?}
         */
        function () {
            return this._appCode;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ProjectSettings.prototype, "clientId", {
        get: /**
         * @return {?}
         */
        function () {
            return this._clientId;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ProjectSettings.prototype, "apiBasePath", {
        get: /**
         * @return {?}
         */
        function () {
            return this._apiBasePath;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ProjectSettings.prototype, "apiOrg", {
        get: /**
         * @return {?}
         */
        function () {
            return this._apiOrg;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ProjectSettings.prototype, "apiEnv", {
        get: /**
         * @return {?}
         */
        function () {
            return this._apiEnv;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @param {?} apiEndpoint
     * @return {?}
     */
    ProjectSettings.prototype.generateEndpoint = /**
     * @param {?} apiEndpoint
     * @return {?}
     */
    function (apiEndpoint) {
        /** @type {?} */
        var url = "" + this._apiBasePath + this._apiOrg + this._apiEnv + apiEndpoint;
        return url;
    };
    /**
     * @return {?}
     */
    ProjectSettings.prototype.getBaseOrgEnvPath = /**
     * @return {?}
     */
    function () {
        return this._apiBasePath + this._apiOrg + this._apiEnv;
    };
    /**
     * @param {?} newKeys
     * @return {?}
     */
    ProjectSettings.prototype.setAppKeys = /**
     * @param {?} newKeys
     * @return {?}
     */
    function (newKeys) {
        this._appCode = newKeys.APP_CODE;
        this._clientId = newKeys.CLIENT_ID;
        if (this._apiBasePath === undefined) {
            console.warn('environment variable \'API_HOST\' is missing !!');
        }
    };
    ProjectSettings.decorators = [
        { type: Injectable }
    ];
    /** @nocollapse */
    ProjectSettings.ctorParameters = function () { return []; };
    return ProjectSettings;
}());
export { ProjectSettings };
if (false) {
    /**
     * @type {?}
     * @private
     */
    ProjectSettings.prototype._appCode;
    /**
     * @type {?}
     * @private
     */
    ProjectSettings.prototype._clientId;
    /**
     * @type {?}
     * @private
     */
    ProjectSettings.prototype._apiBasePath;
    /**
     * @type {?}
     * @private
     */
    ProjectSettings.prototype._apiOrg;
    /**
     * @type {?}
     * @private
     */
    ProjectSettings.prototype._apiEnv;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvamVjdC5zZXR0aW5ncy5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BjZW1leC1jb3JlL2FuZ3VsYXItc2VydmljZXMtdjcvIiwic291cmNlcyI6WyJsaWIvcHJvamVjdC5zZXR0aW5ncy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUkzQztJQVFFOztZQUNRLFFBQVEsR0FBRztZQUNmLFdBQVcsRUFBRSxTQUFTO1lBQ3RCLFlBQVksRUFBRSxVQUFVO1lBQ3hCLFdBQVcsRUFBRSxTQUFTO1lBQ3RCLFlBQVksRUFBRSxVQUFVO1lBQ3hCLGFBQWEsRUFBRSxXQUFXO1NBQzNCO1FBRUQsSUFBSSxDQUFDLFFBQVEsR0FBRyxDQUFDLG1CQUFBLE1BQU0sRUFBTyxDQUFDLENBQUMsUUFBUSxDQUFDLFlBQVksQ0FBQyxDQUFDO1FBQ3ZELElBQUksQ0FBQyxTQUFTLEdBQUcsQ0FBQyxtQkFBQSxNQUFNLEVBQU8sQ0FBQyxDQUFDLFFBQVEsQ0FBQyxhQUFhLENBQUMsQ0FBQztRQUN6RCxJQUFJLENBQUMsWUFBWSxHQUFHLENBQUMsbUJBQUEsTUFBTSxFQUFPLENBQUMsQ0FBQyxRQUFRLENBQUMsWUFBWSxDQUFDLENBQUM7UUFDM0QsSUFBSSxDQUFDLE9BQU8sR0FBRyxDQUFDLG1CQUFBLE1BQU0sRUFBTyxDQUFDLENBQUMsUUFBUSxDQUFDLFdBQVcsQ0FBQyxDQUFDO1FBQ3JELElBQUksQ0FBQyxPQUFPLEdBQUcsQ0FBQyxtQkFBQSxNQUFNLEVBQU8sQ0FBQyxDQUFDLFFBQVEsQ0FBQyxXQUFXLENBQUMsQ0FBQztRQUVyRCxJQUFJLElBQUksQ0FBQyxZQUFZLEtBQUssU0FBUyxFQUFFO1lBQ25DLE9BQU8sQ0FBQyxJQUFJLENBQUMsaURBQWlELENBQUMsQ0FBQztTQUNqRTtJQUNILENBQUM7SUFNRCxzQkFBVyxvQ0FBTztRQUpsQiwrRkFBK0Y7UUFDL0YsVUFBVTtRQUNWLCtGQUErRjs7Ozs7Ozs7UUFFL0Y7WUFDRSxPQUFPLElBQUksQ0FBQyxRQUFRLENBQUM7UUFDdkIsQ0FBQzs7O09BQUE7SUFFRCxzQkFBVyxxQ0FBUTs7OztRQUFuQjtZQUNFLE9BQU8sSUFBSSxDQUFDLFNBQVMsQ0FBQztRQUN4QixDQUFDOzs7T0FBQTtJQUVELHNCQUFXLHdDQUFXOzs7O1FBQXRCO1lBQ0UsT0FBTyxJQUFJLENBQUMsWUFBWSxDQUFDO1FBQzNCLENBQUM7OztPQUFBO0lBRUQsc0JBQVcsbUNBQU07Ozs7UUFBakI7WUFDRSxPQUFPLElBQUksQ0FBQyxPQUFPLENBQUM7UUFDdEIsQ0FBQzs7O09BQUE7SUFFRCxzQkFBVyxtQ0FBTTs7OztRQUFqQjtZQUNFLE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQztRQUN0QixDQUFDOzs7T0FBQTs7Ozs7SUFFTSwwQ0FBZ0I7Ozs7SUFBdkIsVUFBd0IsV0FBbUI7O1lBQ25DLEdBQUcsR0FBRyxLQUFHLElBQUksQ0FBQyxZQUFZLEdBQUcsSUFBSSxDQUFDLE9BQU8sR0FDN0MsSUFBSSxDQUFDLE9BQU8sR0FDWCxXQUFhO1FBQ2hCLE9BQU8sR0FBRyxDQUFDO0lBQ2IsQ0FBQzs7OztJQUVNLDJDQUFpQjs7O0lBQXhCO1FBQ0UsT0FBTyxJQUFJLENBQUMsWUFBWSxHQUFHLElBQUksQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQztJQUN6RCxDQUFDOzs7OztJQUVNLG9DQUFVOzs7O0lBQWpCLFVBQWtCLE9BQU87UUFDdkIsSUFBSSxDQUFDLFFBQVEsR0FBRyxPQUFPLENBQUMsUUFBUSxDQUFDO1FBQ2pDLElBQUksQ0FBQyxTQUFTLEdBQUcsT0FBTyxDQUFDLFNBQVMsQ0FBQztRQUVuQyxJQUFJLElBQUksQ0FBQyxZQUFZLEtBQUssU0FBUyxFQUFFO1lBQ25DLE9BQU8sQ0FBQyxJQUFJLENBQUMsaURBQWlELENBQUMsQ0FBQztTQUNqRTtJQUNILENBQUM7O2dCQXRFRixVQUFVOzs7O0lBdUVYLHNCQUFDO0NBQUEsQUF2RUQsSUF1RUM7U0F0RVksZUFBZTs7Ozs7O0lBQzFCLG1DQUF5Qjs7Ozs7SUFDekIsb0NBQTBCOzs7OztJQUMxQix1Q0FBNkI7Ozs7O0lBQzdCLGtDQUF3Qjs7Ozs7SUFDeEIsa0NBQXdCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5kZWNsYXJlIHZhciBnbG9iYWw6IGFueTtcblxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIFByb2plY3RTZXR0aW5ncyB7XG4gIHByaXZhdGUgX2FwcENvZGU6IHN0cmluZztcbiAgcHJpdmF0ZSBfY2xpZW50SWQ6IHN0cmluZztcbiAgcHJpdmF0ZSBfYXBpQmFzZVBhdGg6IHN0cmluZztcbiAgcHJpdmF0ZSBfYXBpT3JnOiBzdHJpbmc7XG4gIHByaXZhdGUgX2FwaUVudjogc3RyaW5nO1xuXG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIGNvbnN0IEFQUF9LRVlTID0ge1xuICAgICAgQVBJX0VOVl9LRVk6ICdBUElfRU5WJyxcbiAgICAgIEFQSV9IT1NUX0tFWTogJ0FQSV9IT1NUJyxcbiAgICAgIEFQSV9PUkdfS0VZOiAnQVBJX09SRycsXG4gICAgICBBUFBfQ09ERV9LRVk6ICdBUFBfQ09ERScsXG4gICAgICBDTElFTlRfSURfS0VZOiAnQ0xJRU5UX0lEJ1xuICAgIH07XG5cbiAgICB0aGlzLl9hcHBDb2RlID0gKGdsb2JhbCBhcyBhbnkpW0FQUF9LRVlTLkFQUF9DT0RFX0tFWV07XG4gICAgdGhpcy5fY2xpZW50SWQgPSAoZ2xvYmFsIGFzIGFueSlbQVBQX0tFWVMuQ0xJRU5UX0lEX0tFWV07XG4gICAgdGhpcy5fYXBpQmFzZVBhdGggPSAoZ2xvYmFsIGFzIGFueSlbQVBQX0tFWVMuQVBJX0hPU1RfS0VZXTtcbiAgICB0aGlzLl9hcGlPcmcgPSAoZ2xvYmFsIGFzIGFueSlbQVBQX0tFWVMuQVBJX09SR19LRVldO1xuICAgIHRoaXMuX2FwaUVudiA9IChnbG9iYWwgYXMgYW55KVtBUFBfS0VZUy5BUElfRU5WX0tFWV07XG5cbiAgICBpZiAodGhpcy5fYXBpQmFzZVBhdGggPT09IHVuZGVmaW5lZCkge1xuICAgICAgY29uc29sZS53YXJuKCdlbnZpcm9ubWVudCB2YXJpYWJsZSBcXCdBUElfSE9TVFxcJyBpcyBtaXNzaW5nICEhJyk7XG4gICAgfVxuICB9XG5cbiAgLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAgLy8gR2V0dGVyc1xuICAvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG4gIHB1YmxpYyBnZXQgYXBwQ29kZSgpOiBzdHJpbmcge1xuICAgIHJldHVybiB0aGlzLl9hcHBDb2RlO1xuICB9XG5cbiAgcHVibGljIGdldCBjbGllbnRJZCgpOiBzdHJpbmcge1xuICAgIHJldHVybiB0aGlzLl9jbGllbnRJZDtcbiAgfVxuXG4gIHB1YmxpYyBnZXQgYXBpQmFzZVBhdGgoKTogc3RyaW5nIHtcbiAgICByZXR1cm4gdGhpcy5fYXBpQmFzZVBhdGg7XG4gIH1cblxuICBwdWJsaWMgZ2V0IGFwaU9yZygpOiBzdHJpbmcge1xuICAgIHJldHVybiB0aGlzLl9hcGlPcmc7XG4gIH1cblxuICBwdWJsaWMgZ2V0IGFwaUVudigpOiBzdHJpbmcge1xuICAgIHJldHVybiB0aGlzLl9hcGlFbnY7XG4gIH1cblxuICBwdWJsaWMgZ2VuZXJhdGVFbmRwb2ludChhcGlFbmRwb2ludDogc3RyaW5nKTogc3RyaW5nIHtcbiAgICBjb25zdCB1cmwgPSBgJHt0aGlzLl9hcGlCYXNlUGF0aH0ke3RoaXMuX2FwaU9yZ30ke1xuICAgICAgdGhpcy5fYXBpRW52XG4gICAgfSR7YXBpRW5kcG9pbnR9YDtcbiAgICByZXR1cm4gdXJsO1xuICB9XG5cbiAgcHVibGljIGdldEJhc2VPcmdFbnZQYXRoKCk6IHN0cmluZyB7XG4gICAgcmV0dXJuIHRoaXMuX2FwaUJhc2VQYXRoICsgdGhpcy5fYXBpT3JnICsgdGhpcy5fYXBpRW52O1xuICB9XG5cbiAgcHVibGljIHNldEFwcEtleXMobmV3S2V5cyk6IHZvaWQge1xuICAgIHRoaXMuX2FwcENvZGUgPSBuZXdLZXlzLkFQUF9DT0RFO1xuICAgIHRoaXMuX2NsaWVudElkID0gbmV3S2V5cy5DTElFTlRfSUQ7XG5cbiAgICBpZiAodGhpcy5fYXBpQmFzZVBhdGggPT09IHVuZGVmaW5lZCkge1xuICAgICAgY29uc29sZS53YXJuKCdlbnZpcm9ubWVudCB2YXJpYWJsZSBcXCdBUElfSE9TVFxcJyBpcyBtaXNzaW5nICEhJyk7XG4gICAgfVxuICB9XG59XG4iXX0=