/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
var PushNotificationsConstants = /** @class */ (function () {
    function PushNotificationsConstants() {
        // tslint:disable-next-line:no-string-literal
        this.appCode = window['APP_CODE']; // 'Foreman_App'
        // tslint:disable-next-line:no-string-literal
        this.apiClientId = window['CLIENT_ID']; // 'f624df7f-9b35-41c0-8a41-4854b86c84f1';
        // tslint:disable-next-line:no-string-literal
        this.apiHost = window['API_HOST']; // 'https://uscldcnxapmd01.azure-api.net/';
        // tslint:disable-next-line:no-string-literal
        this.appLanguage = window['LANGUAGE']; // 'es-MX';
        this.authToken = 'Bearer ' + sessionStorage.getItem('auth_token');
        this.jwt = sessionStorage.getItem('jwt');
        this.urlServiceWorker = 'service-worker/push_sw.js';
        this.deviceApi = this.apiHost + 'v5/cm/notifications/devices';
        this.sourcePush = 'postMessageSW';
        this.vapidPublicKey = '';
    }
    /**
     * @return {?}
     */
    PushNotificationsConstants.prototype.getAppCode = /**
     * @return {?}
     */
    function () {
        return this.appCode;
    };
    /**
     * @return {?}
     */
    PushNotificationsConstants.prototype.getClientId = /**
     * @return {?}
     */
    function () {
        return this.apiClientId;
    };
    /**
     * @return {?}
     */
    PushNotificationsConstants.prototype.getApiBasePath = /**
     * @return {?}
     */
    function () {
        return this.apiBasePath;
    };
    /**
     * @return {?}
     */
    PushNotificationsConstants.prototype.getAppLanguage = /**
     * @return {?}
     */
    function () {
        return this.appLanguage;
    };
    /**
     * @return {?}
     */
    PushNotificationsConstants.prototype.getAuthToken = /**
     * @return {?}
     */
    function () {
        return this.authToken;
    };
    /**
     * @return {?}
     */
    PushNotificationsConstants.prototype.getJwt = /**
     * @return {?}
     */
    function () {
        return this.jwt;
    };
    /**
     * @return {?}
     */
    PushNotificationsConstants.prototype.getUrlSW = /**
     * @return {?}
     */
    function () {
        return this.urlServiceWorker;
    };
    /**
     * @return {?}
     */
    PushNotificationsConstants.prototype.getDevicesPath = /**
     * @return {?}
     */
    function () {
        return this.deviceApi;
    };
    /**
     * @return {?}
     */
    PushNotificationsConstants.prototype.getSourcePush = /**
     * @return {?}
     */
    function () {
        return this.sourcePush;
    };
    /**
     * @return {?}
     */
    PushNotificationsConstants.prototype.getVapidPublicKey = /**
     * @return {?}
     */
    function () {
        return this.vapidPublicKey;
    };
    /**
     * @param {?} pVapidPublicKey
     * @return {?}
     */
    PushNotificationsConstants.prototype.setVapidPublicKey = /**
     * @param {?} pVapidPublicKey
     * @return {?}
     */
    function (pVapidPublicKey) {
        this.vapidPublicKey = pVapidPublicKey;
    };
    /**
     * @param {?} urlSW
     * @return {?}
     */
    PushNotificationsConstants.prototype.setUrlSW = /**
     * @param {?} urlSW
     * @return {?}
     */
    function (urlSW) {
        this.urlServiceWorker = urlSW;
    };
    PushNotificationsConstants.decorators = [
        { type: Injectable }
    ];
    /** @nocollapse */
    PushNotificationsConstants.ctorParameters = function () { return []; };
    return PushNotificationsConstants;
}());
export { PushNotificationsConstants };
if (false) {
    /**
     * @type {?}
     * @private
     */
    PushNotificationsConstants.prototype.appCode;
    /**
     * @type {?}
     * @private
     */
    PushNotificationsConstants.prototype.apiClientId;
    /**
     * @type {?}
     * @private
     */
    PushNotificationsConstants.prototype.appLanguage;
    /**
     * @type {?}
     * @private
     */
    PushNotificationsConstants.prototype.urlServiceWorker;
    /**
     * @type {?}
     * @private
     */
    PushNotificationsConstants.prototype.deviceApi;
    /**
     * @type {?}
     * @private
     */
    PushNotificationsConstants.prototype.apiBasePath;
    /**
     * @type {?}
     * @private
     */
    PushNotificationsConstants.prototype.apiHost;
    /**
     * @type {?}
     * @private
     */
    PushNotificationsConstants.prototype.apiOrg;
    /**
     * @type {?}
     * @private
     */
    PushNotificationsConstants.prototype.apiEnv;
    /**
     * @type {?}
     * @private
     */
    PushNotificationsConstants.prototype.authToken;
    /**
     * @type {?}
     * @private
     */
    PushNotificationsConstants.prototype.jwt;
    /**
     * @type {?}
     * @private
     */
    PushNotificationsConstants.prototype.sourcePush;
    /**
     * @type {?}
     * @private
     */
    PushNotificationsConstants.prototype.vapidPublicKey;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHVzaC1ub3RpZmljYXRpb25zLmNvbnN0YW50cy5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BjZW1leC1jb3JlL2FuZ3VsYXItc2VydmljZXMtdjcvIiwic291cmNlcyI6WyJsaWIvcHVzaC1ub3RpZmljYXRpb25zL3B1c2gtbm90aWZpY2F0aW9ucy5jb25zdGFudHMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDM0M7SUFnQkU7UUFDRSw2Q0FBNkM7UUFDN0MsSUFBSSxDQUFDLE9BQU8sR0FBRyxNQUFNLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQyxnQkFBZ0I7UUFDbkQsNkNBQTZDO1FBQzdDLElBQUksQ0FBQyxXQUFXLEdBQUcsTUFBTSxDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUMsMENBQTBDO1FBQ2xGLDZDQUE2QztRQUM3QyxJQUFJLENBQUMsT0FBTyxHQUFHLE1BQU0sQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDLDJDQUEyQztRQUM5RSw2Q0FBNkM7UUFDN0MsSUFBSSxDQUFDLFdBQVcsR0FBRyxNQUFNLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQyxXQUFXO1FBQ2xELElBQUksQ0FBQyxTQUFTLEdBQUcsU0FBUyxHQUFHLGNBQWMsQ0FBQyxPQUFPLENBQUMsWUFBWSxDQUFDLENBQUM7UUFDbEUsSUFBSSxDQUFDLEdBQUcsR0FBRyxjQUFjLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQ3pDLElBQUksQ0FBQyxnQkFBZ0IsR0FBRywyQkFBMkIsQ0FBQztRQUNwRCxJQUFJLENBQUMsU0FBUyxHQUFHLElBQUksQ0FBQyxPQUFPLEdBQUcsNkJBQTZCLENBQUM7UUFDOUQsSUFBSSxDQUFDLFVBQVUsR0FBRyxlQUFlLENBQUM7UUFDbEMsSUFBSSxDQUFDLGNBQWMsR0FBRyxFQUFFLENBQUM7SUFDM0IsQ0FBQzs7OztJQUVNLCtDQUFVOzs7SUFBakI7UUFDRSxPQUFPLElBQUksQ0FBQyxPQUFPLENBQUM7SUFDdEIsQ0FBQzs7OztJQUVNLGdEQUFXOzs7SUFBbEI7UUFDRSxPQUFPLElBQUksQ0FBQyxXQUFXLENBQUM7SUFDMUIsQ0FBQzs7OztJQUVNLG1EQUFjOzs7SUFBckI7UUFDRSxPQUFPLElBQUksQ0FBQyxXQUFXLENBQUM7SUFDMUIsQ0FBQzs7OztJQUVNLG1EQUFjOzs7SUFBckI7UUFDRSxPQUFPLElBQUksQ0FBQyxXQUFXLENBQUM7SUFDMUIsQ0FBQzs7OztJQUVNLGlEQUFZOzs7SUFBbkI7UUFDRSxPQUFPLElBQUksQ0FBQyxTQUFTLENBQUM7SUFDeEIsQ0FBQzs7OztJQUVNLDJDQUFNOzs7SUFBYjtRQUNFLE9BQU8sSUFBSSxDQUFDLEdBQUcsQ0FBQztJQUNsQixDQUFDOzs7O0lBRU0sNkNBQVE7OztJQUFmO1FBQ0UsT0FBTyxJQUFJLENBQUMsZ0JBQWdCLENBQUM7SUFDL0IsQ0FBQzs7OztJQUVNLG1EQUFjOzs7SUFBckI7UUFDRSxPQUFPLElBQUksQ0FBQyxTQUFTLENBQUM7SUFDeEIsQ0FBQzs7OztJQUVNLGtEQUFhOzs7SUFBcEI7UUFDRSxPQUFPLElBQUksQ0FBQyxVQUFVLENBQUM7SUFDekIsQ0FBQzs7OztJQUVNLHNEQUFpQjs7O0lBQXhCO1FBQ0UsT0FBTyxJQUFJLENBQUMsY0FBYyxDQUFDO0lBQzdCLENBQUM7Ozs7O0lBRU0sc0RBQWlCOzs7O0lBQXhCLFVBQXlCLGVBQWU7UUFDdEMsSUFBSSxDQUFDLGNBQWMsR0FBRyxlQUFlLENBQUM7SUFDeEMsQ0FBQzs7Ozs7SUFFTSw2Q0FBUTs7OztJQUFmLFVBQWdCLEtBQUs7UUFDbkIsSUFBSSxDQUFDLGdCQUFnQixHQUFHLEtBQUssQ0FBQztJQUNoQyxDQUFDOztnQkEvRUYsVUFBVTs7OztJQWdGWCxpQ0FBQztDQUFBLEFBaEZELElBZ0ZDO1NBL0VZLDBCQUEwQjs7Ozs7O0lBQ3JDLDZDQUF3Qjs7Ozs7SUFDeEIsaURBQTRCOzs7OztJQUM1QixpREFBNEI7Ozs7O0lBQzVCLHNEQUFpQzs7Ozs7SUFDakMsK0NBQTBCOzs7OztJQUMxQixpREFBNEI7Ozs7O0lBQzVCLDZDQUF3Qjs7Ozs7SUFDeEIsNENBQXVCOzs7OztJQUN2Qiw0Q0FBdUI7Ozs7O0lBQ3ZCLCtDQUEwQjs7Ozs7SUFDMUIseUNBQW9COzs7OztJQUNwQixnREFBMkI7Ozs7O0lBQzNCLG9EQUErQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBQdXNoTm90aWZpY2F0aW9uc0NvbnN0YW50cyB7XG4gIHByaXZhdGUgYXBwQ29kZTogc3RyaW5nO1xuICBwcml2YXRlIGFwaUNsaWVudElkOiBzdHJpbmc7XG4gIHByaXZhdGUgYXBwTGFuZ3VhZ2U6IHN0cmluZztcbiAgcHJpdmF0ZSB1cmxTZXJ2aWNlV29ya2VyOiBzdHJpbmc7XG4gIHByaXZhdGUgZGV2aWNlQXBpOiBzdHJpbmc7XG4gIHByaXZhdGUgYXBpQmFzZVBhdGg6IHN0cmluZztcbiAgcHJpdmF0ZSBhcGlIb3N0OiBzdHJpbmc7XG4gIHByaXZhdGUgYXBpT3JnOiBzdHJpbmc7XG4gIHByaXZhdGUgYXBpRW52OiBzdHJpbmc7XG4gIHByaXZhdGUgYXV0aFRva2VuOiBzdHJpbmc7XG4gIHByaXZhdGUgand0OiBzdHJpbmc7XG4gIHByaXZhdGUgc291cmNlUHVzaDogc3RyaW5nO1xuICBwcml2YXRlIHZhcGlkUHVibGljS2V5OiBzdHJpbmc7XG5cbiAgY29uc3RydWN0b3IoKSB7XG4gICAgLy8gdHNsaW50OmRpc2FibGUtbmV4dC1saW5lOm5vLXN0cmluZy1saXRlcmFsXG4gICAgdGhpcy5hcHBDb2RlID0gd2luZG93WydBUFBfQ09ERSddOyAvLyAnRm9yZW1hbl9BcHAnXG4gICAgLy8gdHNsaW50OmRpc2FibGUtbmV4dC1saW5lOm5vLXN0cmluZy1saXRlcmFsXG4gICAgdGhpcy5hcGlDbGllbnRJZCA9IHdpbmRvd1snQ0xJRU5UX0lEJ107IC8vICdmNjI0ZGY3Zi05YjM1LTQxYzAtOGE0MS00ODU0Yjg2Yzg0ZjEnO1xuICAgIC8vIHRzbGludDpkaXNhYmxlLW5leHQtbGluZTpuby1zdHJpbmctbGl0ZXJhbFxuICAgIHRoaXMuYXBpSG9zdCA9IHdpbmRvd1snQVBJX0hPU1QnXTsgLy8gJ2h0dHBzOi8vdXNjbGRjbnhhcG1kMDEuYXp1cmUtYXBpLm5ldC8nO1xuICAgIC8vIHRzbGludDpkaXNhYmxlLW5leHQtbGluZTpuby1zdHJpbmctbGl0ZXJhbFxuICAgIHRoaXMuYXBwTGFuZ3VhZ2UgPSB3aW5kb3dbJ0xBTkdVQUdFJ107IC8vICdlcy1NWCc7XG4gICAgdGhpcy5hdXRoVG9rZW4gPSAnQmVhcmVyICcgKyBzZXNzaW9uU3RvcmFnZS5nZXRJdGVtKCdhdXRoX3Rva2VuJyk7XG4gICAgdGhpcy5qd3QgPSBzZXNzaW9uU3RvcmFnZS5nZXRJdGVtKCdqd3QnKTtcbiAgICB0aGlzLnVybFNlcnZpY2VXb3JrZXIgPSAnc2VydmljZS13b3JrZXIvcHVzaF9zdy5qcyc7XG4gICAgdGhpcy5kZXZpY2VBcGkgPSB0aGlzLmFwaUhvc3QgKyAndjUvY20vbm90aWZpY2F0aW9ucy9kZXZpY2VzJztcbiAgICB0aGlzLnNvdXJjZVB1c2ggPSAncG9zdE1lc3NhZ2VTVyc7XG4gICAgdGhpcy52YXBpZFB1YmxpY0tleSA9ICcnO1xuICB9XG5cbiAgcHVibGljIGdldEFwcENvZGUoKTogc3RyaW5nIHtcbiAgICByZXR1cm4gdGhpcy5hcHBDb2RlO1xuICB9XG5cbiAgcHVibGljIGdldENsaWVudElkKCk6IHN0cmluZyB7XG4gICAgcmV0dXJuIHRoaXMuYXBpQ2xpZW50SWQ7XG4gIH1cblxuICBwdWJsaWMgZ2V0QXBpQmFzZVBhdGgoKTogc3RyaW5nIHtcbiAgICByZXR1cm4gdGhpcy5hcGlCYXNlUGF0aDtcbiAgfVxuXG4gIHB1YmxpYyBnZXRBcHBMYW5ndWFnZSgpOiBzdHJpbmcge1xuICAgIHJldHVybiB0aGlzLmFwcExhbmd1YWdlO1xuICB9XG5cbiAgcHVibGljIGdldEF1dGhUb2tlbigpOiBzdHJpbmcge1xuICAgIHJldHVybiB0aGlzLmF1dGhUb2tlbjtcbiAgfVxuXG4gIHB1YmxpYyBnZXRKd3QoKTogc3RyaW5nIHtcbiAgICByZXR1cm4gdGhpcy5qd3Q7XG4gIH1cblxuICBwdWJsaWMgZ2V0VXJsU1coKTogc3RyaW5nIHtcbiAgICByZXR1cm4gdGhpcy51cmxTZXJ2aWNlV29ya2VyO1xuICB9XG5cbiAgcHVibGljIGdldERldmljZXNQYXRoKCk6IHN0cmluZyB7XG4gICAgcmV0dXJuIHRoaXMuZGV2aWNlQXBpO1xuICB9XG5cbiAgcHVibGljIGdldFNvdXJjZVB1c2goKTogc3RyaW5nIHtcbiAgICByZXR1cm4gdGhpcy5zb3VyY2VQdXNoO1xuICB9XG5cbiAgcHVibGljIGdldFZhcGlkUHVibGljS2V5KCk6IHN0cmluZyB7XG4gICAgcmV0dXJuIHRoaXMudmFwaWRQdWJsaWNLZXk7XG4gIH1cblxuICBwdWJsaWMgc2V0VmFwaWRQdWJsaWNLZXkocFZhcGlkUHVibGljS2V5KSB7XG4gICAgdGhpcy52YXBpZFB1YmxpY0tleSA9IHBWYXBpZFB1YmxpY0tleTtcbiAgfVxuXG4gIHB1YmxpYyBzZXRVcmxTVyh1cmxTVykge1xuICAgIHRoaXMudXJsU2VydmljZVdvcmtlciA9IHVybFNXO1xuICB9XG59XG4iXX0=