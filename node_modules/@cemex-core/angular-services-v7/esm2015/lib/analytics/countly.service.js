/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
export class CountlyService {
    constructor() {
        this.defaultTrackings = [
            ['track_pageview'],
            ['track_clicks'],
            ['track_errors'],
            ['track_links'],
            ['track_forms'],
            ['collect_from_forms'] /*['track_sessions'] */
        ];
        this.Countly = ((/** @type {?} */ (window))).Countly;
    }
    /**
     * @return {?}
     */
    init() {
        this.addTracking('track_sessions');
        this.Countly.init();
    }
    /**
     * @param {?} flag
     * @return {?}
     */
    debug(flag) {
        this.Countly.debug = flag;
    }
    /**
     * @param {?} url
     * @param {?} appKey
     * @return {?}
     */
    startService(url, appKey) {
        if (this.Countly !== undefined) {
            this.Countly.url = url;
            this.Countly.app_key = appKey;
            this.Countly.q = this.defaultTrackings;
        }
    }
    /**
     * @param {?} key
     * @param {?=} value
     * @return {?}
     */
    addTracking(key, value) {
        if (!value) {
            this.Countly.q.push([key]);
        }
        else {
            this.Countly.q.push([key, value]);
        }
    }
    /**
     * @param {?} key
     * @return {?}
     */
    addTrackingPage(key) {
        this.Countly.q.push(['track_pageview', key]);
    }
    /**
     * @param {?} countryCode
     * @param {?} newId
     * @return {?}
     */
    changeId(countryCode, newId) {
        this.Countly.q.push(['change_id', countryCode + newId]);
    }
    /**
     * @param {?} userfields
     * @return {?}
     */
    identifyUser(userfields) {
        this.Countly.q.push(['user_details', userfields]);
    }
    /**
     * @return {?}
     */
    endSession() {
        this.Countly.q.push(['end_session']);
    }
    /**
     * @param {?} trackingjson
     * @return {?}
     */
    removeTracking(trackingjson) {
        this.Countly.q.forEach((/**
         * @param {?} element
         * @return {?}
         */
        element => {
            if (element.indexOf(trackingjson) !== -1) {
                element[0] = 'canceled';
            }
        }));
    }
}
if (false) {
    /** @type {?} */
    CountlyService.prototype.defaultTrackings;
    /** @type {?} */
    CountlyService.prototype.Countly;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY291bnRseS5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGNlbWV4LWNvcmUvYW5ndWxhci1zZXJ2aWNlcy12Ny8iLCJzb3VyY2VzIjpbImxpYi9hbmFseXRpY3MvY291bnRseS5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFFQSxNQUFNLE9BQU8sY0FBYztJQVd6QjtRQVZPLHFCQUFnQixHQUFRO1lBQzdCLENBQUMsZ0JBQWdCLENBQUM7WUFDbEIsQ0FBQyxjQUFjLENBQUM7WUFDaEIsQ0FBQyxjQUFjLENBQUM7WUFDaEIsQ0FBQyxhQUFhLENBQUM7WUFDZixDQUFDLGFBQWEsQ0FBQztZQUNmLENBQUMsb0JBQW9CLENBQUMsQ0FBQyx1QkFBdUI7U0FDL0MsQ0FBQztRQUlBLElBQUksQ0FBQyxPQUFPLEdBQUcsQ0FBQyxtQkFBQSxNQUFNLEVBQU8sQ0FBQyxDQUFDLE9BQU8sQ0FBQztJQUN6QyxDQUFDOzs7O0lBRU0sSUFBSTtRQUNULElBQUksQ0FBQyxXQUFXLENBQUMsZ0JBQWdCLENBQUMsQ0FBQztRQUNuQyxJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksRUFBRSxDQUFDO0lBQ3RCLENBQUM7Ozs7O0lBRU0sS0FBSyxDQUFDLElBQWE7UUFDeEIsSUFBSSxDQUFDLE9BQU8sQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDO0lBQzVCLENBQUM7Ozs7OztJQUVNLFlBQVksQ0FBQyxHQUFXLEVBQUUsTUFBYztRQUM3QyxJQUFJLElBQUksQ0FBQyxPQUFPLEtBQUssU0FBUyxFQUFFO1lBQzlCLElBQUksQ0FBQyxPQUFPLENBQUMsR0FBRyxHQUFHLEdBQUcsQ0FBQztZQUN2QixJQUFJLENBQUMsT0FBTyxDQUFDLE9BQU8sR0FBRyxNQUFNLENBQUM7WUFDOUIsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDLEdBQUcsSUFBSSxDQUFDLGdCQUFnQixDQUFDO1NBQ3hDO0lBQ0gsQ0FBQzs7Ozs7O0lBRU0sV0FBVyxDQUFDLEdBQVcsRUFBRSxLQUFXO1FBQ3pDLElBQUksQ0FBQyxLQUFLLEVBQUU7WUFDVixJQUFJLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDO1NBQzVCO2FBQU07WUFDTCxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxHQUFHLEVBQUUsS0FBSyxDQUFDLENBQUMsQ0FBQztTQUNuQztJQUNILENBQUM7Ozs7O0lBRU0sZUFBZSxDQUFDLEdBQVc7UUFDaEMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsZ0JBQWdCLEVBQUUsR0FBRyxDQUFDLENBQUMsQ0FBQztJQUMvQyxDQUFDOzs7Ozs7SUFFTSxRQUFRLENBQUMsV0FBbUIsRUFBRSxLQUFhO1FBQ2hELElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLFdBQVcsRUFBRSxXQUFXLEdBQUcsS0FBSyxDQUFDLENBQUMsQ0FBQztJQUMxRCxDQUFDOzs7OztJQUVNLFlBQVksQ0FBQyxVQUFlO1FBQ2pDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLGNBQWMsRUFBRSxVQUFVLENBQUMsQ0FBQyxDQUFDO0lBQ3BELENBQUM7Ozs7SUFFTSxVQUFVO1FBQ2YsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsYUFBYSxDQUFDLENBQUMsQ0FBQztJQUN2QyxDQUFDOzs7OztJQUVNLGNBQWMsQ0FBQyxZQUFpQjtRQUNyQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxPQUFPOzs7O1FBQUMsT0FBTyxDQUFDLEVBQUU7WUFDL0IsSUFBSSxPQUFPLENBQUMsT0FBTyxDQUFDLFlBQVksQ0FBQyxLQUFLLENBQUMsQ0FBQyxFQUFFO2dCQUN4QyxPQUFPLENBQUMsQ0FBQyxDQUFDLEdBQUcsVUFBVSxDQUFDO2FBQ3pCO1FBQ0gsQ0FBQyxFQUFDLENBQUM7SUFDTCxDQUFDO0NBQ0Y7OztJQTlEQywwQ0FPRTs7SUFFRixpQ0FBb0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJQW5hbHl0aWNzU2VydmljZSB9IGZyb20gJy4vaWFuYWx5dGljcy5pbnRlcmZhY2UnO1xuXG5leHBvcnQgY2xhc3MgQ291bnRseVNlcnZpY2UgaW1wbGVtZW50cyBJQW5hbHl0aWNzU2VydmljZSB7XG4gIHB1YmxpYyBkZWZhdWx0VHJhY2tpbmdzOiBhbnkgPSBbXG4gICAgWyd0cmFja19wYWdldmlldyddLFxuICAgIFsndHJhY2tfY2xpY2tzJ10sXG4gICAgWyd0cmFja19lcnJvcnMnXSxcbiAgICBbJ3RyYWNrX2xpbmtzJ10sXG4gICAgWyd0cmFja19mb3JtcyddLFxuICAgIFsnY29sbGVjdF9mcm9tX2Zvcm1zJ10gLypbJ3RyYWNrX3Nlc3Npb25zJ10gKi9cbiAgXTtcbiAgLy8gdHNsaW50OmRpc2FibGUtbmV4dC1saW5lOnZhcmlhYmxlLW5hbWVcbiAgcHVibGljIENvdW50bHk6IGFueTtcbiAgY29uc3RydWN0b3IoKSB7XG4gICAgdGhpcy5Db3VudGx5ID0gKHdpbmRvdyBhcyBhbnkpLkNvdW50bHk7XG4gIH1cblxuICBwdWJsaWMgaW5pdCgpIHtcbiAgICB0aGlzLmFkZFRyYWNraW5nKCd0cmFja19zZXNzaW9ucycpO1xuICAgIHRoaXMuQ291bnRseS5pbml0KCk7XG4gIH1cblxuICBwdWJsaWMgZGVidWcoZmxhZzogYm9vbGVhbikge1xuICAgIHRoaXMuQ291bnRseS5kZWJ1ZyA9IGZsYWc7XG4gIH1cblxuICBwdWJsaWMgc3RhcnRTZXJ2aWNlKHVybDogc3RyaW5nLCBhcHBLZXk6IHN0cmluZyk6IHZvaWQge1xuICAgIGlmICh0aGlzLkNvdW50bHkgIT09IHVuZGVmaW5lZCkge1xuICAgICAgdGhpcy5Db3VudGx5LnVybCA9IHVybDtcbiAgICAgIHRoaXMuQ291bnRseS5hcHBfa2V5ID0gYXBwS2V5O1xuICAgICAgdGhpcy5Db3VudGx5LnEgPSB0aGlzLmRlZmF1bHRUcmFja2luZ3M7XG4gICAgfVxuICB9XG5cbiAgcHVibGljIGFkZFRyYWNraW5nKGtleTogc3RyaW5nLCB2YWx1ZT86IGFueSkge1xuICAgIGlmICghdmFsdWUpIHtcbiAgICAgIHRoaXMuQ291bnRseS5xLnB1c2goW2tleV0pO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLkNvdW50bHkucS5wdXNoKFtrZXksIHZhbHVlXSk7XG4gICAgfVxuICB9XG5cbiAgcHVibGljIGFkZFRyYWNraW5nUGFnZShrZXk6IHN0cmluZyk6IHZvaWQge1xuICAgIHRoaXMuQ291bnRseS5xLnB1c2goWyd0cmFja19wYWdldmlldycsIGtleV0pO1xuICB9XG5cbiAgcHVibGljIGNoYW5nZUlkKGNvdW50cnlDb2RlOiBzdHJpbmcsIG5ld0lkOiBzdHJpbmcpIHtcbiAgICB0aGlzLkNvdW50bHkucS5wdXNoKFsnY2hhbmdlX2lkJywgY291bnRyeUNvZGUgKyBuZXdJZF0pO1xuICB9XG5cbiAgcHVibGljIGlkZW50aWZ5VXNlcih1c2VyZmllbGRzOiBhbnkpIHtcbiAgICB0aGlzLkNvdW50bHkucS5wdXNoKFsndXNlcl9kZXRhaWxzJywgdXNlcmZpZWxkc10pO1xuICB9XG5cbiAgcHVibGljIGVuZFNlc3Npb24oKSB7XG4gICAgdGhpcy5Db3VudGx5LnEucHVzaChbJ2VuZF9zZXNzaW9uJ10pO1xuICB9XG5cbiAgcHVibGljIHJlbW92ZVRyYWNraW5nKHRyYWNraW5nanNvbjogYW55KSB7XG4gICAgdGhpcy5Db3VudGx5LnEuZm9yRWFjaChlbGVtZW50ID0+IHtcbiAgICAgIGlmIChlbGVtZW50LmluZGV4T2YodHJhY2tpbmdqc29uKSAhPT0gLTEpIHtcbiAgICAgICAgZWxlbWVudFswXSA9ICdjYW5jZWxlZCc7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cbn1cbiJdfQ==