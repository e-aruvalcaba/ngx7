import { Http } from '@angular/http';
import { Broadcaster } from '@cemex-core/events-v7';
export declare class FeatureToggleService {
    eventBroadcaster: Broadcaster;
    http: Http;
    _productPath: string;
    _productEnvironment: string;
    localManifest: boolean;
    static featureList: Map<string, IFeatureItem>;
    static language: string;
    static PRODUCT_PATH: string;
    static ENVIRONMENT: string;
    static USE_LOCAL_MANIFEST: string;
    productPath: string;
    productEnvironment: string;
    /**
     * gets all features
     */
    static all(): Map<string, IFeatureItem>;
    constructor(eventBroadcaster: Broadcaster, http: Http, _productPath: string, _productEnvironment: string, localManifest: boolean);
    /**
     * this method returns either true or false if the list of the features
     * requested is enabled in this environment and for this user
     */
    feature(featureId: string | string[], releaseVersion?: string, featureVersion?: string, hostName?: string): boolean;
    /**
     * this method returns all list of features
     */
    getAll(): Map<string, IFeatureItem>;
    /**
     * this method allows to load the feature list from the file
     */
    getFeatureList(loadFromLocalList: boolean): void;
    coreValidator(featureId: string, releaseVersion?: string, featureVersion?: string, hostName?: string): boolean;
    handleError(error: any): Promise<any>;
    populateFeatures(result: any): void;
}
export interface IFeatureItem {
    feature: string;
    option: string | number;
    environment: string;
    role: string;
    country: string;
    release_version: string;
    feature_version: string;
    host_name: string;
    role_match: string;
    role_any: string;
}
export interface IApplication {
    applicationCode: string;
    applicationId: number;
    roles: IRole[];
}
export interface IRole {
    roleCode: string;
    roleId: number;
}
