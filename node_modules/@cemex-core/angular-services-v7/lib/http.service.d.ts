import { Http, Request, RequestOptionsArgs } from '@angular/http';
import { Observable } from 'rxjs';
import { ProjectSettings } from './project.settings';
export declare class HttpCemex {
    protected http: Http;
    private projectSettings;
    private _validSettings;
    constructor(http: Http, projectSettings: ProjectSettings);
    generateEndpoint(apiEndpoint: string): string;
    readonly clientId: string;
    readonly appCode: string;
    request(url: string | Request, options?: RequestOptionsArgs): Observable<import("@angular/http").Response>;
    get(url: string, options?: RequestOptionsArgs, overrideHeader?: boolean): Observable<import("@angular/http").Response>;
    post(url: string, body: any, options?: RequestOptionsArgs, overrideHeader?: boolean): any;
    put(url: string, body: any, options?: RequestOptionsArgs, overrideHeader?: boolean): Observable<import("@angular/http").Response>;
    patch(url: string, body: any, options?: RequestOptionsArgs, overrideHeader?: boolean): Observable<import("@angular/http").Response>;
    delete(url: string, options?: RequestOptionsArgs, overrideHeader?: boolean): Observable<import("@angular/http").Response>;
    head(url: string, options?: RequestOptionsArgs, overrideHeader?: boolean): Observable<import("@angular/http").Response>;
    isRunningOnBrowser(): boolean;
    encrypt(str: any): string;
    decrypt(str: any): any;
    setProjectSettingsNewKeys(newKeys: any): void;
    protected createAuthorizationHeader(options: RequestOptionsArgs, overrideHeader?: boolean): RequestOptionsArgs;
    private validateProjectSettings;
}
