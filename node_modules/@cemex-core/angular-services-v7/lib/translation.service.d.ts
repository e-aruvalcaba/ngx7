import { Http } from '@angular/http';
import { Subject } from 'rxjs';
import { Broadcaster } from '@cemex-core/events-v7';
export declare class TranslationService {
    eventBroadcaster: Broadcaster;
    http: Http;
    _productPath: string;
    useTranslationServer: boolean;
    _translationUrl: string;
    static translation: Map<string, string>;
    static language: string;
    static PRODUCT_PATH: string;
    static USE_TRANSLATION_SERVER: string;
    static TRANSLATION_BASE_URL: string;
    labels: any;
    _useTranslationServer: boolean;
    productPath: string;
    _localeData: Subject<any>;
    /**
     * st comes from static-translation
     */
    static st(textID: string): string;
    /**
     * gets all translations
     */
    static all(): Map<string, string>;
    constructor(eventBroadcaster: Broadcaster, http: Http, _productPath: string, useTranslationServer: boolean, _translationUrl: string);
    readonly localeData: import("rxjs").Observable<any>;
    isRunningOnBrowser(): boolean;
    onChange(value: any): void;
    /**
     * this method is left here for backwards compatibility
     */
    lang(lang: string): void;
    isoLang(lang: string): void;
    file(url: string): void;
    /**
     * pt comes from public-translation
     */
    pt(textID: string): string;
    getLabel(textId: string): string;
    getlang(): string;
    getCountryCode(): string;
    populateTranslation(result: any): void;
    handleError(error: any): Promise<any>;
}
