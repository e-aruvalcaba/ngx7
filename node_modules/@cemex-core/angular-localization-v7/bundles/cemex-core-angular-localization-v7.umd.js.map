{"version":3,"file":"cemex-core-angular-localization-v7.umd.js.map","sources":["node_modules/tslib/tslib.es6.js","ng://@cemex-core/angular-localization-v7/lib/services/translation.service.ts","ng://@cemex-core/angular-localization-v7/lib/fromExponential.ts","ng://@cemex-core/angular-localization-v7/lib/services/formatter.service.ts","ng://@cemex-core/angular-localization-v7/lib/pipes/cmx-currency-custom.pipe.ts","ng://@cemex-core/angular-localization-v7/lib/pipes/cmx-currency.pipe.ts","ng://@cemex-core/angular-localization-v7/lib/pipes/cmx-date-moment.pipe.ts","ng://@cemex-core/angular-localization-v7/lib/services/date-formatter.service.ts","ng://@cemex-core/angular-localization-v7/lib/pipes/cmx-date.pipe.ts","ng://@cemex-core/angular-localization-v7/lib/pipes/cmx-date-time-moment.pipe.ts","ng://@cemex-core/angular-localization-v7/lib/pipes/cmx-number.pipe.ts","ng://@cemex-core/angular-localization-v7/lib/pipes/cmx-time-moment.pipe.ts","ng://@cemex-core/angular-localization-v7/lib/angular-localization.module.ts","ng://@cemex-core/angular-localization-v7/lib/services/direction.service.ts","ng://@cemex-core/angular-localization-v7/lib/services/locale.service.ts","ng://@cemex-core/angular-localization-v7/lib/resolvers/translation.resolver.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Inject, Injectable, Optional } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { Observable, ReplaySubject } from 'rxjs';\n\nimport { ILanguage } from './../interfaces/language.interface';\nimport { ITranslationInterface } from '../interfaces/translation.interface';\n\ndeclare var global: any;\n\n@Injectable()\nexport class TranslationService implements ITranslationInterface {\n  public static TRANSLATION_PRODUCT_PATH = 'TRANSLATION_PRODUCT_PATH';\n  public static TRANSLATION_LANGUAGES = 'TRANSLATION_LANGUAGES';\n  public static DEFAULT_LANGUAGE_ISO = 'DEFAULT_LANGUAGE_ISO';\n  public static currentLanguage: ILanguage = undefined;\n\n  private static translations: any = {};\n  private static languages: ILanguage[] = [];\n\n  public languageLoaded = new ReplaySubject<boolean>(1);\n  private selectedLanguageSubject = new ReplaySubject<ILanguage>(1);\n  private languagesSubject = new ReplaySubject<ILanguage[]>(1);\n  // we can change 'languageLoaded' to 'selectedLanguageSubject' in translation resolver  ???\n\n  constructor(\n    private httpClient: HttpClient,\n    @Inject(TranslationService.TRANSLATION_PRODUCT_PATH)\n    @Optional()\n    private productPath: string,\n    @Inject(TranslationService.TRANSLATION_LANGUAGES)\n    @Optional()\n    private loadedLanguages: any,\n    @Inject(TranslationService.DEFAULT_LANGUAGE_ISO)\n    @Optional()\n    private defaultLanguageISO: any // e.g.: en_US from america region || en_UK from europe region.\n  ) {\n    if (!this.loadedLanguages) {\n      console.warn(\n        'The Translation Service can\\'t init without Injected Languages.'\n      );\n      console.warn(\n        'Inject the languages from your application: > ' +\n          '{ provide: \\'TRANSLATION_LANGUAGES, useValue: window[\\'CMX_LANGUAGES\\'] },\\''\n      );\n      return;\n    }\n\n    if (!defaultLanguageISO) {\n      console.warn('The Translation Service need defaultLanguageISO.');\n    }\n\n    TranslationService.languages = this.loadedLanguages;\n    const localStorageLanguage = (global as any).localStorage.getItem(\n      'language'\n    );\n\n    const allKeys = Object.keys(TranslationService.translations);\n    if (allKeys.length === 0) {\n      this.setLanguage(localStorageLanguage || defaultLanguageISO);\n    } else {\n      this.languageLoaded.next(true);\n      // we can change 'languageLoaded' to 'selectedLanguageSubject' in translation resolver?\n    }\n  }\n\n  /**\n   * @description Gets the labels data from the server.\n   * @param $lang Language code for the file\n   */\n  public getTranslations($lang: string): Observable<any> {\n    const endpoint = `/translate/translate/${this.productPath}/${$lang}`;\n    return this.httpClient.get<any>(endpoint);\n  }\n\n  /**\n   * @description Observable to gets the languages that exist in the server\n   */\n  public getLanguages(): Observable<ILanguage[]> {\n    return this.languagesSubject.asObservable();\n  }\n\n  public getSelectedLanguage(): Observable<ILanguage> {\n    return this.selectedLanguageSubject.asObservable();\n  }\n\n  /**\n   * @description Retrieve the public translation of a label\n   * @param $textId Label id as written in the json file\n   */\n  public pt($textId: string): string {\n    const textValue = TranslationService.translations[$textId];\n    if (!textValue || textValue === undefined) {\n      return 'NOT:' + $textId;\n    }\n    return textValue;\n  }\n\n  /**\n   * @description Retrieve the public translation of a label\n   * @param $textId Label id as written in the json file\n   */\n  public getLabel($textId: string): string {\n    const textValue = TranslationService.translations[$textId];\n    if (!textValue || textValue === undefined) {\n      return 'NOT:' + $textId;\n    }\n    return textValue;\n  }\n\n  /**\n   * @description Retrieve language published on the server.\n   * @param $languageISO Can be the country code or the language iso combination\n   */\n  public getLanguage($languageISO: string): ILanguage {\n    if ($languageISO !== undefined && $languageISO !== null) {\n      let langValue: ILanguage;\n\n      langValue = TranslationService.languages.find(language => {\n        return (\n          language.languageISO === $languageISO ||\n          language.countryCode.toLowerCase() === $languageISO.toLowerCase() ||\n          language.languageISO.includes($languageISO)\n        );\n      });\n\n      // if the language cannot reached, go for default\n      if (langValue === undefined) {\n        console.warn('The Language cannot reached', $languageISO);\n        langValue = this.getDefaultLanguage();\n      }\n\n      langValue.momentConfig = this.getMomentConfig(langValue);\n\n      return langValue;\n    } else {\n      console.warn('$languageIso param is undefined.');\n      return this.getDefaultLanguage();\n    }\n  }\n\n  /**\n   * @description Retrieve language published on the server.\n   * @param $countryCode Can be the country code or the language iso combination\n   */\n  public getLanguageByCountryCode($countryCode: string): ILanguage {\n    if ($countryCode !== undefined && $countryCode !== null) {\n      let langValue: ILanguage;\n      const countryLan: ILanguage[] = TranslationService.languages.filter(\n        $language => {\n          return (\n            $language.countryCode.toLowerCase() === $countryCode.toLowerCase()\n          );\n        }\n      );\n\n      if (countryLan.length > 1) {\n        const languageCode = sessionStorage.getItem('language');\n        langValue = countryLan.find($language => {\n          return (\n            $language.languageISO.toLowerCase() === languageCode.toLowerCase()\n          );\n        });\n      } else {\n        langValue =\n          countryLan && countryLan.length > 0 ? countryLan[0] : undefined;\n      }\n\n      // if the language cannot reached, go for default\n      if (langValue === undefined) {\n        console.warn('The Language cannot reached', $countryCode);\n        langValue = this.getDefaultLanguage();\n      }\n\n      langValue.momentConfig = this.getMomentConfig(langValue);\n\n      return langValue;\n    } else {\n      console.warn('$countryCode param is undefined.');\n      return this.getDefaultLanguage();\n    }\n  }\n\n  /**\n   * @description Set language by languageISO or CountryCode.\n   * @param $languageISO Can be the country code or the language iso combination\n   */\n  public setLanguage($languageISO: string) {\n    this.selectedLanguage = this.getLanguage($languageISO);\n\n    for (const lang of TranslationService.languages) {\n      lang.isSelected = lang.languageISO === this.selectedLanguage.languageISO;\n      lang.dir = lang.textFloat === 'right' ? 'rtl' : 'ltr';\n      lang.rtl = lang.dir === 'rtl' ? true : false;\n    }\n\n    this.getTranslations(this.selectedLanguage.languageISO).subscribe(\n      translations => this.populateTranslation(translations)\n    );\n  }\n\n  public populateTranslation($result: any) {\n    TranslationService.translations = $result;\n\n    // emit changes until populate is completed\n    localStorage.setItem('language', this.selectedLanguage.languageISO);\n    sessionStorage.setItem('language', this.selectedLanguage.languageISO);\n    this.languageLoaded.next(true);\n    // we can change 'languageLoaded' to 'selectedLanguageSubject' in translation resolver?\n    this.selectedLanguageSubject.next(this.selectedLanguage);\n    this.languagesSubject.next(TranslationService.languages);\n  }\n\n  public get selectedLanguage() {\n    return TranslationService.currentLanguage;\n  }\n\n  public set selectedLanguage(language: ILanguage) {\n    TranslationService.currentLanguage = language;\n  }\n\n  public getDefaultLanguage() {\n    let defaultLangValue: ILanguage;\n\n    defaultLangValue = TranslationService.languages.find(language => {\n      return (\n        language.languageISO === this.defaultLanguageISO ||\n        language.countryCode.toLowerCase() ===\n          this.defaultLanguageISO.toLowerCase() ||\n        language.languageISO.includes(this.defaultLanguageISO)\n      );\n    });\n\n    if (defaultLangValue === undefined) {\n      console.warn(\n        'The Default Language cannot reached',\n        this.defaultLanguageISO\n      );\n\n      defaultLangValue = TranslationService.languages[0];\n      console.warn(\n        'Trying get the first language',\n        defaultLangValue.languageISO\n      );\n    } else {\n      console.warn('The Default Language is', defaultLangValue.languageISO);\n    }\n\n    return defaultLangValue;\n  }\n\n  public getLanguagesByCountryCode(countryCode: string): ILanguage[] {\n    const languagesByContryCode: ILanguage[] = TranslationService.languages.filter(\n      language =>\n        language.countryCode.toLowerCase() === countryCode.toLowerCase()\n    );\n    return languagesByContryCode;\n  }\n\n  private getMomentConfig(language) {\n    return {\n      months: language.monthNames.split(','),\n      monthsShort: language.shortDayMonths.split(','),\n      weekdays: language.dayNames.split(','),\n      weekdaysMin: language.shortDayNames2.split(','),\n      weekdaysShort: language.shortDayNames.split(',')\n    };\n  }\n}\n","/**\n * From https://github.com/shrpne/from-exponential\n * Can't install the package beacause it is ES6, UglifyJS on its version compatible with Webpack 3 can't do ES6\n * The code needs to be copied locally so Typescript could compile it to ES5\n * or just upgrade to Webpack 4 and use the webpack-uglify-plugin\n */\n\n/**\n * Return two parts array of exponential number\n * @param num - number or array of its parts\n */\nexport function getExponentialParts(num) {\n  return Array.isArray(num) ? num : String(num).split(/[eE]/);\n}\n\n/**\n *\n * @param num - number or array of its parts\n */\nexport function isExponential(num) {\n  const eParts = getExponentialParts(num);\n  return !Number.isNaN(Number(eParts[1]));\n}\n\n/**\n * Converts exponential notation to a human readable string\n * @param num - number or array of its parts\n */\nexport default function fromExponential(num) {\n  const eParts = getExponentialParts(num);\n  if (!isExponential(eParts)) {\n    return eParts[0];\n  }\n\n  const sign = eParts[0][0] === '-' ? '-' : '';\n  const digits = eParts[0].replace(/^-/, '');\n  const digitsParts = digits.split('.');\n  const wholeDigits = digitsParts[0];\n  const fractionDigits = digitsParts[1] || '';\n  let e = Number(eParts[1]);\n\n  if (e === 0) {\n    return `${sign + wholeDigits}.${fractionDigits}`;\n  } else if (e < 0) {\n    // move dot to the left\n    const countWholeAfterTransform = wholeDigits.length + e;\n    if (countWholeAfterTransform > 0) {\n      // transform whole to fraction\n      const wholeDigitsAfterTransform = wholeDigits.substr(\n        0,\n        countWholeAfterTransform\n      );\n      const wholeDigitsTransformedToFracton = wholeDigits.substr(\n        countWholeAfterTransform\n      );\n      return `${sign +\n        wholeDigitsAfterTransform}.${wholeDigitsTransformedToFracton}${fractionDigits}`;\n    } else {\n      // not enough whole digits: prepend with fractional zeros\n\n      // first e goes to dotted zero\n      let zeros = '0.';\n      e += 1;\n      while (e) {\n        zeros += '0';\n        e += 1;\n      }\n      return sign + zeros + wholeDigits + fractionDigits;\n    }\n  } else {\n    // move dot to the right\n    const countFractionAfterTransform = fractionDigits.length - e;\n    if (countFractionAfterTransform > 0) {\n      // transform fraction to whole\n      // countTransformedFractionToWhole = e\n      const fractionDigitsAfterTransform = fractionDigits.substr(e);\n      const fractionDigitsTransformedToWhole = fractionDigits.substr(0, e);\n      return `${sign +\n        wholeDigits +\n        fractionDigitsTransformedToWhole}.${fractionDigitsAfterTransform}`;\n    } else {\n      // not enough fractions: append whole zeros\n      let zerosCount = -countFractionAfterTransform;\n      let zeros = '';\n      while (zerosCount) {\n        zeros += '0';\n        zerosCount -= 1;\n      }\n      return sign + wholeDigits + fractionDigits + zeros;\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport * as moment_ from 'moment';\n\nimport { TranslationService } from './translation.service';\nimport fromExponential from './../fromExponential';\n\nconst moment = moment_;\n\nexport enum DateTimeActions {\n  ConvertToLocal,\n  NoConvertToLocal\n}\n\n@Injectable()\nexport class FormatterService {\n  constructor() {}\n\n  // DATES\n\n  /**\n   * @description Transforms a valid string to a date object\n   * @param date The date as string\n   * @returns A javascript date object\n   */\n  public getDateObject(date: string): Date {\n    try {\n      const auxDate = date.replace(/-g/, '/');\n      const bits: any = auxDate.split(/\\D/);\n      const month = parseInt(bits[1], undefined) - 1;\n      if (bits.length === 3) {\n        return new Date(bits[0], month, bits[2]);\n      } else {\n        return new Date(bits[0], month, bits[2], bits[3], bits[4], bits[5]);\n      }\n    } catch ($exception) {\n      return undefined;\n    }\n  }\n\n  public formatDateTimeMoment(\n    date,\n    languageISO,\n    format,\n    action: DateTimeActions = DateTimeActions.ConvertToLocal\n  ) {\n    if (TranslationService.currentLanguage) {\n      moment.updateLocale(\n        TranslationService.currentLanguage.languageISO.substr(0, 2),\n        TranslationService.currentLanguage.momentConfig\n      );\n    }\n\n    if (action === DateTimeActions.NoConvertToLocal) {\n      return moment(date)\n        .locale(languageISO.substr(0, 2))\n        .format(format);\n    }\n\n    return this.utcToLocal(date)\n      .locale(languageISO.substr(0, 2))\n      .format(format);\n  }\n\n  /**\n   * @description Format a number by TypeScript Number function\n   * The static value '-u-nu-latn' is for always returns commons numbers '1,2,3,4,5,6,7,8,9,0'\n   * @param numberEntry: value to format\n   * @param languageISO: specifict language to format\n   * @param decimalNumbers: quantity decimals to set in the format\n   * @returns A value formatted\n   */\n  public formatNumberTS(numberEntry, languageISO, decimalNumbers) {\n    if (isNaN(numberEntry) || numberEntry === null) {\n      return 0;\n    }\n\n    return Number(\n      this.round(numberEntry, decimalNumbers).toFixed(decimalNumbers)\n    ).toLocaleString(languageISO + '-u-nu-latn', {\n      minimumFractionDigits: numberEntry % 1 === 0 ? 0 : decimalNumbers\n    });\n  }\n\n  public utcToLocal(dateEntry) {\n    return moment.utc(dateEntry).local();\n  }\n\n  public localToUtc(date, format?: any) {\n    if (format !== undefined) {\n      return moment(date, 'YYYY-MM-DD THH:mm:ssZ')\n        .utc()\n        .format(format);\n    } else {\n      return moment(date, 'YYYY-MM-DD THH:mm:ssZ')\n        .utc()\n        .format();\n    }\n  }\n\n  // expected time '00:00:00'\n  public timeToMinutes(time) {\n    const timeSplit = time.split(':');\n\n    const hours = +timeSplit[0];\n    const minutes = +timeSplit[1];\n    const seconds = +timeSplit[2];\n\n    return hours * 60 + minutes + this.roundToDown(seconds / 60);\n  }\n\n  // NUMBERS\n\n  /**\n   * @description Formats a number as a currency preserving its precision.\n   * In order the keep the precision the number must be passed as a string\n   * @param value The number value to format\n   * @param numberDecimals The number of decimals to use\n   * @param thousandSeparator The string character to use when separating numbers\n   * @param decimalSeparator The string character to use when separating the decimal and integer part\n   * @returns The number as a currency string\n   */\n  public formatNumber(\n    value: number | string,\n    numberDecimals?: number,\n    thousandSeparator?: string,\n    decimalSeparator?: string\n  ): string {\n    // tslint:disable-next-line: triple-equals\n    if (value == undefined || value.toString() == '' || isNaN(value as any)) {\n      console.warn('Not a valid number to format');\n      return '';\n    }\n\n    // tslint:disable-next-line:triple-equals\n    numberDecimals = numberDecimals != undefined ? numberDecimals : 2;\n    // tslint:disable-next-line:triple-equals\n    thousandSeparator =\n      thousandSeparator !== undefined ? thousandSeparator : ',';\n    // tslint:disable-next-line:triple-equals\n    decimalSeparator = decimalSeparator !== undefined ? decimalSeparator : '.';\n\n    const completeNumber: string = fromExponential(value);\n\n    const sign: string = value < 0 ? '-' : '';\n    const absoluteValue: string =\n      value < 0 ? completeNumber.split('-')[1] : completeNumber;\n    const truncatedDecimalValue: string =\n      absoluteValue.split('.')[1] &&\n      absoluteValue.split('.')[1].slice(0, numberDecimals);\n\n    const integerPart: string = absoluteValue.split('.')[0];\n    const floatingPart: string = this.rightPad(\n      truncatedDecimalValue,\n      '0',\n      numberDecimals\n    );\n\n    let formattedInteger: string = integerPart;\n\n    if (Number(integerPart) >= 1000) {\n      formattedInteger = integerPart.replace(/./g, (c, i, a) => {\n        return i && c !== decimalSeparator && (a.length - i) % 3 === 0\n          ? thousandSeparator + c\n          : c;\n      });\n    }\n\n    // tslint:disable-next-line:max-line-length\n    const formattedNumber = `${sign}${formattedInteger}${\n      floatingPart.length > 0 ? decimalSeparator : ''\n    }${floatingPart}`;\n\n    return formattedNumber;\n  }\n\n  public round(value: number, decimals: number) {\n    let type = '';\n    type = 'round';\n    const valueDecimals = value % 1;\n    if (valueDecimals !== 0.5) {\n      return Number(Math[type](value + 'e' + decimals) + 'e-' + decimals);\n    } else {\n      return Number(value);\n    }\n  }\n\n  public roundToDown(value: number) {\n    return Math.floor(value);\n  }\n\n  // STRINGS\n  public removeFirstZeros(value: string): string {\n    return value.replace(/^0+/, '');\n  }\n\n  public pad(text: string, wildcard: string, length: number): string {\n    let result = text;\n    while (result.length < length) {\n      result = wildcard + result;\n    }\n    return result;\n  }\n\n  /**\n   * @description Fills up a string with the specified character appending it to the right till lenght is achieved\n   * @param text String to add padding\n   * @param wildcard Character that's gonne be repeated\n   * @param lenght The desired length\n   */\n  public rightPad(\n    text: number | string | undefined,\n    wildcard: string,\n    length: number\n  ): string {\n    if (text === undefined || text === null || text === '') {\n      return wildcard.repeat(length);\n    }\n    let str = text.toString();\n    while (str.length < length) {\n      str += wildcard;\n    }\n\n    return str;\n  }\n\n  public formatMeasureUnit(measureUnit) {\n    switch (measureUnit) {\n      case 'YD3':\n        return 'YdÂ³';\n      case 'M3':\n        return 'MÂ³';\n      default:\n        return measureUnit;\n    }\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\nimport { FormatterService } from './../services/formatter.service';\n\n@Pipe({\n  name: 'cmxCurrencyCustom',\n  pure: true\n})\nexport class CmxCurrencyCustomPipe implements PipeTransform {\n  private value = '';\n\n  constructor(private formatter: FormatterService) {}\n\n  public transform(\n    $value: any,\n    $currencySymbol: string,\n    $decimalNumbers: string | number,\n    $thousandSeparator: string,\n    $decimalSeparator: string,\n    $floatCurrencySymbolRight?: boolean\n  ): string {\n    try {\n      if ($value !== undefined && isNaN($value) === false) {\n        this.value = $value.toString();\n        $decimalNumbers = parseInt($decimalNumbers.toString(), undefined);\n        if ($value < 0) {\n          // value is negative\n          const v = parseFloat($value.toString().replace(/\\-/g, ''));\n          const $aux: string = this.formatter.formatNumber(\n            v,\n            $decimalNumbers,\n            $thousandSeparator,\n            $decimalSeparator\n          );\n          if ($floatCurrencySymbolRight) {\n            this.value = '-' + $aux + $currencySymbol;\n          } else {\n            this.value = '-' + $currencySymbol + $aux;\n          }\n        } else {\n          this.value =\n            $currencySymbol +\n            this.formatter.formatNumber(\n              $value,\n              $decimalNumbers,\n              $thousandSeparator,\n              $decimalSeparator\n            );\n        }\n      } else {\n        this.value = '';\n      }\n    } catch ($exception) {\n      console.error('Value trying to transform: ', $value);\n      console.error($exception);\n      this.value = '';\n    }\n    return this.value;\n  }\n}\n","import { isPlatformBrowser } from '@angular/common';\nimport { Inject, Pipe, PLATFORM_ID, PipeTransform } from '@angular/core';\n\nimport { ILanguage } from './../interfaces/language.interface';\nimport { FormatterService } from './../services/formatter.service';\nimport { TranslationService } from './../services/translation.service';\n\n@Pipe({\n  name: 'cmxCurrency',\n  pure: true\n})\nexport class CmxCurrencyPipe implements PipeTransform {\n  // FIXME: I should be injecting the window object but that will break the implementation. I will not do that just yet.\n  // Making this public so I can access it in the test\n  public window: any;\n\n  constructor(\n    private formatter: FormatterService,\n    private translation: TranslationService,\n    @Inject(PLATFORM_ID) private platformId: any\n  ) {\n    if (isPlatformBrowser(platformId)) {\n      this.window = window;\n    }\n  }\n\n  public transform(value: any, countryCode?: string): string {\n    if (value === '' || value == null || isNaN(value as any)) {\n      console.warn('The value is not a number');\n      return '';\n    }\n\n    countryCode = countryCode || this.window.sessionStorage.getItem('country');\n\n    // tslint:disable-next-line:triple-equals\n    if (countryCode == undefined) {\n      console.warn(`Can't retrieve countryCode`);\n      return '';\n    }\n\n    const lang: ILanguage = this.translation.getLanguageByCountryCode(\n      countryCode\n    );\n\n    const symbolPosition =\n      (lang.currencySymbolFloat && lang.currencySymbolFloat.toLowerCase()) ||\n      'left';\n    const currencySymbol = lang.currencySymbol || '$';\n\n    const formattedNumber: string = this.formatter.formatNumber(\n      value,\n      lang && lang.decimalNumbersMoney,\n      lang && lang.thousandSeparator,\n      lang && lang.decimalSeparator\n    );\n\n    const numberWithCurrency =\n      symbolPosition === 'left'\n        ? `${currencySymbol}${formattedNumber}`\n        : `${formattedNumber}${currencySymbol}`;\n\n    return '&lrm;' + numberWithCurrency;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\nimport {\n  FormatterService,\n  DateTimeActions\n} from './../services/formatter.service';\nimport { TranslationService } from './../services/translation.service';\n\n@Pipe({\n  name: 'cmxDateMoment',\n  pure: false\n})\nexport class CmxDateMomentPipe implements PipeTransform {\n  constructor(\n    private translationService: TranslationService,\n    private formatterService: FormatterService\n  ) {}\n\n  public transform(\n    dateTime,\n    action: DateTimeActions = DateTimeActions.ConvertToLocal\n  ): string {\n    return this.formatterService.formatDateTimeMoment(\n      dateTime,\n      this.translationService.selectedLanguage.languageISO.replace('_', '-'),\n      this.translationService.selectedLanguage.formatDate,\n      action\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class DateFormatterService {\n  constructor() {\n    //\n  }\n\n  /**\n   * @description Formats a date object to a string given a date format from a language\n   * @param value The date value to format\n   * @param format The format to comply, e.x. DD MM, YYYY\n   * @param daysNames String array of the weekdays' names\n   * @param monthsNames String array of the months' names\n   * @returns String of the formatted date\n   */\n  public format(\n    $value: Date,\n    $format: string,\n    $daysNames: string[],\n    $monthsNames: string[]\n  ): string {\n    let dateAsString = '';\n    let $separator = '/';\n    let day: string;\n    let month: string;\n    let year: string;\n    let $formats = $format.split($separator);\n    if ($formats.length === 1) {\n      $separator = '-';\n      $formats = $format.split($separator);\n    }\n    if ($formats.length === 1) {\n      $separator = ' ';\n      $formats = $format.split($separator);\n    }\n    if ($formats.length === 1) {\n      $separator = '.';\n      $formats = $format.split($separator);\n    }\n    $formats.forEach(($formatItem, $index) => {\n      const $auxValue: any = $value;\n      const $formatCode = $formatItem.replace(',', '');\n      if ($formatItem.includes('d') || $formatItem.includes('D')) {\n        day = this.getDay($auxValue, $formatCode, $daysNames);\n        $formatItem = $formatItem.replace($formatCode, day);\n      } else if ($formatItem.includes('m') || $formatItem.includes('M')) {\n        month = this.getMonth($auxValue, $formatCode, $monthsNames);\n        $formatItem = $formatItem.replace($formatCode, month);\n      } else if ($formatItem.includes('y') || $formatItem.includes('Y')) {\n        year = this.getYear($auxValue, $formatCode);\n        $formatItem = $formatItem.replace($formatCode, year);\n      }\n      if ($index !== $formats.length - 1) {\n        dateAsString += $formatItem + $separator;\n      } else {\n        dateAsString += $formatItem;\n      }\n    });\n    return dateAsString;\n  }\n\n  /**\n   * @description Transforms a valid string to a date object\n   * @param date The date as string\n   * @returns A javascript date object\n   */\n  public getDateObject(date: string): Date {\n    try {\n      const auxDate = date.replace(/-g/, '/');\n      const bits: any = auxDate.split(/\\D/);\n      const month = parseInt(bits[1], undefined) - 1;\n      if (bits.length === 3) {\n        return new Date(bits[0], month, bits[2]);\n      } else {\n        return new Date(bits[0], month, bits[2], bits[3], bits[4], bits[5]);\n      }\n    } catch ($exception) {\n      return undefined;\n    }\n  }\n\n  private addZero($number: number): string {\n    return $number < 10 ? '0' + $number : $number.toString();\n  }\n\n  private getDay($date: Date, $format: string, $daysNames: string[]): string {\n    let day: string;\n    if ($format.length === 4) {\n      // requires the complete name of the day\n      day = $daysNames[$date.getDay()];\n    } else if ($format.length === 3) {\n      // requires an abbreviation of the day's name\n      day = $daysNames[$date.getDay()].substring(0, 3);\n    } else if ($format.length === 2 || $format.length === 1) {\n      // requires the value of the day\n      day = this.addZero($date.getDate());\n    }\n    // check if names should use lower or uppercase\n    if ($format === $format.toLowerCase()) {\n      // the format uses d\n      day = day.toLowerCase();\n    }\n    return day;\n  }\n\n  private getMonth(\n    $date: Date,\n    $format: string,\n    $monthsNames: string[]\n  ): string {\n    let month: string;\n    if ($format.length === 4) {\n      // requires the complete name of the month\n      month = $monthsNames[$date.getMonth()];\n    } else if ($format.length === 3) {\n      // requires an abbreviation of the day's name\n      month = $monthsNames[$date.getMonth()].substring(0, 3);\n    } else if ($format.length === 2) {\n      // requires the value of the day\n      month = this.addZero($date.getMonth() + 1);\n    }\n    // check if names should use lower or uppercase\n    if ($format === $format.toLowerCase()) {\n      // the format uses d\n      month = month.toLowerCase();\n    }\n    return month;\n  }\n\n  private getYear($date: Date, $format: string): string {\n    let year: string;\n    if ($format.length === 4) {\n      // requires the complete year\n      year = '' + $date.getFullYear();\n    } else {\n      // requires only the last 2 numbers of the year value\n      year = '' + $date.getFullYear();\n      year = year.substring(2);\n    }\n    return year;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { ILanguage } from './../interfaces/language.interface';\nimport { DateFormatterService } from './../services/date-formatter.service';\nimport { TranslationService } from './../services/translation.service';\n\n@Pipe({\n  name: 'cmxDate',\n  pure: true\n})\nexport class CmxDatePipe implements PipeTransform {\n  private value = '';\n  private monthsNames: string[] = [];\n  private daysNames: string[] = [];\n\n  constructor(\n    private translation: TranslationService,\n    private dateFormatter: DateFormatterService\n  ) {}\n\n  public transform(\n    $value: Date | string | number,\n    $countryCode?: string\n  ): string {\n    try {\n      if (typeof $value === 'number') {\n        $value = new Date($value);\n      }\n      if (typeof $value === 'string') {\n        $value = this.dateFormatter.getDateObject($value);\n      }\n      if ($countryCode === undefined || $countryCode === null) {\n        $countryCode = sessionStorage.getItem('country');\n      }\n      if ($value !== undefined && $value instanceof Date) {\n        const $currentLanguage: string = localStorage.getItem('language');\n        const $lang: ILanguage = this.translation.getLanguage(\n          $currentLanguage ? $currentLanguage : 'en_US'\n        );\n        this.daysNames = $lang.dayNames.split(',');\n        this.monthsNames = $lang.monthNames.split(',');\n        this.value = this.dateFormatter.format(\n          $value,\n          $lang.formatDate,\n          this.daysNames,\n          this.monthsNames\n        );\n      } else {\n        console.error('Date trying to transform: ', $value);\n        this.value = '';\n      }\n    } catch ($exception) {\n      console.error('Date trying to transform: ', $value);\n      console.error($exception);\n      this.value = '';\n    }\n    return this.value;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\nimport {\n  DateTimeActions,\n  FormatterService\n} from './../services/formatter.service';\nimport { TranslationService } from './../services/translation.service';\n\n@Pipe({\n  name: 'cmxDateTimeMoment',\n  pure: false\n})\nexport class CmxDateTimeMomentPipe implements PipeTransform {\n  constructor(\n    private translationService: TranslationService,\n    private formatterService: FormatterService\n  ) {}\n\n  public transform(\n    dateTime,\n    action: DateTimeActions = DateTimeActions.ConvertToLocal\n  ): string {\n    return this.formatterService.formatDateTimeMoment(\n      dateTime,\n      this.translationService.selectedLanguage.languageISO.replace('_', '-'),\n      this.translationService.selectedLanguage.formatDate +\n        ' ' +\n        this.translationService.selectedLanguage.formatTime,\n      action\n    );\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\nimport { FormatterService } from './../services/formatter.service';\nimport { TranslationService } from './../services/translation.service';\n\n@Pipe({\n  name: 'cmxNumber',\n  pure: false\n})\nexport class CmxNumberPipe implements PipeTransform {\n  constructor(\n    private translationService: TranslationService,\n    private formatterService: FormatterService\n  ) {}\n\n  public transform(numberEntry) {\n    return this.formatterService.formatNumberTS(\n      numberEntry,\n      this.translationService.selectedLanguage.languageISO.replace('_', '-'),\n      this.translationService.selectedLanguage.decimalNumbers\n    );\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\nimport {\n  DateTimeActions,\n  FormatterService\n} from './../services/formatter.service';\nimport { TranslationService } from './../services/translation.service';\n\n@Pipe({\n  name: 'cmxTimeMoment',\n  pure: false\n})\nexport class CmxTimeMomentPipe implements PipeTransform {\n  constructor(\n    private translationService: TranslationService,\n    private formatterService: FormatterService\n  ) {}\n\n  public transform(\n    dateTime,\n    action: DateTimeActions = DateTimeActions.ConvertToLocal\n  ): string {\n    return this.formatterService.formatDateTimeMoment(\n      dateTime,\n      this.translationService.selectedLanguage.languageISO.replace('_', '-'),\n      this.translationService.selectedLanguage.formatTime,\n      action\n    );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { CmxCurrencyCustomPipe } from './pipes/cmx-currency-custom.pipe';\nimport { CmxCurrencyPipe } from './pipes/cmx-currency.pipe';\nimport { CmxDateMomentPipe } from './pipes/cmx-date-moment.pipe';\nimport { CmxDatePipe } from './pipes/cmx-date.pipe';\nimport { CmxDateTimeMomentPipe } from './pipes/cmx-date-time-moment.pipe';\nimport { CmxNumberPipe } from './pipes/cmx-number.pipe';\nimport { CmxTimeMomentPipe } from './pipes/cmx-time-moment.pipe';\n\n@NgModule({\n  declarations: [\n    CmxCurrencyCustomPipe,\n    CmxCurrencyPipe,\n    CmxDateMomentPipe,\n    CmxDatePipe,\n    CmxDateTimeMomentPipe,\n    CmxNumberPipe,\n    CmxTimeMomentPipe\n  ],\n  exports: [\n    CmxCurrencyCustomPipe,\n    CmxCurrencyPipe,\n    CmxDateMomentPipe,\n    CmxDatePipe,\n    CmxDateTimeMomentPipe,\n    CmxNumberPipe,\n    CmxTimeMomentPipe\n  ],\n  imports: [CommonModule]\n})\nexport class AngularLocalizationModule {}\n","import { Injectable } from '@angular/core';\n\nimport { Observable, Subject } from 'rxjs';\n\nimport { ILanguageDirection } from '../interfaces/languageDirection.interface';\nimport { TranslationService } from './translation.service';\n\n@Injectable()\nexport class DirectionService implements ILanguageDirection {\n  private direction$: Subject<string> = new Subject();\n  private rtl$: Subject<boolean> = new Subject();\n\n  constructor(private translation: TranslationService) {\n    this.translation.getSelectedLanguage().subscribe((language: any) => {\n      this.direction$.next(language.direction);\n      this.rtl$.next(language.rtl);\n    });\n  }\n\n  public getDirection(): Observable<string> {\n    return this.direction$.asObservable();\n  }\n\n  public getRTL(): Observable<boolean> {\n    return this.rtl$.asObservable();\n  }\n\n  public getDirectionFor(languageCode: string) {\n    const language = this.translation.getLanguage(\n      languageCode.split(/[-_]/)[0]\n    );\n    this.direction$.next(language.dir);\n  }\n\n  public getRtlFor(languageCode: string) {\n    const language = this.translation.getLanguage(\n      languageCode.split(/[-_]/)[0]\n    );\n    this.rtl$.next(language.rtl);\n  }\n}\n","// Temporal service.\n// This be will replace by language config data.\n\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class LocaleService {\n  constructor() {\n    // empty\n  }\n\n  public getConfiguration(languageISO) {\n    switch (languageISO) {\n      case 'en':\n        return {\n          hourShort: 'hr',\n          minuteShort: 'min',\n          monthsShort: 'Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec',\n          secondShort: 'sec',\n          weekdaysMin: 'Su,Mo,Tu,We,Th,Fr,Sa',\n          weekdaysShort: 'Sun,Mon,Tue,Wed,Thu,Fri,Sat'\n        };\n      case 'es':\n        return {\n          hourShort: 'hr',\n          minuteShort: 'min',\n          monthsShort: 'Ene,Feb,Mar,Abr,May,Jun,Jul,Ago,Sep,Oct,Nov,Dic',\n          secondShort: 'seg',\n          weekdaysMin: 'Do,Lu,Ma,Mi,Ju,Vi,SÃ¡',\n          weekdaysShort: 'Dom,Lun,Mar,MiÃ©,Jue,Vie,SÃ¡b'\n        };\n      case 'fr':\n        return {\n          hourShort: 'h',\n          minuteShort: 'min',\n          monthsShort: 'Janv,FÃ©vr,Mars,Avr,Mai,Juin,Juil,AoÃ»t,Sept,Oct,Nov,DÃ©c',\n          secondShort: 'sec',\n          weekdaysMin: 'Di,Lu,Ma,Me,Je,Ve,Sa',\n          weekdaysShort: 'Dim,Lun,Mar,Mer,Jeu,Ven,Sam'\n        };\n      case 'de':\n        return {\n          hourShort: 'Std.',\n          minuteShort: 'Min.',\n          monthsShort: 'Jan,Febr,Mrz,Apr,Mai,Jun,Jul,Aug,Sept,Okt,Nov,Dez',\n          secondShort: 'Sekunde',\n          weekdaysMin: 'So,Mo,Di,Mi,Do,Fr,Sa',\n          weekdaysShort: 'So,Mo,Di,Mi,Do,Fr,Sa'\n        };\n      case 'he':\n        return {\n          hourShort: '×©×¢×',\n          minuteShort: '××§××ª',\n          monthsShort:\n            '×× ××³,×¤××¨×³,××¨×¥,××¤×¨×³,×××,××× ×,××××,××××³,×¡×¤××³,×××§×³,× ×××³,××¦××³',\n          secondShort: '×©× ×××',\n          weekdaysMin: '×,×,×,×,×,×,×©',\n          weekdaysShort: '××³,××³,××³,××³,××³,××³,×©×³'\n        };\n      case 'pl':\n        return {\n          hourShort: 'h',\n          minuteShort: 'min',\n          monthsShort: 'Sty,Lut,Mar,Kwi,Maj,Cze,Lip,Sie,Wrz,PaÅº,Lis,Gru',\n          secondShort: 's',\n          weekdaysMin: 'Nd,Pn,Wt,År,Cz,Pt,So',\n          weekdaysShort: 'Ndz,Pon,Wt,År,Czw,Pt,Sob'\n        };\n      default:\n        return {\n          hourShort: 'hr',\n          minuteShort: 'min',\n          monthsShort: 'Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec',\n          secondShort: 'sec',\n          weekdaysMin: 'Su,Mo,Tu,We,Th,Fr,Sa',\n          weekdaysShort: 'Sun,Mon,Tue,Wed,Thu,Fri,Sat'\n        };\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  Resolve,\n  RouterStateSnapshot\n} from '@angular/router';\n\nimport { Observable } from 'rxjs';\n\nimport { TranslationService } from './../services/translation.service';\n\n@Injectable()\nexport class TranslationResolver implements Resolve<boolean> {\n  constructor(private translationService: TranslationService) {}\n\n  public resolve(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<boolean> {\n    return this.translationService.languageLoaded;\n  }\n}\n"],"names":["ReplaySubject","tslib_1.__values","Injectable","HttpClient","Inject","Optional","Pipe","isPlatformBrowser","PLATFORM_ID","NgModule","CommonModule","Subject"],"mappings":"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"}
