/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Pipe } from '@angular/core';
import { DateTimeActions, FormatterService } from './../services/formatter.service';
import { TranslationService } from './../services/translation.service';
var CmxTimeMomentPipe = /** @class */ (function () {
    function CmxTimeMomentPipe(translationService, formatterService) {
        this.translationService = translationService;
        this.formatterService = formatterService;
    }
    /**
     * @param {?} dateTime
     * @param {?=} action
     * @return {?}
     */
    CmxTimeMomentPipe.prototype.transform = /**
     * @param {?} dateTime
     * @param {?=} action
     * @return {?}
     */
    function (dateTime, action) {
        if (action === void 0) { action = DateTimeActions.ConvertToLocal; }
        return this.formatterService.formatDateTimeMoment(dateTime, this.translationService.selectedLanguage.languageISO.replace('_', '-'), this.translationService.selectedLanguage.formatTime, action);
    };
    CmxTimeMomentPipe.decorators = [
        { type: Pipe, args: [{
                    name: 'cmxTimeMoment',
                    pure: false
                },] }
    ];
    /** @nocollapse */
    CmxTimeMomentPipe.ctorParameters = function () { return [
        { type: TranslationService },
        { type: FormatterService }
    ]; };
    return CmxTimeMomentPipe;
}());
export { CmxTimeMomentPipe };
if (false) {
    /**
     * @type {?}
     * @private
     */
    CmxTimeMomentPipe.prototype.translationService;
    /**
     * @type {?}
     * @private
     */
    CmxTimeMomentPipe.prototype.formatterService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY214LXRpbWUtbW9tZW50LnBpcGUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AY2VtZXgtY29yZS9hbmd1bGFyLWxvY2FsaXphdGlvbi12Ny8iLCJzb3VyY2VzIjpbImxpYi9waXBlcy9jbXgtdGltZS1tb21lbnQucGlwZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLElBQUksRUFBaUIsTUFBTSxlQUFlLENBQUM7QUFFcEQsT0FBTyxFQUNMLGVBQWUsRUFDZixnQkFBZ0IsRUFDakIsTUFBTSxpQ0FBaUMsQ0FBQztBQUN6QyxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSxtQ0FBbUMsQ0FBQztBQUV2RTtJQUtFLDJCQUNVLGtCQUFzQyxFQUN0QyxnQkFBa0M7UUFEbEMsdUJBQWtCLEdBQWxCLGtCQUFrQixDQUFvQjtRQUN0QyxxQkFBZ0IsR0FBaEIsZ0JBQWdCLENBQWtCO0lBQ3pDLENBQUM7Ozs7OztJQUVHLHFDQUFTOzs7OztJQUFoQixVQUNFLFFBQVEsRUFDUixNQUF3RDtRQUF4RCx1QkFBQSxFQUFBLFNBQTBCLGVBQWUsQ0FBQyxjQUFjO1FBRXhELE9BQU8sSUFBSSxDQUFDLGdCQUFnQixDQUFDLG9CQUFvQixDQUMvQyxRQUFRLEVBQ1IsSUFBSSxDQUFDLGtCQUFrQixDQUFDLGdCQUFnQixDQUFDLFdBQVcsQ0FBQyxPQUFPLENBQUMsR0FBRyxFQUFFLEdBQUcsQ0FBQyxFQUN0RSxJQUFJLENBQUMsa0JBQWtCLENBQUMsZ0JBQWdCLENBQUMsVUFBVSxFQUNuRCxNQUFNLENBQ1AsQ0FBQztJQUNKLENBQUM7O2dCQXBCRixJQUFJLFNBQUM7b0JBQ0osSUFBSSxFQUFFLGVBQWU7b0JBQ3JCLElBQUksRUFBRSxLQUFLO2lCQUNaOzs7O2dCQUxRLGtCQUFrQjtnQkFGekIsZ0JBQWdCOztJQXlCbEIsd0JBQUM7Q0FBQSxBQXJCRCxJQXFCQztTQWpCWSxpQkFBaUI7Ozs7OztJQUUxQiwrQ0FBOEM7Ozs7O0lBQzlDLDZDQUEwQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFBpcGUsIFBpcGVUcmFuc2Zvcm0gfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHtcbiAgRGF0ZVRpbWVBY3Rpb25zLFxuICBGb3JtYXR0ZXJTZXJ2aWNlXG59IGZyb20gJy4vLi4vc2VydmljZXMvZm9ybWF0dGVyLnNlcnZpY2UnO1xuaW1wb3J0IHsgVHJhbnNsYXRpb25TZXJ2aWNlIH0gZnJvbSAnLi8uLi9zZXJ2aWNlcy90cmFuc2xhdGlvbi5zZXJ2aWNlJztcblxuQFBpcGUoe1xuICBuYW1lOiAnY214VGltZU1vbWVudCcsXG4gIHB1cmU6IGZhbHNlXG59KVxuZXhwb3J0IGNsYXNzIENteFRpbWVNb21lbnRQaXBlIGltcGxlbWVudHMgUGlwZVRyYW5zZm9ybSB7XG4gIGNvbnN0cnVjdG9yKFxuICAgIHByaXZhdGUgdHJhbnNsYXRpb25TZXJ2aWNlOiBUcmFuc2xhdGlvblNlcnZpY2UsXG4gICAgcHJpdmF0ZSBmb3JtYXR0ZXJTZXJ2aWNlOiBGb3JtYXR0ZXJTZXJ2aWNlXG4gICkge31cblxuICBwdWJsaWMgdHJhbnNmb3JtKFxuICAgIGRhdGVUaW1lLFxuICAgIGFjdGlvbjogRGF0ZVRpbWVBY3Rpb25zID0gRGF0ZVRpbWVBY3Rpb25zLkNvbnZlcnRUb0xvY2FsXG4gICk6IHN0cmluZyB7XG4gICAgcmV0dXJuIHRoaXMuZm9ybWF0dGVyU2VydmljZS5mb3JtYXREYXRlVGltZU1vbWVudChcbiAgICAgIGRhdGVUaW1lLFxuICAgICAgdGhpcy50cmFuc2xhdGlvblNlcnZpY2Uuc2VsZWN0ZWRMYW5ndWFnZS5sYW5ndWFnZUlTTy5yZXBsYWNlKCdfJywgJy0nKSxcbiAgICAgIHRoaXMudHJhbnNsYXRpb25TZXJ2aWNlLnNlbGVjdGVkTGFuZ3VhZ2UuZm9ybWF0VGltZSxcbiAgICAgIGFjdGlvblxuICAgICk7XG4gIH1cbn1cbiJdfQ==