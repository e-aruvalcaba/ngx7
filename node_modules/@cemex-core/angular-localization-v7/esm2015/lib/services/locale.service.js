/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
// Temporal service.
// This be will replace by language config data.
import { Injectable } from '@angular/core';
export class LocaleService {
    constructor() {
        // empty
    }
    /**
     * @param {?} languageISO
     * @return {?}
     */
    getConfiguration(languageISO) {
        switch (languageISO) {
            case 'en':
                return {
                    hourShort: 'hr',
                    minuteShort: 'min',
                    monthsShort: 'Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec',
                    secondShort: 'sec',
                    weekdaysMin: 'Su,Mo,Tu,We,Th,Fr,Sa',
                    weekdaysShort: 'Sun,Mon,Tue,Wed,Thu,Fri,Sat'
                };
            case 'es':
                return {
                    hourShort: 'hr',
                    minuteShort: 'min',
                    monthsShort: 'Ene,Feb,Mar,Abr,May,Jun,Jul,Ago,Sep,Oct,Nov,Dic',
                    secondShort: 'seg',
                    weekdaysMin: 'Do,Lu,Ma,Mi,Ju,Vi,Sá',
                    weekdaysShort: 'Dom,Lun,Mar,Mié,Jue,Vie,Sáb'
                };
            case 'fr':
                return {
                    hourShort: 'h',
                    minuteShort: 'min',
                    monthsShort: 'Janv,Févr,Mars,Avr,Mai,Juin,Juil,Août,Sept,Oct,Nov,Déc',
                    secondShort: 'sec',
                    weekdaysMin: 'Di,Lu,Ma,Me,Je,Ve,Sa',
                    weekdaysShort: 'Dim,Lun,Mar,Mer,Jeu,Ven,Sam'
                };
            case 'de':
                return {
                    hourShort: 'Std.',
                    minuteShort: 'Min.',
                    monthsShort: 'Jan,Febr,Mrz,Apr,Mai,Jun,Jul,Aug,Sept,Okt,Nov,Dez',
                    secondShort: 'Sekunde',
                    weekdaysMin: 'So,Mo,Di,Mi,Do,Fr,Sa',
                    weekdaysShort: 'So,Mo,Di,Mi,Do,Fr,Sa'
                };
            case 'he':
                return {
                    hourShort: 'שעה',
                    minuteShort: 'דקות',
                    monthsShort: 'ינו׳,פבר׳,מרץ,אפר׳,מאי,יוני,יולי,אוג׳,ספט׳,אוק׳,נוב׳,דצמ׳',
                    secondShort: 'שנייה',
                    weekdaysMin: 'א,ב,ג,ד,ה,ו,ש',
                    weekdaysShort: 'א׳,ב׳,ג׳,ד׳,ה׳,ו׳,ש׳'
                };
            case 'pl':
                return {
                    hourShort: 'h',
                    minuteShort: 'min',
                    monthsShort: 'Sty,Lut,Mar,Kwi,Maj,Cze,Lip,Sie,Wrz,Paź,Lis,Gru',
                    secondShort: 's',
                    weekdaysMin: 'Nd,Pn,Wt,Śr,Cz,Pt,So',
                    weekdaysShort: 'Ndz,Pon,Wt,Śr,Czw,Pt,Sob'
                };
            default:
                return {
                    hourShort: 'hr',
                    minuteShort: 'min',
                    monthsShort: 'Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec',
                    secondShort: 'sec',
                    weekdaysMin: 'Su,Mo,Tu,We,Th,Fr,Sa',
                    weekdaysShort: 'Sun,Mon,Tue,Wed,Thu,Fri,Sat'
                };
        }
    }
}
LocaleService.decorators = [
    { type: Injectable }
];
/** @nocollapse */
LocaleService.ctorParameters = () => [];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9jYWxlLnNlcnZpY2UuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AY2VtZXgtY29yZS9hbmd1bGFyLWxvY2FsaXphdGlvbi12Ny8iLCJzb3VyY2VzIjpbImxpYi9zZXJ2aWNlcy9sb2NhbGUuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7QUFHQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRzNDLE1BQU0sT0FBTyxhQUFhO0lBQ3hCO1FBQ0UsUUFBUTtJQUNWLENBQUM7Ozs7O0lBRU0sZ0JBQWdCLENBQUMsV0FBVztRQUNqQyxRQUFRLFdBQVcsRUFBRTtZQUNuQixLQUFLLElBQUk7Z0JBQ1AsT0FBTztvQkFDTCxTQUFTLEVBQUUsSUFBSTtvQkFDZixXQUFXLEVBQUUsS0FBSztvQkFDbEIsV0FBVyxFQUFFLGlEQUFpRDtvQkFDOUQsV0FBVyxFQUFFLEtBQUs7b0JBQ2xCLFdBQVcsRUFBRSxzQkFBc0I7b0JBQ25DLGFBQWEsRUFBRSw2QkFBNkI7aUJBQzdDLENBQUM7WUFDSixLQUFLLElBQUk7Z0JBQ1AsT0FBTztvQkFDTCxTQUFTLEVBQUUsSUFBSTtvQkFDZixXQUFXLEVBQUUsS0FBSztvQkFDbEIsV0FBVyxFQUFFLGlEQUFpRDtvQkFDOUQsV0FBVyxFQUFFLEtBQUs7b0JBQ2xCLFdBQVcsRUFBRSxzQkFBc0I7b0JBQ25DLGFBQWEsRUFBRSw2QkFBNkI7aUJBQzdDLENBQUM7WUFDSixLQUFLLElBQUk7Z0JBQ1AsT0FBTztvQkFDTCxTQUFTLEVBQUUsR0FBRztvQkFDZCxXQUFXLEVBQUUsS0FBSztvQkFDbEIsV0FBVyxFQUFFLHdEQUF3RDtvQkFDckUsV0FBVyxFQUFFLEtBQUs7b0JBQ2xCLFdBQVcsRUFBRSxzQkFBc0I7b0JBQ25DLGFBQWEsRUFBRSw2QkFBNkI7aUJBQzdDLENBQUM7WUFDSixLQUFLLElBQUk7Z0JBQ1AsT0FBTztvQkFDTCxTQUFTLEVBQUUsTUFBTTtvQkFDakIsV0FBVyxFQUFFLE1BQU07b0JBQ25CLFdBQVcsRUFBRSxtREFBbUQ7b0JBQ2hFLFdBQVcsRUFBRSxTQUFTO29CQUN0QixXQUFXLEVBQUUsc0JBQXNCO29CQUNuQyxhQUFhLEVBQUUsc0JBQXNCO2lCQUN0QyxDQUFDO1lBQ0osS0FBSyxJQUFJO2dCQUNQLE9BQU87b0JBQ0wsU0FBUyxFQUFFLEtBQUs7b0JBQ2hCLFdBQVcsRUFBRSxNQUFNO29CQUNuQixXQUFXLEVBQ1QsMkRBQTJEO29CQUM3RCxXQUFXLEVBQUUsT0FBTztvQkFDcEIsV0FBVyxFQUFFLGVBQWU7b0JBQzVCLGFBQWEsRUFBRSxzQkFBc0I7aUJBQ3RDLENBQUM7WUFDSixLQUFLLElBQUk7Z0JBQ1AsT0FBTztvQkFDTCxTQUFTLEVBQUUsR0FBRztvQkFDZCxXQUFXLEVBQUUsS0FBSztvQkFDbEIsV0FBVyxFQUFFLGlEQUFpRDtvQkFDOUQsV0FBVyxFQUFFLEdBQUc7b0JBQ2hCLFdBQVcsRUFBRSxzQkFBc0I7b0JBQ25DLGFBQWEsRUFBRSwwQkFBMEI7aUJBQzFDLENBQUM7WUFDSjtnQkFDRSxPQUFPO29CQUNMLFNBQVMsRUFBRSxJQUFJO29CQUNmLFdBQVcsRUFBRSxLQUFLO29CQUNsQixXQUFXLEVBQUUsaURBQWlEO29CQUM5RCxXQUFXLEVBQUUsS0FBSztvQkFDbEIsV0FBVyxFQUFFLHNCQUFzQjtvQkFDbkMsYUFBYSxFQUFFLDZCQUE2QjtpQkFDN0MsQ0FBQztTQUNMO0lBQ0gsQ0FBQzs7O1lBekVGLFVBQVUiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBUZW1wb3JhbCBzZXJ2aWNlLlxuLy8gVGhpcyBiZSB3aWxsIHJlcGxhY2UgYnkgbGFuZ3VhZ2UgY29uZmlnIGRhdGEuXG5cbmltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIExvY2FsZVNlcnZpY2Uge1xuICBjb25zdHJ1Y3RvcigpIHtcbiAgICAvLyBlbXB0eVxuICB9XG5cbiAgcHVibGljIGdldENvbmZpZ3VyYXRpb24obGFuZ3VhZ2VJU08pIHtcbiAgICBzd2l0Y2ggKGxhbmd1YWdlSVNPKSB7XG4gICAgICBjYXNlICdlbic6XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgaG91clNob3J0OiAnaHInLFxuICAgICAgICAgIG1pbnV0ZVNob3J0OiAnbWluJyxcbiAgICAgICAgICBtb250aHNTaG9ydDogJ0phbixGZWIsTWFyLEFwcixNYXksSnVuLEp1bCxBdWcsU2VwLE9jdCxOb3YsRGVjJyxcbiAgICAgICAgICBzZWNvbmRTaG9ydDogJ3NlYycsXG4gICAgICAgICAgd2Vla2RheXNNaW46ICdTdSxNbyxUdSxXZSxUaCxGcixTYScsXG4gICAgICAgICAgd2Vla2RheXNTaG9ydDogJ1N1bixNb24sVHVlLFdlZCxUaHUsRnJpLFNhdCdcbiAgICAgICAgfTtcbiAgICAgIGNhc2UgJ2VzJzpcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICBob3VyU2hvcnQ6ICdocicsXG4gICAgICAgICAgbWludXRlU2hvcnQ6ICdtaW4nLFxuICAgICAgICAgIG1vbnRoc1Nob3J0OiAnRW5lLEZlYixNYXIsQWJyLE1heSxKdW4sSnVsLEFnbyxTZXAsT2N0LE5vdixEaWMnLFxuICAgICAgICAgIHNlY29uZFNob3J0OiAnc2VnJyxcbiAgICAgICAgICB3ZWVrZGF5c01pbjogJ0RvLEx1LE1hLE1pLEp1LFZpLFPDoScsXG4gICAgICAgICAgd2Vla2RheXNTaG9ydDogJ0RvbSxMdW4sTWFyLE1pw6ksSnVlLFZpZSxTw6FiJ1xuICAgICAgICB9O1xuICAgICAgY2FzZSAnZnInOlxuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgIGhvdXJTaG9ydDogJ2gnLFxuICAgICAgICAgIG1pbnV0ZVNob3J0OiAnbWluJyxcbiAgICAgICAgICBtb250aHNTaG9ydDogJ0phbnYsRsOpdnIsTWFycyxBdnIsTWFpLEp1aW4sSnVpbCxBb8O7dCxTZXB0LE9jdCxOb3YsRMOpYycsXG4gICAgICAgICAgc2Vjb25kU2hvcnQ6ICdzZWMnLFxuICAgICAgICAgIHdlZWtkYXlzTWluOiAnRGksTHUsTWEsTWUsSmUsVmUsU2EnLFxuICAgICAgICAgIHdlZWtkYXlzU2hvcnQ6ICdEaW0sTHVuLE1hcixNZXIsSmV1LFZlbixTYW0nXG4gICAgICAgIH07XG4gICAgICBjYXNlICdkZSc6XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgaG91clNob3J0OiAnU3RkLicsXG4gICAgICAgICAgbWludXRlU2hvcnQ6ICdNaW4uJyxcbiAgICAgICAgICBtb250aHNTaG9ydDogJ0phbixGZWJyLE1yeixBcHIsTWFpLEp1bixKdWwsQXVnLFNlcHQsT2t0LE5vdixEZXonLFxuICAgICAgICAgIHNlY29uZFNob3J0OiAnU2VrdW5kZScsXG4gICAgICAgICAgd2Vla2RheXNNaW46ICdTbyxNbyxEaSxNaSxEbyxGcixTYScsXG4gICAgICAgICAgd2Vla2RheXNTaG9ydDogJ1NvLE1vLERpLE1pLERvLEZyLFNhJ1xuICAgICAgICB9O1xuICAgICAgY2FzZSAnaGUnOlxuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgIGhvdXJTaG9ydDogJ9ep16LXlCcsXG4gICAgICAgICAgbWludXRlU2hvcnQ6ICfXk9en15XXqicsXG4gICAgICAgICAgbW9udGhzU2hvcnQ6XG4gICAgICAgICAgICAn15nXoNeV17Ms16TXkdeo17Ms157XqNelLNeQ16TXqNezLNee15DXmSzXmdeV16DXmSzXmdeV15zXmSzXkNeV15LXsyzXodek15jXsyzXkNeV16fXsyzXoNeV15HXsyzXk9em157XsycsXG4gICAgICAgICAgc2Vjb25kU2hvcnQ6ICfXqdeg15nXmdeUJyxcbiAgICAgICAgICB3ZWVrZGF5c01pbjogJ9eQLNeRLNeSLNeTLNeULNeVLNepJyxcbiAgICAgICAgICB3ZWVrZGF5c1Nob3J0OiAn15DXsyzXkdezLNeS17Ms15PXsyzXlNezLNeV17Ms16nXsydcbiAgICAgICAgfTtcbiAgICAgIGNhc2UgJ3BsJzpcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICBob3VyU2hvcnQ6ICdoJyxcbiAgICAgICAgICBtaW51dGVTaG9ydDogJ21pbicsXG4gICAgICAgICAgbW9udGhzU2hvcnQ6ICdTdHksTHV0LE1hcixLd2ksTWFqLEN6ZSxMaXAsU2llLFdyeixQYcW6LExpcyxHcnUnLFxuICAgICAgICAgIHNlY29uZFNob3J0OiAncycsXG4gICAgICAgICAgd2Vla2RheXNNaW46ICdOZCxQbixXdCzFmnIsQ3osUHQsU28nLFxuICAgICAgICAgIHdlZWtkYXlzU2hvcnQ6ICdOZHosUG9uLFd0LMWacixDencsUHQsU29iJ1xuICAgICAgICB9O1xuICAgICAgZGVmYXVsdDpcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICBob3VyU2hvcnQ6ICdocicsXG4gICAgICAgICAgbWludXRlU2hvcnQ6ICdtaW4nLFxuICAgICAgICAgIG1vbnRoc1Nob3J0OiAnSmFuLEZlYixNYXIsQXByLE1heSxKdW4sSnVsLEF1ZyxTZXAsT2N0LE5vdixEZWMnLFxuICAgICAgICAgIHNlY29uZFNob3J0OiAnc2VjJyxcbiAgICAgICAgICB3ZWVrZGF5c01pbjogJ1N1LE1vLFR1LFdlLFRoLEZyLFNhJyxcbiAgICAgICAgICB3ZWVrZGF5c1Nob3J0OiAnU3VuLE1vbixUdWUsV2VkLFRodSxGcmksU2F0J1xuICAgICAgICB9O1xuICAgIH1cbiAgfVxufVxuIl19