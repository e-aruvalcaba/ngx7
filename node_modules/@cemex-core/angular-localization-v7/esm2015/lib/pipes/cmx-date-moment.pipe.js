/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Pipe } from '@angular/core';
import { FormatterService, DateTimeActions } from './../services/formatter.service';
import { TranslationService } from './../services/translation.service';
export class CmxDateMomentPipe {
    /**
     * @param {?} translationService
     * @param {?} formatterService
     */
    constructor(translationService, formatterService) {
        this.translationService = translationService;
        this.formatterService = formatterService;
    }
    /**
     * @param {?} dateTime
     * @param {?=} action
     * @return {?}
     */
    transform(dateTime, action = DateTimeActions.ConvertToLocal) {
        return this.formatterService.formatDateTimeMoment(dateTime, this.translationService.selectedLanguage.languageISO.replace('_', '-'), this.translationService.selectedLanguage.formatDate, action);
    }
}
CmxDateMomentPipe.decorators = [
    { type: Pipe, args: [{
                name: 'cmxDateMoment',
                pure: false
            },] }
];
/** @nocollapse */
CmxDateMomentPipe.ctorParameters = () => [
    { type: TranslationService },
    { type: FormatterService }
];
if (false) {
    /**
     * @type {?}
     * @private
     */
    CmxDateMomentPipe.prototype.translationService;
    /**
     * @type {?}
     * @private
     */
    CmxDateMomentPipe.prototype.formatterService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY214LWRhdGUtbW9tZW50LnBpcGUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AY2VtZXgtY29yZS9hbmd1bGFyLWxvY2FsaXphdGlvbi12Ny8iLCJzb3VyY2VzIjpbImxpYi9waXBlcy9jbXgtZGF0ZS1tb21lbnQucGlwZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLElBQUksRUFBaUIsTUFBTSxlQUFlLENBQUM7QUFFcEQsT0FBTyxFQUNMLGdCQUFnQixFQUNoQixlQUFlLEVBQ2hCLE1BQU0saUNBQWlDLENBQUM7QUFDekMsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sbUNBQW1DLENBQUM7QUFNdkUsTUFBTSxPQUFPLGlCQUFpQjs7Ozs7SUFDNUIsWUFDVSxrQkFBc0MsRUFDdEMsZ0JBQWtDO1FBRGxDLHVCQUFrQixHQUFsQixrQkFBa0IsQ0FBb0I7UUFDdEMscUJBQWdCLEdBQWhCLGdCQUFnQixDQUFrQjtJQUN6QyxDQUFDOzs7Ozs7SUFFRyxTQUFTLENBQ2QsUUFBUSxFQUNSLFNBQTBCLGVBQWUsQ0FBQyxjQUFjO1FBRXhELE9BQU8sSUFBSSxDQUFDLGdCQUFnQixDQUFDLG9CQUFvQixDQUMvQyxRQUFRLEVBQ1IsSUFBSSxDQUFDLGtCQUFrQixDQUFDLGdCQUFnQixDQUFDLFdBQVcsQ0FBQyxPQUFPLENBQUMsR0FBRyxFQUFFLEdBQUcsQ0FBQyxFQUN0RSxJQUFJLENBQUMsa0JBQWtCLENBQUMsZ0JBQWdCLENBQUMsVUFBVSxFQUNuRCxNQUFNLENBQ1AsQ0FBQztJQUNKLENBQUM7OztZQXBCRixJQUFJLFNBQUM7Z0JBQ0osSUFBSSxFQUFFLGVBQWU7Z0JBQ3JCLElBQUksRUFBRSxLQUFLO2FBQ1o7Ozs7WUFMUSxrQkFBa0I7WUFIekIsZ0JBQWdCOzs7Ozs7O0lBV2QsK0NBQThDOzs7OztJQUM5Qyw2Q0FBMEMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQaXBlLCBQaXBlVHJhbnNmb3JtIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7XG4gIEZvcm1hdHRlclNlcnZpY2UsXG4gIERhdGVUaW1lQWN0aW9uc1xufSBmcm9tICcuLy4uL3NlcnZpY2VzL2Zvcm1hdHRlci5zZXJ2aWNlJztcbmltcG9ydCB7IFRyYW5zbGF0aW9uU2VydmljZSB9IGZyb20gJy4vLi4vc2VydmljZXMvdHJhbnNsYXRpb24uc2VydmljZSc7XG5cbkBQaXBlKHtcbiAgbmFtZTogJ2NteERhdGVNb21lbnQnLFxuICBwdXJlOiBmYWxzZVxufSlcbmV4cG9ydCBjbGFzcyBDbXhEYXRlTW9tZW50UGlwZSBpbXBsZW1lbnRzIFBpcGVUcmFuc2Zvcm0ge1xuICBjb25zdHJ1Y3RvcihcbiAgICBwcml2YXRlIHRyYW5zbGF0aW9uU2VydmljZTogVHJhbnNsYXRpb25TZXJ2aWNlLFxuICAgIHByaXZhdGUgZm9ybWF0dGVyU2VydmljZTogRm9ybWF0dGVyU2VydmljZVxuICApIHt9XG5cbiAgcHVibGljIHRyYW5zZm9ybShcbiAgICBkYXRlVGltZSxcbiAgICBhY3Rpb246IERhdGVUaW1lQWN0aW9ucyA9IERhdGVUaW1lQWN0aW9ucy5Db252ZXJ0VG9Mb2NhbFxuICApOiBzdHJpbmcge1xuICAgIHJldHVybiB0aGlzLmZvcm1hdHRlclNlcnZpY2UuZm9ybWF0RGF0ZVRpbWVNb21lbnQoXG4gICAgICBkYXRlVGltZSxcbiAgICAgIHRoaXMudHJhbnNsYXRpb25TZXJ2aWNlLnNlbGVjdGVkTGFuZ3VhZ2UubGFuZ3VhZ2VJU08ucmVwbGFjZSgnXycsICctJyksXG4gICAgICB0aGlzLnRyYW5zbGF0aW9uU2VydmljZS5zZWxlY3RlZExhbmd1YWdlLmZvcm1hdERhdGUsXG4gICAgICBhY3Rpb25cbiAgICApO1xuICB9XG59XG4iXX0=