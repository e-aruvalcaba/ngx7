/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Pipe } from '@angular/core';
import { DateTimeActions, FormatterService } from './../services/formatter.service';
import { TranslationService } from './../services/translation.service';
export class CmxDateTimeMomentPipe {
    /**
     * @param {?} translationService
     * @param {?} formatterService
     */
    constructor(translationService, formatterService) {
        this.translationService = translationService;
        this.formatterService = formatterService;
    }
    /**
     * @param {?} dateTime
     * @param {?=} action
     * @return {?}
     */
    transform(dateTime, action = DateTimeActions.ConvertToLocal) {
        return this.formatterService.formatDateTimeMoment(dateTime, this.translationService.selectedLanguage.languageISO.replace('_', '-'), this.translationService.selectedLanguage.formatDate +
            ' ' +
            this.translationService.selectedLanguage.formatTime, action);
    }
}
CmxDateTimeMomentPipe.decorators = [
    { type: Pipe, args: [{
                name: 'cmxDateTimeMoment',
                pure: false
            },] }
];
/** @nocollapse */
CmxDateTimeMomentPipe.ctorParameters = () => [
    { type: TranslationService },
    { type: FormatterService }
];
if (false) {
    /**
     * @type {?}
     * @private
     */
    CmxDateTimeMomentPipe.prototype.translationService;
    /**
     * @type {?}
     * @private
     */
    CmxDateTimeMomentPipe.prototype.formatterService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY214LWRhdGUtdGltZS1tb21lbnQucGlwZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BjZW1leC1jb3JlL2FuZ3VsYXItbG9jYWxpemF0aW9uLXY3LyIsInNvdXJjZXMiOlsibGliL3BpcGVzL2NteC1kYXRlLXRpbWUtbW9tZW50LnBpcGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxJQUFJLEVBQWlCLE1BQU0sZUFBZSxDQUFDO0FBRXBELE9BQU8sRUFDTCxlQUFlLEVBQ2YsZ0JBQWdCLEVBQ2pCLE1BQU0saUNBQWlDLENBQUM7QUFDekMsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sbUNBQW1DLENBQUM7QUFNdkUsTUFBTSxPQUFPLHFCQUFxQjs7Ozs7SUFDaEMsWUFDVSxrQkFBc0MsRUFDdEMsZ0JBQWtDO1FBRGxDLHVCQUFrQixHQUFsQixrQkFBa0IsQ0FBb0I7UUFDdEMscUJBQWdCLEdBQWhCLGdCQUFnQixDQUFrQjtJQUN6QyxDQUFDOzs7Ozs7SUFFRyxTQUFTLENBQ2QsUUFBUSxFQUNSLFNBQTBCLGVBQWUsQ0FBQyxjQUFjO1FBRXhELE9BQU8sSUFBSSxDQUFDLGdCQUFnQixDQUFDLG9CQUFvQixDQUMvQyxRQUFRLEVBQ1IsSUFBSSxDQUFDLGtCQUFrQixDQUFDLGdCQUFnQixDQUFDLFdBQVcsQ0FBQyxPQUFPLENBQUMsR0FBRyxFQUFFLEdBQUcsQ0FBQyxFQUN0RSxJQUFJLENBQUMsa0JBQWtCLENBQUMsZ0JBQWdCLENBQUMsVUFBVTtZQUNqRCxHQUFHO1lBQ0gsSUFBSSxDQUFDLGtCQUFrQixDQUFDLGdCQUFnQixDQUFDLFVBQVUsRUFDckQsTUFBTSxDQUNQLENBQUM7SUFDSixDQUFDOzs7WUF0QkYsSUFBSSxTQUFDO2dCQUNKLElBQUksRUFBRSxtQkFBbUI7Z0JBQ3pCLElBQUksRUFBRSxLQUFLO2FBQ1o7Ozs7WUFMUSxrQkFBa0I7WUFGekIsZ0JBQWdCOzs7Ozs7O0lBVWQsbURBQThDOzs7OztJQUM5QyxpREFBMEMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQaXBlLCBQaXBlVHJhbnNmb3JtIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7XG4gIERhdGVUaW1lQWN0aW9ucyxcbiAgRm9ybWF0dGVyU2VydmljZVxufSBmcm9tICcuLy4uL3NlcnZpY2VzL2Zvcm1hdHRlci5zZXJ2aWNlJztcbmltcG9ydCB7IFRyYW5zbGF0aW9uU2VydmljZSB9IGZyb20gJy4vLi4vc2VydmljZXMvdHJhbnNsYXRpb24uc2VydmljZSc7XG5cbkBQaXBlKHtcbiAgbmFtZTogJ2NteERhdGVUaW1lTW9tZW50JyxcbiAgcHVyZTogZmFsc2Vcbn0pXG5leHBvcnQgY2xhc3MgQ214RGF0ZVRpbWVNb21lbnRQaXBlIGltcGxlbWVudHMgUGlwZVRyYW5zZm9ybSB7XG4gIGNvbnN0cnVjdG9yKFxuICAgIHByaXZhdGUgdHJhbnNsYXRpb25TZXJ2aWNlOiBUcmFuc2xhdGlvblNlcnZpY2UsXG4gICAgcHJpdmF0ZSBmb3JtYXR0ZXJTZXJ2aWNlOiBGb3JtYXR0ZXJTZXJ2aWNlXG4gICkge31cblxuICBwdWJsaWMgdHJhbnNmb3JtKFxuICAgIGRhdGVUaW1lLFxuICAgIGFjdGlvbjogRGF0ZVRpbWVBY3Rpb25zID0gRGF0ZVRpbWVBY3Rpb25zLkNvbnZlcnRUb0xvY2FsXG4gICk6IHN0cmluZyB7XG4gICAgcmV0dXJuIHRoaXMuZm9ybWF0dGVyU2VydmljZS5mb3JtYXREYXRlVGltZU1vbWVudChcbiAgICAgIGRhdGVUaW1lLFxuICAgICAgdGhpcy50cmFuc2xhdGlvblNlcnZpY2Uuc2VsZWN0ZWRMYW5ndWFnZS5sYW5ndWFnZUlTTy5yZXBsYWNlKCdfJywgJy0nKSxcbiAgICAgIHRoaXMudHJhbnNsYXRpb25TZXJ2aWNlLnNlbGVjdGVkTGFuZ3VhZ2UuZm9ybWF0RGF0ZSArXG4gICAgICAgICcgJyArXG4gICAgICAgIHRoaXMudHJhbnNsYXRpb25TZXJ2aWNlLnNlbGVjdGVkTGFuZ3VhZ2UuZm9ybWF0VGltZSxcbiAgICAgIGFjdGlvblxuICAgICk7XG4gIH1cbn1cbiJdfQ==