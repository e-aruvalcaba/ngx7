/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Pipe } from '@angular/core';
import { DateTimeActions, FormatterService } from './../services/formatter.service';
import { TranslationService } from './../services/translation.service';
export class CmxTimeMomentPipe {
    /**
     * @param {?} translationService
     * @param {?} formatterService
     */
    constructor(translationService, formatterService) {
        this.translationService = translationService;
        this.formatterService = formatterService;
    }
    /**
     * @param {?} dateTime
     * @param {?=} action
     * @return {?}
     */
    transform(dateTime, action = DateTimeActions.ConvertToLocal) {
        return this.formatterService.formatDateTimeMoment(dateTime, this.translationService.selectedLanguage.languageISO.replace('_', '-'), this.translationService.selectedLanguage.formatTime, action);
    }
}
CmxTimeMomentPipe.decorators = [
    { type: Pipe, args: [{
                name: 'cmxTimeMoment',
                pure: false
            },] }
];
/** @nocollapse */
CmxTimeMomentPipe.ctorParameters = () => [
    { type: TranslationService },
    { type: FormatterService }
];
if (false) {
    /**
     * @type {?}
     * @private
     */
    CmxTimeMomentPipe.prototype.translationService;
    /**
     * @type {?}
     * @private
     */
    CmxTimeMomentPipe.prototype.formatterService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY214LXRpbWUtbW9tZW50LnBpcGUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AY2VtZXgtY29yZS9hbmd1bGFyLWxvY2FsaXphdGlvbi12Ny8iLCJzb3VyY2VzIjpbImxpYi9waXBlcy9jbXgtdGltZS1tb21lbnQucGlwZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLElBQUksRUFBaUIsTUFBTSxlQUFlLENBQUM7QUFFcEQsT0FBTyxFQUNMLGVBQWUsRUFDZixnQkFBZ0IsRUFDakIsTUFBTSxpQ0FBaUMsQ0FBQztBQUN6QyxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSxtQ0FBbUMsQ0FBQztBQU12RSxNQUFNLE9BQU8saUJBQWlCOzs7OztJQUM1QixZQUNVLGtCQUFzQyxFQUN0QyxnQkFBa0M7UUFEbEMsdUJBQWtCLEdBQWxCLGtCQUFrQixDQUFvQjtRQUN0QyxxQkFBZ0IsR0FBaEIsZ0JBQWdCLENBQWtCO0lBQ3pDLENBQUM7Ozs7OztJQUVHLFNBQVMsQ0FDZCxRQUFRLEVBQ1IsU0FBMEIsZUFBZSxDQUFDLGNBQWM7UUFFeEQsT0FBTyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsb0JBQW9CLENBQy9DLFFBQVEsRUFDUixJQUFJLENBQUMsa0JBQWtCLENBQUMsZ0JBQWdCLENBQUMsV0FBVyxDQUFDLE9BQU8sQ0FBQyxHQUFHLEVBQUUsR0FBRyxDQUFDLEVBQ3RFLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxnQkFBZ0IsQ0FBQyxVQUFVLEVBQ25ELE1BQU0sQ0FDUCxDQUFDO0lBQ0osQ0FBQzs7O1lBcEJGLElBQUksU0FBQztnQkFDSixJQUFJLEVBQUUsZUFBZTtnQkFDckIsSUFBSSxFQUFFLEtBQUs7YUFDWjs7OztZQUxRLGtCQUFrQjtZQUZ6QixnQkFBZ0I7Ozs7Ozs7SUFVZCwrQ0FBOEM7Ozs7O0lBQzlDLDZDQUEwQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFBpcGUsIFBpcGVUcmFuc2Zvcm0gfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHtcbiAgRGF0ZVRpbWVBY3Rpb25zLFxuICBGb3JtYXR0ZXJTZXJ2aWNlXG59IGZyb20gJy4vLi4vc2VydmljZXMvZm9ybWF0dGVyLnNlcnZpY2UnO1xuaW1wb3J0IHsgVHJhbnNsYXRpb25TZXJ2aWNlIH0gZnJvbSAnLi8uLi9zZXJ2aWNlcy90cmFuc2xhdGlvbi5zZXJ2aWNlJztcblxuQFBpcGUoe1xuICBuYW1lOiAnY214VGltZU1vbWVudCcsXG4gIHB1cmU6IGZhbHNlXG59KVxuZXhwb3J0IGNsYXNzIENteFRpbWVNb21lbnRQaXBlIGltcGxlbWVudHMgUGlwZVRyYW5zZm9ybSB7XG4gIGNvbnN0cnVjdG9yKFxuICAgIHByaXZhdGUgdHJhbnNsYXRpb25TZXJ2aWNlOiBUcmFuc2xhdGlvblNlcnZpY2UsXG4gICAgcHJpdmF0ZSBmb3JtYXR0ZXJTZXJ2aWNlOiBGb3JtYXR0ZXJTZXJ2aWNlXG4gICkge31cblxuICBwdWJsaWMgdHJhbnNmb3JtKFxuICAgIGRhdGVUaW1lLFxuICAgIGFjdGlvbjogRGF0ZVRpbWVBY3Rpb25zID0gRGF0ZVRpbWVBY3Rpb25zLkNvbnZlcnRUb0xvY2FsXG4gICk6IHN0cmluZyB7XG4gICAgcmV0dXJuIHRoaXMuZm9ybWF0dGVyU2VydmljZS5mb3JtYXREYXRlVGltZU1vbWVudChcbiAgICAgIGRhdGVUaW1lLFxuICAgICAgdGhpcy50cmFuc2xhdGlvblNlcnZpY2Uuc2VsZWN0ZWRMYW5ndWFnZS5sYW5ndWFnZUlTTy5yZXBsYWNlKCdfJywgJy0nKSxcbiAgICAgIHRoaXMudHJhbnNsYXRpb25TZXJ2aWNlLnNlbGVjdGVkTGFuZ3VhZ2UuZm9ybWF0VGltZSxcbiAgICAgIGFjdGlvblxuICAgICk7XG4gIH1cbn1cbiJdfQ==